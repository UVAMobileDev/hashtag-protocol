{"version":3,"sources":["webpack:///./node_modules/ethereumjs-common/dist/chains/index.js","webpack:///./node_modules/bnc-onboard/node_modules/ethereumjs-tx/dist/fake.js","webpack:///./node_modules/ethereumjs-common/dist/hardforks/index.js","webpack:///./node_modules/bnc-onboard/node_modules/ethereumjs-tx/dist/index.js","webpack:///./node_modules/ethereumjs-common/dist/index.js","webpack:///./node_modules/bnc-onboard/node_modules/ethereumjs-tx/dist/transaction.js"],"names":["Object","defineProperty","exports","value","chains","names","mainnet","ropsten","rinkeby","kovan","goerli","__extends","this","extendStatics","d","b","setPrototypeOf","__proto__","Array","p","hasOwnProperty","__","constructor","prototype","create","ethereumjs_util_1","buffer_1","transaction_1","FakeTransaction","_super","data","opts","_this","call","enumerable","configurable","get","getSenderAddress","set","val","_from","toBuffer","txData","from","hash","includeSignature","toString","fakeKey","Buffer","concat","slice","sign","default","hardforks","Transaction","fake_1","__assign","assign","t","s","i","n","arguments","length","apply","chains_1","hardforks_1","Common","chain","hardfork","supportedHardforks","_chainParams","setChain","_hardfork","_supportedHardforks","undefined","setHardfork","forCustomChain","baseChain","customChainParams","standardChainParams","_getChainParams","Error","required","_i","required_1","param","_isSupportedHardfork","changed","hardforkChanges_1","hfChanges","_chooseHardfork","onlySupported","_getHardfork","hfs","hfs_1","hf","chainName","_a","supportedHf","topic","name","hardforkChanges_2","v","paramByBlock","blockNumber","activeHfs","activeHardforks","hardforkIsActiveOnBlock","hfBlock","hardforkBlock","activeOnBlock","hardforkGteHardfork","hardfork1","hardfork2","onlyActive","posHf1","posHf2","index","hardforks_2","gteHardfork","hardforkIsActiveOnChain","hfs_2","push","activeHardfork","isHardforkBlock","consensus","finality","genesis","bootstrapNodes","chainId","networkId","ethereumjs_common_1","N_DIV_2","BN","common","_common","fields","allowLess","alias","allowZero","defineProperties","bind","_validateV","_overrideVSetterWithValidation","toCreationAddress","to","items","raw","_implementsEIP155","getChainId","stripZeros","rlphash","pubkey","getSenderPublicKey","publicToAddress","verifySignature","_senderPubKey","msgHash","cmp","bufferToInt","useChainIdWhileRecoveringPubKey","ecrecover","r","e","privateKey","sig","ecsign","getDataFee","cost","iaddn","getBaseFee","fee","getUpfrontCost","gasLimit","imul","gasPrice","iadd","validate","stringError","errors","join","serialize","rlp","encode","toJSON","labels","vInt","isValidEIP155V","_isSigned","vDescriptor","getOwnPropertyDescriptor","onEIP155BlockOrLater","vAndChainIdMeetEIP155Conditions"],"mappings":"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","file":"js/chunk-0566dbb1.95dded59.js","sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.chains = {\n    names: {\n        '1': 'mainnet',\n        '3': 'ropsten',\n        '4': 'rinkeby',\n        '42': 'kovan',\n        '6284': 'goerli',\n    },\n    mainnet: require('./mainnet.json'),\n    ropsten: require('./ropsten.json'),\n    rinkeby: require('./rinkeby.json'),\n    kovan: require('./kovan.json'),\n    goerli: require('./goerli.json'),\n};\n//# sourceMappingURL=index.js.map","\"use strict\";\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar ethereumjs_util_1 = require(\"ethereumjs-util\");\nvar buffer_1 = require(\"buffer\");\nvar transaction_1 = require(\"./transaction\");\n/**\n * Creates a new transaction object that doesn't need to be signed.\n *\n * @param data - A transaction can be initialized with its rlp representation, an array containing\n * the value of its fields in order, or an object containing them by name.\n *\n * @param opts - The transaction's options, used to indicate the chain and hardfork the\n * transactions belongs to.\n *\n * @see Transaction\n */\nvar FakeTransaction = /** @class */ (function (_super) {\n    __extends(FakeTransaction, _super);\n    function FakeTransaction(data, opts) {\n        if (data === void 0) { data = {}; }\n        if (opts === void 0) { opts = {}; }\n        var _this = _super.call(this, data, opts) || this;\n        Object.defineProperty(_this, 'from', {\n            enumerable: true,\n            configurable: true,\n            get: function () { return _this.getSenderAddress(); },\n            set: function (val) {\n                if (val) {\n                    _this._from = ethereumjs_util_1.toBuffer(val);\n                }\n            },\n        });\n        var txData = data;\n        if (txData.from) {\n            _this.from = ethereumjs_util_1.toBuffer(txData.from);\n        }\n        return _this;\n    }\n    /**\n     * Computes a sha3-256 hash of the serialized tx, using the sender address to generate a fake\n     * signature.\n     *\n     * @param includeSignature - Whether or not to include the signature\n     */\n    FakeTransaction.prototype.hash = function (includeSignature) {\n        if (includeSignature === void 0) { includeSignature = true; }\n        if (includeSignature && this._from && this._from.toString('hex') !== '') {\n            // include a fake signature using the from address as a private key\n            var fakeKey = buffer_1.Buffer.concat([this._from, this._from.slice(0, 12)]);\n            this.sign(fakeKey);\n        }\n        return _super.prototype.hash.call(this, includeSignature);\n    };\n    return FakeTransaction;\n}(transaction_1.default));\nexports.default = FakeTransaction;\n//# sourceMappingURL=fake.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.hardforks = [\n    ['chainstart', require('./chainstart.json')],\n    ['homestead', require('./homestead.json')],\n    ['dao', require('./dao.json')],\n    ['tangerineWhistle', require('./tangerineWhistle.json')],\n    ['spuriousDragon', require('./spuriousDragon.json')],\n    ['byzantium', require('./byzantium.json')],\n    ['constantinople', require('./constantinople.json')],\n    ['petersburg', require('./petersburg.json')],\n    ['istanbul', require('./istanbul.json')],\n    ['muirGlacier', require('./muirGlacier.json')],\n];\n//# sourceMappingURL=index.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar transaction_1 = require(\"./transaction\");\nexports.Transaction = transaction_1.default;\nvar fake_1 = require(\"./fake\");\nexports.FakeTransaction = fake_1.default;\n//# sourceMappingURL=index.js.map","\"use strict\";\nvar __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar chains_1 = require(\"./chains\");\nvar hardforks_1 = require(\"./hardforks\");\n/**\n * Common class to access chain and hardfork parameters\n */\nvar Common = /** @class */ (function () {\n    /**\n     * @constructor\n     * @param chain String ('mainnet') or Number (1) chain\n     * @param hardfork String identifier ('byzantium') for hardfork (optional)\n     * @param supportedHardforks Limit parameter returns to the given hardforks (optional)\n     */\n    function Common(chain, hardfork, supportedHardforks) {\n        this._chainParams = this.setChain(chain);\n        this._hardfork = null;\n        this._supportedHardforks = supportedHardforks === undefined ? [] : supportedHardforks;\n        if (hardfork) {\n            this.setHardfork(hardfork);\n        }\n    }\n    /**\n     * Creates a Common object for a custom chain, based on a standard one. It uses all the [[Chain]]\n     * params from [[baseChain]] except the ones overridden in [[customChainParams]].\n     *\n     * @param baseChain The name (`mainnet`) or id (`1`) of a standard chain used to base the custom\n     * chain params on.\n     * @param customChainParams The custom parameters of the chain.\n     * @param hardfork String identifier ('byzantium') for hardfork (optional)\n     * @param supportedHardforks Limit parameter returns to the given hardforks (optional)\n     */\n    Common.forCustomChain = function (baseChain, customChainParams, hardfork, supportedHardforks) {\n        var standardChainParams = Common._getChainParams(baseChain);\n        return new Common(__assign(__assign({}, standardChainParams), customChainParams), hardfork, supportedHardforks);\n    };\n    Common._getChainParams = function (chain) {\n        if (typeof chain === 'number') {\n            if (chains_1.chains['names'][chain]) {\n                return chains_1.chains[chains_1.chains['names'][chain]];\n            }\n            throw new Error(\"Chain with ID \" + chain + \" not supported\");\n        }\n        if (chains_1.chains[chain]) {\n            return chains_1.chains[chain];\n        }\n        throw new Error(\"Chain with name \" + chain + \" not supported\");\n    };\n    /**\n     * Sets the chain\n     * @param chain String ('mainnet') or Number (1) chain\n     *     representation. Or, a Dictionary of chain parameters for a private network.\n     * @returns The dictionary with parameters set as chain\n     */\n    Common.prototype.setChain = function (chain) {\n        if (typeof chain === 'number' || typeof chain === 'string') {\n            this._chainParams = Common._getChainParams(chain);\n        }\n        else if (typeof chain === 'object') {\n            var required = ['networkId', 'genesis', 'hardforks', 'bootstrapNodes'];\n            for (var _i = 0, required_1 = required; _i < required_1.length; _i++) {\n                var param = required_1[_i];\n                if (chain[param] === undefined) {\n                    throw new Error(\"Missing required chain parameter: \" + param);\n                }\n            }\n            this._chainParams = chain;\n        }\n        else {\n            throw new Error('Wrong input format');\n        }\n        return this._chainParams;\n    };\n    /**\n     * Sets the hardfork to get params for\n     * @param hardfork String identifier ('byzantium')\n     */\n    Common.prototype.setHardfork = function (hardfork) {\n        if (!this._isSupportedHardfork(hardfork)) {\n            throw new Error(\"Hardfork \" + hardfork + \" not set as supported in supportedHardforks\");\n        }\n        var changed = false;\n        for (var _i = 0, hardforkChanges_1 = hardforks_1.hardforks; _i < hardforkChanges_1.length; _i++) {\n            var hfChanges = hardforkChanges_1[_i];\n            if (hfChanges[0] === hardfork) {\n                this._hardfork = hardfork;\n                changed = true;\n            }\n        }\n        if (!changed) {\n            throw new Error(\"Hardfork with name \" + hardfork + \" not supported\");\n        }\n    };\n    /**\n     * Internal helper function to choose between hardfork set and hardfork provided as param\n     * @param hardfork Hardfork given to function as a parameter\n     * @returns Hardfork chosen to be used\n     */\n    Common.prototype._chooseHardfork = function (hardfork, onlySupported) {\n        onlySupported = onlySupported === undefined ? true : onlySupported;\n        if (!hardfork) {\n            if (!this._hardfork) {\n                throw new Error('Method called with neither a hardfork set nor provided by param');\n            }\n            else {\n                hardfork = this._hardfork;\n            }\n        }\n        else if (onlySupported && !this._isSupportedHardfork(hardfork)) {\n            throw new Error(\"Hardfork \" + hardfork + \" not set as supported in supportedHardforks\");\n        }\n        return hardfork;\n    };\n    /**\n     * Internal helper function, returns the params for the given hardfork for the chain set\n     * @param hardfork Hardfork name\n     * @returns Dictionary with hardfork params\n     */\n    Common.prototype._getHardfork = function (hardfork) {\n        var hfs = this.hardforks();\n        for (var _i = 0, hfs_1 = hfs; _i < hfs_1.length; _i++) {\n            var hf = hfs_1[_i];\n            if (hf['name'] === hardfork)\n                return hf;\n        }\n        throw new Error(\"Hardfork \" + hardfork + \" not defined for chain \" + this.chainName());\n    };\n    /**\n     * Internal helper function to check if a hardfork is set to be supported by the library\n     * @param hardfork Hardfork name\n     * @returns True if hardfork is supported\n     */\n    Common.prototype._isSupportedHardfork = function (hardfork) {\n        if (this._supportedHardforks.length > 0) {\n            for (var _i = 0, _a = this._supportedHardforks; _i < _a.length; _i++) {\n                var supportedHf = _a[_i];\n                if (hardfork === supportedHf)\n                    return true;\n            }\n        }\n        else {\n            return true;\n        }\n        return false;\n    };\n    /**\n     * Returns the parameter corresponding to a hardfork\n     * @param topic Parameter topic ('gasConfig', 'gasPrices', 'vm', 'pow', 'casper', 'sharding')\n     * @param name Parameter name (e.g. 'minGasLimit' for 'gasConfig' topic)\n     * @param hardfork Hardfork name, optional if hardfork set\n     */\n    Common.prototype.param = function (topic, name, hardfork) {\n        hardfork = this._chooseHardfork(hardfork);\n        var value;\n        for (var _i = 0, hardforkChanges_2 = hardforks_1.hardforks; _i < hardforkChanges_2.length; _i++) {\n            var hfChanges = hardforkChanges_2[_i];\n            if (!hfChanges[1][topic]) {\n                throw new Error(\"Topic \" + topic + \" not defined\");\n            }\n            if (hfChanges[1][topic][name] !== undefined) {\n                value = hfChanges[1][topic][name].v;\n            }\n            if (hfChanges[0] === hardfork)\n                break;\n        }\n        if (value === undefined) {\n            throw new Error(topic + \" value for \" + name + \" not found\");\n        }\n        return value;\n    };\n    /**\n     * Returns a parameter for the hardfork active on block number\n     * @param topic Parameter topic\n     * @param name Parameter name\n     * @param blockNumber Block number\n     */\n    Common.prototype.paramByBlock = function (topic, name, blockNumber) {\n        var activeHfs = this.activeHardforks(blockNumber);\n        var hardfork = activeHfs[activeHfs.length - 1]['name'];\n        return this.param(topic, name, hardfork);\n    };\n    /**\n     * Checks if set or provided hardfork is active on block number\n     * @param hardfork Hardfork name or null (for HF set)\n     * @param blockNumber\n     * @param opts Hardfork options (onlyActive unused)\n     * @returns True if HF is active on block number\n     */\n    Common.prototype.hardforkIsActiveOnBlock = function (hardfork, blockNumber, opts) {\n        opts = opts !== undefined ? opts : {};\n        var onlySupported = opts.onlySupported === undefined ? false : opts.onlySupported;\n        hardfork = this._chooseHardfork(hardfork, onlySupported);\n        var hfBlock = this.hardforkBlock(hardfork);\n        if (hfBlock !== null && blockNumber >= hfBlock)\n            return true;\n        return false;\n    };\n    /**\n     * Alias to hardforkIsActiveOnBlock when hardfork is set\n     * @param blockNumber\n     * @param opts Hardfork options (onlyActive unused)\n     * @returns True if HF is active on block number\n     */\n    Common.prototype.activeOnBlock = function (blockNumber, opts) {\n        return this.hardforkIsActiveOnBlock(null, blockNumber, opts);\n    };\n    /**\n     * Sequence based check if given or set HF1 is greater than or equal HF2\n     * @param hardfork1 Hardfork name or null (if set)\n     * @param hardfork2 Hardfork name\n     * @param opts Hardfork options\n     * @returns True if HF1 gte HF2\n     */\n    Common.prototype.hardforkGteHardfork = function (hardfork1, hardfork2, opts) {\n        opts = opts !== undefined ? opts : {};\n        var onlyActive = opts.onlyActive === undefined ? false : opts.onlyActive;\n        hardfork1 = this._chooseHardfork(hardfork1, opts.onlySupported);\n        var hardforks;\n        if (onlyActive) {\n            hardforks = this.activeHardforks(null, opts);\n        }\n        else {\n            hardforks = this.hardforks();\n        }\n        var posHf1 = -1, posHf2 = -1;\n        var index = 0;\n        for (var _i = 0, hardforks_2 = hardforks; _i < hardforks_2.length; _i++) {\n            var hf = hardforks_2[_i];\n            if (hf['name'] === hardfork1)\n                posHf1 = index;\n            if (hf['name'] === hardfork2)\n                posHf2 = index;\n            index += 1;\n        }\n        return posHf1 >= posHf2;\n    };\n    /**\n     * Alias to hardforkGteHardfork when hardfork is set\n     * @param hardfork Hardfork name\n     * @param opts Hardfork options\n     * @returns True if hardfork set is greater than hardfork provided\n     */\n    Common.prototype.gteHardfork = function (hardfork, opts) {\n        return this.hardforkGteHardfork(null, hardfork, opts);\n    };\n    /**\n     * Checks if given or set hardfork is active on the chain\n     * @param hardfork Hardfork name, optional if HF set\n     * @param opts Hardfork options (onlyActive unused)\n     * @returns True if hardfork is active on the chain\n     */\n    Common.prototype.hardforkIsActiveOnChain = function (hardfork, opts) {\n        opts = opts !== undefined ? opts : {};\n        var onlySupported = opts.onlySupported === undefined ? false : opts.onlySupported;\n        hardfork = this._chooseHardfork(hardfork, onlySupported);\n        for (var _i = 0, _a = this.hardforks(); _i < _a.length; _i++) {\n            var hf = _a[_i];\n            if (hf['name'] === hardfork && hf['block'] !== null)\n                return true;\n        }\n        return false;\n    };\n    /**\n     * Returns the active hardfork switches for the current chain\n     * @param blockNumber up to block if provided, otherwise for the whole chain\n     * @param opts Hardfork options (onlyActive unused)\n     * @return Array with hardfork arrays\n     */\n    Common.prototype.activeHardforks = function (blockNumber, opts) {\n        opts = opts !== undefined ? opts : {};\n        var activeHardforks = [];\n        var hfs = this.hardforks();\n        for (var _i = 0, hfs_2 = hfs; _i < hfs_2.length; _i++) {\n            var hf = hfs_2[_i];\n            if (hf['block'] === null)\n                continue;\n            if (blockNumber !== undefined && blockNumber !== null && blockNumber < hf['block'])\n                break;\n            if (opts.onlySupported && !this._isSupportedHardfork(hf['name']))\n                continue;\n            activeHardforks.push(hf);\n        }\n        return activeHardforks;\n    };\n    /**\n     * Returns the latest active hardfork name for chain or block or throws if unavailable\n     * @param blockNumber up to block if provided, otherwise for the whole chain\n     * @param opts Hardfork options (onlyActive unused)\n     * @return Hardfork name\n     */\n    Common.prototype.activeHardfork = function (blockNumber, opts) {\n        opts = opts !== undefined ? opts : {};\n        var activeHardforks = this.activeHardforks(blockNumber, opts);\n        if (activeHardforks.length > 0) {\n            return activeHardforks[activeHardforks.length - 1]['name'];\n        }\n        else {\n            throw new Error(\"No (supported) active hardfork found\");\n        }\n    };\n    /**\n     * Returns the hardfork change block for hardfork provided or set\n     * @param hardfork Hardfork name, optional if HF set\n     * @returns Block number\n     */\n    Common.prototype.hardforkBlock = function (hardfork) {\n        hardfork = this._chooseHardfork(hardfork, false);\n        return this._getHardfork(hardfork)['block'];\n    };\n    /**\n     * True if block number provided is the hardfork (given or set) change block of the current chain\n     * @param blockNumber Number of the block to check\n     * @param hardfork Hardfork name, optional if HF set\n     * @returns True if blockNumber is HF block\n     */\n    Common.prototype.isHardforkBlock = function (blockNumber, hardfork) {\n        hardfork = this._chooseHardfork(hardfork, false);\n        if (this.hardforkBlock(hardfork) === blockNumber) {\n            return true;\n        }\n        else {\n            return false;\n        }\n    };\n    /**\n     * Provide the consensus type for the hardfork set or provided as param\n     * @param hardfork Hardfork name, optional if hardfork set\n     * @returns Consensus type (e.g. 'pow', 'poa')\n     */\n    Common.prototype.consensus = function (hardfork) {\n        hardfork = this._chooseHardfork(hardfork);\n        return this._getHardfork(hardfork)['consensus'];\n    };\n    /**\n     * Provide the finality type for the hardfork set or provided as param\n     * @param {String} hardfork Hardfork name, optional if hardfork set\n     * @returns {String} Finality type (e.g. 'pos', null of no finality)\n     */\n    Common.prototype.finality = function (hardfork) {\n        hardfork = this._chooseHardfork(hardfork);\n        return this._getHardfork(hardfork)['finality'];\n    };\n    /**\n     * Returns the Genesis parameters of current chain\n     * @returns Genesis dictionary\n     */\n    Common.prototype.genesis = function () {\n        return this._chainParams['genesis'];\n    };\n    /**\n     * Returns the hardforks for current chain\n     * @returns {Array} Array with arrays of hardforks\n     */\n    Common.prototype.hardforks = function () {\n        return this._chainParams['hardforks'];\n    };\n    /**\n     * Returns bootstrap nodes for the current chain\n     * @returns {Dictionary} Dict with bootstrap nodes\n     */\n    Common.prototype.bootstrapNodes = function () {\n        return this._chainParams['bootstrapNodes'];\n    };\n    /**\n     * Returns the hardfork set\n     * @returns Hardfork name\n     */\n    Common.prototype.hardfork = function () {\n        return this._hardfork;\n    };\n    /**\n     * Returns the Id of current chain\n     * @returns chain Id\n     */\n    Common.prototype.chainId = function () {\n        return this._chainParams['chainId'];\n    };\n    /**\n     * Returns the name of current chain\n     * @returns chain name (lower case)\n     */\n    Common.prototype.chainName = function () {\n        return chains_1.chains['names'][this.chainId()] || this._chainParams['name'];\n    };\n    /**\n     * Returns the Id of current network\n     * @returns network Id\n     */\n    Common.prototype.networkId = function () {\n        return this._chainParams['networkId'];\n    };\n    return Common;\n}());\nexports.default = Common;\n//# sourceMappingURL=index.js.map","\"use strict\";\nvar __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar ethereumjs_util_1 = require(\"ethereumjs-util\");\nvar ethereumjs_common_1 = require(\"ethereumjs-common\");\nvar buffer_1 = require(\"buffer\");\n// secp256k1n/2\nvar N_DIV_2 = new ethereumjs_util_1.BN('7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a0', 16);\n/**\n * An Ethereum transaction.\n */\nvar Transaction = /** @class */ (function () {\n    /**\n     * Creates a new transaction from an object with its fields' values.\n     *\n     * @param data - A transaction can be initialized with its rlp representation, an array containing\n     * the value of its fields in order, or an object containing them by name.\n     *\n     * @param opts - The transaction's options, used to indicate the chain and hardfork the\n     * transactions belongs to.\n     *\n     * @note Transaction objects implement EIP155 by default. To disable it, use the constructor's\n     * second parameter to set a chain and hardfork before EIP155 activation (i.e. before Spurious\n     * Dragon.)\n     *\n     * @example\n     * ```js\n     * const txData = {\n     *   nonce: '0x00',\n     *   gasPrice: '0x09184e72a000',\n     *   gasLimit: '0x2710',\n     *   to: '0x0000000000000000000000000000000000000000',\n     *   value: '0x00',\n     *   data: '0x7f7465737432000000000000000000000000000000000000000000000000000000600057',\n     *   v: '0x1c',\n     *   r: '0x5e1d3a76fbf824220eafc8c79ad578ad2b67d01b0c2425eb1f1347e8f50882ab',\n     *   s: '0x5bd428537f05f9830e93792f90ea6a3e2d1ee84952dd96edbae9f658f831ab13'\n     * };\n     * const tx = new Transaction(txData);\n     * ```\n     */\n    function Transaction(data, opts) {\n        if (data === void 0) { data = {}; }\n        if (opts === void 0) { opts = {}; }\n        // instantiate Common class instance based on passed options\n        if (opts.common) {\n            if (opts.chain || opts.hardfork) {\n                throw new Error('Instantiation with both opts.common, and opts.chain and opts.hardfork parameter not allowed!');\n            }\n            this._common = opts.common;\n        }\n        else {\n            var chain = opts.chain ? opts.chain : 'mainnet';\n            var hardfork = opts.hardfork ? opts.hardfork : 'petersburg';\n            this._common = new ethereumjs_common_1.default(chain, hardfork);\n        }\n        // Define Properties\n        var fields = [\n            {\n                name: 'nonce',\n                length: 32,\n                allowLess: true,\n                default: new buffer_1.Buffer([]),\n            },\n            {\n                name: 'gasPrice',\n                length: 32,\n                allowLess: true,\n                default: new buffer_1.Buffer([]),\n            },\n            {\n                name: 'gasLimit',\n                alias: 'gas',\n                length: 32,\n                allowLess: true,\n                default: new buffer_1.Buffer([]),\n            },\n            {\n                name: 'to',\n                allowZero: true,\n                length: 20,\n                default: new buffer_1.Buffer([]),\n            },\n            {\n                name: 'value',\n                length: 32,\n                allowLess: true,\n                default: new buffer_1.Buffer([]),\n            },\n            {\n                name: 'data',\n                alias: 'input',\n                allowZero: true,\n                default: new buffer_1.Buffer([]),\n            },\n            {\n                name: 'v',\n                allowZero: true,\n                default: new buffer_1.Buffer([]),\n            },\n            {\n                name: 'r',\n                length: 32,\n                allowZero: true,\n                allowLess: true,\n                default: new buffer_1.Buffer([]),\n            },\n            {\n                name: 's',\n                length: 32,\n                allowZero: true,\n                allowLess: true,\n                default: new buffer_1.Buffer([]),\n            },\n        ];\n        // attached serialize\n        ethereumjs_util_1.defineProperties(this, fields, data);\n        /**\n         * @property {Buffer} from (read only) sender address of this transaction, mathematically derived from other parameters.\n         * @name from\n         * @memberof Transaction\n         */\n        Object.defineProperty(this, 'from', {\n            enumerable: true,\n            configurable: true,\n            get: this.getSenderAddress.bind(this),\n        });\n        this._validateV(this.v);\n        this._overrideVSetterWithValidation();\n    }\n    /**\n     * If the tx's `to` is to the creation address\n     */\n    Transaction.prototype.toCreationAddress = function () {\n        return this.to.toString('hex') === '';\n    };\n    /**\n     * Computes a sha3-256 hash of the serialized tx\n     * @param includeSignature - Whether or not to include the signature\n     */\n    Transaction.prototype.hash = function (includeSignature) {\n        if (includeSignature === void 0) { includeSignature = true; }\n        var items;\n        if (includeSignature) {\n            items = this.raw;\n        }\n        else {\n            if (this._implementsEIP155()) {\n                items = this.raw.slice(0, 6).concat([\n                    ethereumjs_util_1.toBuffer(this.getChainId()),\n                    // TODO: stripping zeros should probably be a responsibility of the rlp module\n                    ethereumjs_util_1.stripZeros(ethereumjs_util_1.toBuffer(0)),\n                    ethereumjs_util_1.stripZeros(ethereumjs_util_1.toBuffer(0)),\n                ]);\n            }\n            else {\n                items = this.raw.slice(0, 6);\n            }\n        }\n        // create hash\n        return ethereumjs_util_1.rlphash(items);\n    };\n    /**\n     * returns chain ID\n     */\n    Transaction.prototype.getChainId = function () {\n        return this._common.chainId();\n    };\n    /**\n     * returns the sender's address\n     */\n    Transaction.prototype.getSenderAddress = function () {\n        if (this._from) {\n            return this._from;\n        }\n        var pubkey = this.getSenderPublicKey();\n        this._from = ethereumjs_util_1.publicToAddress(pubkey);\n        return this._from;\n    };\n    /**\n     * returns the public key of the sender\n     */\n    Transaction.prototype.getSenderPublicKey = function () {\n        if (!this.verifySignature()) {\n            throw new Error('Invalid Signature');\n        }\n        // If the signature was verified successfully the _senderPubKey field is defined\n        return this._senderPubKey;\n    };\n    /**\n     * Determines if the signature is valid\n     */\n    Transaction.prototype.verifySignature = function () {\n        var msgHash = this.hash(false);\n        // All transaction signatures whose s-value is greater than secp256k1n/2 are considered invalid.\n        if (this._common.gteHardfork('homestead') && new ethereumjs_util_1.BN(this.s).cmp(N_DIV_2) === 1) {\n            return false;\n        }\n        try {\n            var v = ethereumjs_util_1.bufferToInt(this.v);\n            var useChainIdWhileRecoveringPubKey = v >= this.getChainId() * 2 + 35 && this._common.gteHardfork('spuriousDragon');\n            this._senderPubKey = ethereumjs_util_1.ecrecover(msgHash, v, this.r, this.s, useChainIdWhileRecoveringPubKey ? this.getChainId() : undefined);\n        }\n        catch (e) {\n            return false;\n        }\n        return !!this._senderPubKey;\n    };\n    /**\n     * sign a transaction with a given private key\n     * @param privateKey - Must be 32 bytes in length\n     */\n    Transaction.prototype.sign = function (privateKey) {\n        // We clear any previous signature before signing it. Otherwise, _implementsEIP155's can give\n        // different results if this tx was already signed.\n        this.v = new buffer_1.Buffer([]);\n        this.s = new buffer_1.Buffer([]);\n        this.r = new buffer_1.Buffer([]);\n        var msgHash = this.hash(false);\n        var sig = ethereumjs_util_1.ecsign(msgHash, privateKey);\n        if (this._implementsEIP155()) {\n            sig.v += this.getChainId() * 2 + 8;\n        }\n        Object.assign(this, sig);\n    };\n    /**\n     * The amount of gas paid for the data in this tx\n     */\n    Transaction.prototype.getDataFee = function () {\n        var data = this.raw[5];\n        var cost = new ethereumjs_util_1.BN(0);\n        for (var i = 0; i < data.length; i++) {\n            data[i] === 0\n                ? cost.iaddn(this._common.param('gasPrices', 'txDataZero'))\n                : cost.iaddn(this._common.param('gasPrices', 'txDataNonZero'));\n        }\n        return cost;\n    };\n    /**\n     * the minimum amount of gas the tx must have (DataFee + TxFee + Creation Fee)\n     */\n    Transaction.prototype.getBaseFee = function () {\n        var fee = this.getDataFee().iaddn(this._common.param('gasPrices', 'tx'));\n        if (this._common.gteHardfork('homestead') && this.toCreationAddress()) {\n            fee.iaddn(this._common.param('gasPrices', 'txCreation'));\n        }\n        return fee;\n    };\n    /**\n     * the up front amount that an account must have for this transaction to be valid\n     */\n    Transaction.prototype.getUpfrontCost = function () {\n        return new ethereumjs_util_1.BN(this.gasLimit).imul(new ethereumjs_util_1.BN(this.gasPrice)).iadd(new ethereumjs_util_1.BN(this.value));\n    };\n    Transaction.prototype.validate = function (stringError) {\n        if (stringError === void 0) { stringError = false; }\n        var errors = [];\n        if (!this.verifySignature()) {\n            errors.push('Invalid Signature');\n        }\n        if (this.getBaseFee().cmp(new ethereumjs_util_1.BN(this.gasLimit)) > 0) {\n            errors.push([\"gas limit is too low. Need at least \" + this.getBaseFee()]);\n        }\n        if (stringError === false) {\n            return errors.length === 0;\n        }\n        else {\n            return errors.join(' ');\n        }\n    };\n    /**\n     * Returns the rlp encoding of the transaction\n     */\n    Transaction.prototype.serialize = function () {\n        // Note: This never gets executed, defineProperties overwrites it.\n        return ethereumjs_util_1.rlp.encode(this.raw);\n    };\n    /**\n     * Returns the transaction in JSON format\n     * @see {@link https://github.com/ethereumjs/ethereumjs-util/blob/master/docs/index.md#defineproperties|ethereumjs-util}\n     */\n    Transaction.prototype.toJSON = function (labels) {\n        if (labels === void 0) { labels = false; }\n        // Note: This never gets executed, defineProperties overwrites it.\n        return {};\n    };\n    Transaction.prototype._validateV = function (v) {\n        if (v === undefined || v.length === 0) {\n            return;\n        }\n        if (!this._common.gteHardfork('spuriousDragon')) {\n            return;\n        }\n        var vInt = ethereumjs_util_1.bufferToInt(v);\n        if (vInt === 27 || vInt === 28) {\n            return;\n        }\n        var isValidEIP155V = vInt === this.getChainId() * 2 + 35 || vInt === this.getChainId() * 2 + 36;\n        if (!isValidEIP155V) {\n            throw new Error(\"Incompatible EIP155-based V \" + vInt + \" and chain id \" + this.getChainId() + \". See the second parameter of the Transaction constructor to set the chain id.\");\n        }\n    };\n    Transaction.prototype._isSigned = function () {\n        return this.v.length > 0 && this.r.length > 0 && this.s.length > 0;\n    };\n    Transaction.prototype._overrideVSetterWithValidation = function () {\n        var _this = this;\n        var vDescriptor = Object.getOwnPropertyDescriptor(this, 'v');\n        Object.defineProperty(this, 'v', __assign({}, vDescriptor, { set: function (v) {\n                if (v !== undefined) {\n                    _this._validateV(ethereumjs_util_1.toBuffer(v));\n                }\n                vDescriptor.set(v);\n            } }));\n    };\n    Transaction.prototype._implementsEIP155 = function () {\n        var onEIP155BlockOrLater = this._common.gteHardfork('spuriousDragon');\n        if (!this._isSigned()) {\n            // We sign with EIP155 all unsigned transactions after spuriousDragon\n            return onEIP155BlockOrLater;\n        }\n        // EIP155 spec:\n        // If block.number >= 2,675,000 and v = CHAIN_ID * 2 + 35 or v = CHAIN_ID * 2 + 36, then when computing\n        // the hash of a transaction for purposes of signing or recovering, instead of hashing only the first six\n        // elements (i.e. nonce, gasprice, startgas, to, value, data), hash nine elements, with v replaced by\n        // CHAIN_ID, r = 0 and s = 0.\n        var v = ethereumjs_util_1.bufferToInt(this.v);\n        var vAndChainIdMeetEIP155Conditions = v === this.getChainId() * 2 + 35 || v === this.getChainId() * 2 + 36;\n        return vAndChainIdMeetEIP155Conditions && onEIP155BlockOrLater;\n    };\n    return Transaction;\n}());\nexports.default = Transaction;\n//# sourceMappingURL=transaction.js.map"],"sourceRoot":""}