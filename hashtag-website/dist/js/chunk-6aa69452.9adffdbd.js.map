{"version":3,"sources":["webpack:///./node_modules/bnc-onboard/node_modules/bn.js/lib/bn.js"],"names":["assert","val","msg","Error","inherits","ctor","superCtor","super_","TempCtor","prototype","constructor","BN","number","base","endian","isBN","this","negative","words","length","red","_init","Buffer","module","exports","wordSize","e","parseHex","str","start","end","r","len","Math","min","i","c","charCodeAt","parseBase","mul","num","Array","isArray","max","left","right","cmp","_initNumber","_initArray","toString","replace","_parseHex","_parseBase","strip","toArray","ceil","j","w","off","limbLen","limbPow","total","mod","word","imuln","_iaddn","pow","copy","dest","clone","_expand","size","_normSign","inspect","zeros","groupSizes","groupBases","toBitArray","bitLength","bit","wbit","smallMulTo","self","out","a","b","lo","carry","k","ncarry","rword","maxJ","padding","groupSize","groupBase","isZero","modn","idivn","toNumber","ret","toJSON","toBuffer","toArrayLike","ArrayType","byteLength","reqLength","littleEndian","res","q","andln","iushrn","clz32","_countBits","t","_zeroBits","hi","zeroBits","toTwos","width","abs","inotn","iaddn","fromTwos","testn","notn","ineg","isNeg","neg","iuor","ior","or","uor","iuand","iand","and","uand","iuxor","ixor","xor","uxor","bytesNeeded","bitsLeft","setn","iadd","isub","add","sub","comb10MulTo","mid","o","a0","al0","ah0","a1","al1","ah1","a2","al2","ah2","a3","al3","ah3","a4","al4","ah4","a5","al5","ah5","a6","al6","ah6","a7","al7","ah7","a8","al8","ah8","a9","al9","ah9","b0","bl0","bh0","b1","bl1","bh1","b2","bl2","bh2","b3","bl3","bh3","b4","bl4","bh4","b5","bl5","bh5","b6","bl6","bh6","b7","bl7","bh7","b8","bl8","bh8","b9","bl9","bh9","imul","w0","w1","w2","w3","w4","w5","w6","w7","w8","w9","w10","w11","w12","w13","w14","w15","w16","w17","w18","bigMulTo","hncarry","jumboMulTo","fftm","FFTM","mulp","x","y","mulTo","makeRBT","N","l","revBin","rb","permute","rbt","rws","iws","rtws","itws","transform","s","rtwdf","cos","PI","itwdf","sin","p","rtwdf_","itwdf_","re","ie","ro","io","rx","guessLen13b","n","m","odd","conjugate","normalize13b","ws","round","convert13b","stub","ph","_","rwst","iwst","nrws","nrwst","niwst","rmws","mulf","muln","sqr","isqr","iushln","bits","carryMask","newCarry","ishln","hint","extended","h","mask","maskedWords","ishrn","shln","ushln","shrn","ushrn","imaskn","maskn","isubn","addn","subn","iabs","_ishlnsubmul","shift","_wordDiv","mode","bhi","bhiBits","diff","qj","div","divmod","positive","divn","umod","divRound","dm","half","r2","acc","egcd","A","B","C","D","g","isEven","yp","xp","im","isOdd","jm","gcd","_invmp","x1","x2","delta","cmpn","invm","bincn","ucmp","gtn","gt","gten","gte","ltn","lt","lten","lte","eqn","eq","Red","toRed","ctx","convertTo","_forceRed","fromRed","convertFrom","forceRed","redAdd","redIAdd","redSub","redISub","redShl","shl","redMul","_verify2","redIMul","redSqr","_verify1","redISqr","redSqrt","sqrt","redInvm","redNeg","redPow","primes","k256","p224","p192","p25519","MPrime","name","tmp","_tmp","K256","call","P224","P192","P25519","prime","_prime","Mont","imod","rinv","minv","ireduce","rlen","split","imulK","undefined","_strip","input","output","outLen","prev","next","mod3","one","nOne","lpow","z","inv","windowSize","wnd","current","currentLen","mont","u"],"mappings":"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","file":"js/chunk-6aa69452.9adffdbd.js","sourcesContent":["(function (module, exports) {\n  'use strict';\n\n  // Utils\n  function assert (val, msg) {\n    if (!val) throw new Error(msg || 'Assertion failed');\n  }\n\n  // Could use `inherits` module, but don't want to move from single file\n  // architecture yet.\n  function inherits (ctor, superCtor) {\n    ctor.super_ = superCtor;\n    var TempCtor = function () {};\n    TempCtor.prototype = superCtor.prototype;\n    ctor.prototype = new TempCtor();\n    ctor.prototype.constructor = ctor;\n  }\n\n  // BN\n\n  function BN (number, base, endian) {\n    if (BN.isBN(number)) {\n      return number;\n    }\n\n    this.negative = 0;\n    this.words = null;\n    this.length = 0;\n\n    // Reduction context\n    this.red = null;\n\n    if (number !== null) {\n      if (base === 'le' || base === 'be') {\n        endian = base;\n        base = 10;\n      }\n\n      this._init(number || 0, base || 10, endian || 'be');\n    }\n  }\n  if (typeof module === 'object') {\n    module.exports = BN;\n  } else {\n    exports.BN = BN;\n  }\n\n  BN.BN = BN;\n  BN.wordSize = 26;\n\n  var Buffer;\n  try {\n    Buffer = require('buffer').Buffer;\n  } catch (e) {\n  }\n\n  BN.isBN = function isBN (num) {\n    if (num instanceof BN) {\n      return true;\n    }\n\n    return num !== null && typeof num === 'object' &&\n      num.constructor.wordSize === BN.wordSize && Array.isArray(num.words);\n  };\n\n  BN.max = function max (left, right) {\n    if (left.cmp(right) > 0) return left;\n    return right;\n  };\n\n  BN.min = function min (left, right) {\n    if (left.cmp(right) < 0) return left;\n    return right;\n  };\n\n  BN.prototype._init = function init (number, base, endian) {\n    if (typeof number === 'number') {\n      return this._initNumber(number, base, endian);\n    }\n\n    if (typeof number === 'object') {\n      return this._initArray(number, base, endian);\n    }\n\n    if (base === 'hex') {\n      base = 16;\n    }\n    assert(base === (base | 0) && base >= 2 && base <= 36);\n\n    number = number.toString().replace(/\\s+/g, '');\n    var start = 0;\n    if (number[0] === '-') {\n      start++;\n    }\n\n    if (base === 16) {\n      this._parseHex(number, start);\n    } else {\n      this._parseBase(number, base, start);\n    }\n\n    if (number[0] === '-') {\n      this.negative = 1;\n    }\n\n    this.strip();\n\n    if (endian !== 'le') return;\n\n    this._initArray(this.toArray(), base, endian);\n  };\n\n  BN.prototype._initNumber = function _initNumber (number, base, endian) {\n    if (number < 0) {\n      this.negative = 1;\n      number = -number;\n    }\n    if (number < 0x4000000) {\n      this.words = [ number & 0x3ffffff ];\n      this.length = 1;\n    } else if (number < 0x10000000000000) {\n      this.words = [\n        number & 0x3ffffff,\n        (number / 0x4000000) & 0x3ffffff\n      ];\n      this.length = 2;\n    } else {\n      assert(number < 0x20000000000000); // 2 ^ 53 (unsafe)\n      this.words = [\n        number & 0x3ffffff,\n        (number / 0x4000000) & 0x3ffffff,\n        1\n      ];\n      this.length = 3;\n    }\n\n    if (endian !== 'le') return;\n\n    // Reverse the bytes\n    this._initArray(this.toArray(), base, endian);\n  };\n\n  BN.prototype._initArray = function _initArray (number, base, endian) {\n    // Perhaps a Uint8Array\n    assert(typeof number.length === 'number');\n    if (number.length <= 0) {\n      this.words = [ 0 ];\n      this.length = 1;\n      return this;\n    }\n\n    this.length = Math.ceil(number.length / 3);\n    this.words = new Array(this.length);\n    for (var i = 0; i < this.length; i++) {\n      this.words[i] = 0;\n    }\n\n    var j, w;\n    var off = 0;\n    if (endian === 'be') {\n      for (i = number.length - 1, j = 0; i >= 0; i -= 3) {\n        w = number[i] | (number[i - 1] << 8) | (number[i - 2] << 16);\n        this.words[j] |= (w << off) & 0x3ffffff;\n        this.words[j + 1] = (w >>> (26 - off)) & 0x3ffffff;\n        off += 24;\n        if (off >= 26) {\n          off -= 26;\n          j++;\n        }\n      }\n    } else if (endian === 'le') {\n      for (i = 0, j = 0; i < number.length; i += 3) {\n        w = number[i] | (number[i + 1] << 8) | (number[i + 2] << 16);\n        this.words[j] |= (w << off) & 0x3ffffff;\n        this.words[j + 1] = (w >>> (26 - off)) & 0x3ffffff;\n        off += 24;\n        if (off >= 26) {\n          off -= 26;\n          j++;\n        }\n      }\n    }\n    return this.strip();\n  };\n\n  function parseHex (str, start, end) {\n    var r = 0;\n    var len = Math.min(str.length, end);\n    for (var i = start; i < len; i++) {\n      var c = str.charCodeAt(i) - 48;\n\n      r <<= 4;\n\n      // 'a' - 'f'\n      if (c >= 49 && c <= 54) {\n        r |= c - 49 + 0xa;\n\n      // 'A' - 'F'\n      } else if (c >= 17 && c <= 22) {\n        r |= c - 17 + 0xa;\n\n      // '0' - '9'\n      } else {\n        r |= c & 0xf;\n      }\n    }\n    return r;\n  }\n\n  BN.prototype._parseHex = function _parseHex (number, start) {\n    // Create possibly bigger array to ensure that it fits the number\n    this.length = Math.ceil((number.length - start) / 6);\n    this.words = new Array(this.length);\n    for (var i = 0; i < this.length; i++) {\n      this.words[i] = 0;\n    }\n\n    var j, w;\n    // Scan 24-bit chunks and add them to the number\n    var off = 0;\n    for (i = number.length - 6, j = 0; i >= start; i -= 6) {\n      w = parseHex(number, i, i + 6);\n      this.words[j] |= (w << off) & 0x3ffffff;\n      // NOTE: `0x3fffff` is intentional here, 26bits max shift + 24bit hex limb\n      this.words[j + 1] |= w >>> (26 - off) & 0x3fffff;\n      off += 24;\n      if (off >= 26) {\n        off -= 26;\n        j++;\n      }\n    }\n    if (i + 6 !== start) {\n      w = parseHex(number, start, i + 6);\n      this.words[j] |= (w << off) & 0x3ffffff;\n      this.words[j + 1] |= w >>> (26 - off) & 0x3fffff;\n    }\n    this.strip();\n  };\n\n  function parseBase (str, start, end, mul) {\n    var r = 0;\n    var len = Math.min(str.length, end);\n    for (var i = start; i < len; i++) {\n      var c = str.charCodeAt(i) - 48;\n\n      r *= mul;\n\n      // 'a'\n      if (c >= 49) {\n        r += c - 49 + 0xa;\n\n      // 'A'\n      } else if (c >= 17) {\n        r += c - 17 + 0xa;\n\n      // '0' - '9'\n      } else {\n        r += c;\n      }\n    }\n    return r;\n  }\n\n  BN.prototype._parseBase = function _parseBase (number, base, start) {\n    // Initialize as zero\n    this.words = [ 0 ];\n    this.length = 1;\n\n    // Find length of limb in base\n    for (var limbLen = 0, limbPow = 1; limbPow <= 0x3ffffff; limbPow *= base) {\n      limbLen++;\n    }\n    limbLen--;\n    limbPow = (limbPow / base) | 0;\n\n    var total = number.length - start;\n    var mod = total % limbLen;\n    var end = Math.min(total, total - mod) + start;\n\n    var word = 0;\n    for (var i = start; i < end; i += limbLen) {\n      word = parseBase(number, i, i + limbLen, base);\n\n      this.imuln(limbPow);\n      if (this.words[0] + word < 0x4000000) {\n        this.words[0] += word;\n      } else {\n        this._iaddn(word);\n      }\n    }\n\n    if (mod !== 0) {\n      var pow = 1;\n      word = parseBase(number, i, number.length, base);\n\n      for (i = 0; i < mod; i++) {\n        pow *= base;\n      }\n\n      this.imuln(pow);\n      if (this.words[0] + word < 0x4000000) {\n        this.words[0] += word;\n      } else {\n        this._iaddn(word);\n      }\n    }\n  };\n\n  BN.prototype.copy = function copy (dest) {\n    dest.words = new Array(this.length);\n    for (var i = 0; i < this.length; i++) {\n      dest.words[i] = this.words[i];\n    }\n    dest.length = this.length;\n    dest.negative = this.negative;\n    dest.red = this.red;\n  };\n\n  BN.prototype.clone = function clone () {\n    var r = new BN(null);\n    this.copy(r);\n    return r;\n  };\n\n  BN.prototype._expand = function _expand (size) {\n    while (this.length < size) {\n      this.words[this.length++] = 0;\n    }\n    return this;\n  };\n\n  // Remove leading `0` from `this`\n  BN.prototype.strip = function strip () {\n    while (this.length > 1 && this.words[this.length - 1] === 0) {\n      this.length--;\n    }\n    return this._normSign();\n  };\n\n  BN.prototype._normSign = function _normSign () {\n    // -0 = 0\n    if (this.length === 1 && this.words[0] === 0) {\n      this.negative = 0;\n    }\n    return this;\n  };\n\n  BN.prototype.inspect = function inspect () {\n    return (this.red ? '<BN-R: ' : '<BN: ') + this.toString(16) + '>';\n  };\n\n  /*\n\n  var zeros = [];\n  var groupSizes = [];\n  var groupBases = [];\n\n  var s = '';\n  var i = -1;\n  while (++i < BN.wordSize) {\n    zeros[i] = s;\n    s += '0';\n  }\n  groupSizes[0] = 0;\n  groupSizes[1] = 0;\n  groupBases[0] = 0;\n  groupBases[1] = 0;\n  var base = 2 - 1;\n  while (++base < 36 + 1) {\n    var groupSize = 0;\n    var groupBase = 1;\n    while (groupBase < (1 << BN.wordSize) / base) {\n      groupBase *= base;\n      groupSize += 1;\n    }\n    groupSizes[base] = groupSize;\n    groupBases[base] = groupBase;\n  }\n\n  */\n\n  var zeros = [\n    '',\n    '0',\n    '00',\n    '000',\n    '0000',\n    '00000',\n    '000000',\n    '0000000',\n    '00000000',\n    '000000000',\n    '0000000000',\n    '00000000000',\n    '000000000000',\n    '0000000000000',\n    '00000000000000',\n    '000000000000000',\n    '0000000000000000',\n    '00000000000000000',\n    '000000000000000000',\n    '0000000000000000000',\n    '00000000000000000000',\n    '000000000000000000000',\n    '0000000000000000000000',\n    '00000000000000000000000',\n    '000000000000000000000000',\n    '0000000000000000000000000'\n  ];\n\n  var groupSizes = [\n    0, 0,\n    25, 16, 12, 11, 10, 9, 8,\n    8, 7, 7, 7, 7, 6, 6,\n    6, 6, 6, 6, 6, 5, 5,\n    5, 5, 5, 5, 5, 5, 5,\n    5, 5, 5, 5, 5, 5, 5\n  ];\n\n  var groupBases = [\n    0, 0,\n    33554432, 43046721, 16777216, 48828125, 60466176, 40353607, 16777216,\n    43046721, 10000000, 19487171, 35831808, 62748517, 7529536, 11390625,\n    16777216, 24137569, 34012224, 47045881, 64000000, 4084101, 5153632,\n    6436343, 7962624, 9765625, 11881376, 14348907, 17210368, 20511149,\n    24300000, 28629151, 33554432, 39135393, 45435424, 52521875, 60466176\n  ];\n\n  BN.prototype.toString = function toString (base, padding) {\n    base = base || 10;\n    padding = padding | 0 || 1;\n\n    var out;\n    if (base === 16 || base === 'hex') {\n      out = '';\n      var off = 0;\n      var carry = 0;\n      for (var i = 0; i < this.length; i++) {\n        var w = this.words[i];\n        var word = (((w << off) | carry) & 0xffffff).toString(16);\n        carry = (w >>> (24 - off)) & 0xffffff;\n        if (carry !== 0 || i !== this.length - 1) {\n          out = zeros[6 - word.length] + word + out;\n        } else {\n          out = word + out;\n        }\n        off += 2;\n        if (off >= 26) {\n          off -= 26;\n          i--;\n        }\n      }\n      if (carry !== 0) {\n        out = carry.toString(16) + out;\n      }\n      while (out.length % padding !== 0) {\n        out = '0' + out;\n      }\n      if (this.negative !== 0) {\n        out = '-' + out;\n      }\n      return out;\n    }\n\n    if (base === (base | 0) && base >= 2 && base <= 36) {\n      // var groupSize = Math.floor(BN.wordSize * Math.LN2 / Math.log(base));\n      var groupSize = groupSizes[base];\n      // var groupBase = Math.pow(base, groupSize);\n      var groupBase = groupBases[base];\n      out = '';\n      var c = this.clone();\n      c.negative = 0;\n      while (!c.isZero()) {\n        var r = c.modn(groupBase).toString(base);\n        c = c.idivn(groupBase);\n\n        if (!c.isZero()) {\n          out = zeros[groupSize - r.length] + r + out;\n        } else {\n          out = r + out;\n        }\n      }\n      if (this.isZero()) {\n        out = '0' + out;\n      }\n      while (out.length % padding !== 0) {\n        out = '0' + out;\n      }\n      if (this.negative !== 0) {\n        out = '-' + out;\n      }\n      return out;\n    }\n\n    assert(false, 'Base should be between 2 and 36');\n  };\n\n  BN.prototype.toNumber = function toNumber () {\n    var ret = this.words[0];\n    if (this.length === 2) {\n      ret += this.words[1] * 0x4000000;\n    } else if (this.length === 3 && this.words[2] === 0x01) {\n      // NOTE: at this stage it is known that the top bit is set\n      ret += 0x10000000000000 + (this.words[1] * 0x4000000);\n    } else if (this.length > 2) {\n      assert(false, 'Number can only safely store up to 53 bits');\n    }\n    return (this.negative !== 0) ? -ret : ret;\n  };\n\n  BN.prototype.toJSON = function toJSON () {\n    return this.toString(16);\n  };\n\n  BN.prototype.toBuffer = function toBuffer (endian, length) {\n    assert(typeof Buffer !== 'undefined');\n    return this.toArrayLike(Buffer, endian, length);\n  };\n\n  BN.prototype.toArray = function toArray (endian, length) {\n    return this.toArrayLike(Array, endian, length);\n  };\n\n  BN.prototype.toArrayLike = function toArrayLike (ArrayType, endian, length) {\n    var byteLength = this.byteLength();\n    var reqLength = length || Math.max(1, byteLength);\n    assert(byteLength <= reqLength, 'byte array longer than desired length');\n    assert(reqLength > 0, 'Requested array length <= 0');\n\n    this.strip();\n    var littleEndian = endian === 'le';\n    var res = new ArrayType(reqLength);\n\n    var b, i;\n    var q = this.clone();\n    if (!littleEndian) {\n      // Assume big-endian\n      for (i = 0; i < reqLength - byteLength; i++) {\n        res[i] = 0;\n      }\n\n      for (i = 0; !q.isZero(); i++) {\n        b = q.andln(0xff);\n        q.iushrn(8);\n\n        res[reqLength - i - 1] = b;\n      }\n    } else {\n      for (i = 0; !q.isZero(); i++) {\n        b = q.andln(0xff);\n        q.iushrn(8);\n\n        res[i] = b;\n      }\n\n      for (; i < reqLength; i++) {\n        res[i] = 0;\n      }\n    }\n\n    return res;\n  };\n\n  if (Math.clz32) {\n    BN.prototype._countBits = function _countBits (w) {\n      return 32 - Math.clz32(w);\n    };\n  } else {\n    BN.prototype._countBits = function _countBits (w) {\n      var t = w;\n      var r = 0;\n      if (t >= 0x1000) {\n        r += 13;\n        t >>>= 13;\n      }\n      if (t >= 0x40) {\n        r += 7;\n        t >>>= 7;\n      }\n      if (t >= 0x8) {\n        r += 4;\n        t >>>= 4;\n      }\n      if (t >= 0x02) {\n        r += 2;\n        t >>>= 2;\n      }\n      return r + t;\n    };\n  }\n\n  BN.prototype._zeroBits = function _zeroBits (w) {\n    // Short-cut\n    if (w === 0) return 26;\n\n    var t = w;\n    var r = 0;\n    if ((t & 0x1fff) === 0) {\n      r += 13;\n      t >>>= 13;\n    }\n    if ((t & 0x7f) === 0) {\n      r += 7;\n      t >>>= 7;\n    }\n    if ((t & 0xf) === 0) {\n      r += 4;\n      t >>>= 4;\n    }\n    if ((t & 0x3) === 0) {\n      r += 2;\n      t >>>= 2;\n    }\n    if ((t & 0x1) === 0) {\n      r++;\n    }\n    return r;\n  };\n\n  // Return number of used bits in a BN\n  BN.prototype.bitLength = function bitLength () {\n    var w = this.words[this.length - 1];\n    var hi = this._countBits(w);\n    return (this.length - 1) * 26 + hi;\n  };\n\n  function toBitArray (num) {\n    var w = new Array(num.bitLength());\n\n    for (var bit = 0; bit < w.length; bit++) {\n      var off = (bit / 26) | 0;\n      var wbit = bit % 26;\n\n      w[bit] = (num.words[off] & (1 << wbit)) >>> wbit;\n    }\n\n    return w;\n  }\n\n  // Number of trailing zero bits\n  BN.prototype.zeroBits = function zeroBits () {\n    if (this.isZero()) return 0;\n\n    var r = 0;\n    for (var i = 0; i < this.length; i++) {\n      var b = this._zeroBits(this.words[i]);\n      r += b;\n      if (b !== 26) break;\n    }\n    return r;\n  };\n\n  BN.prototype.byteLength = function byteLength () {\n    return Math.ceil(this.bitLength() / 8);\n  };\n\n  BN.prototype.toTwos = function toTwos (width) {\n    if (this.negative !== 0) {\n      return this.abs().inotn(width).iaddn(1);\n    }\n    return this.clone();\n  };\n\n  BN.prototype.fromTwos = function fromTwos (width) {\n    if (this.testn(width - 1)) {\n      return this.notn(width).iaddn(1).ineg();\n    }\n    return this.clone();\n  };\n\n  BN.prototype.isNeg = function isNeg () {\n    return this.negative !== 0;\n  };\n\n  // Return negative clone of `this`\n  BN.prototype.neg = function neg () {\n    return this.clone().ineg();\n  };\n\n  BN.prototype.ineg = function ineg () {\n    if (!this.isZero()) {\n      this.negative ^= 1;\n    }\n\n    return this;\n  };\n\n  // Or `num` with `this` in-place\n  BN.prototype.iuor = function iuor (num) {\n    while (this.length < num.length) {\n      this.words[this.length++] = 0;\n    }\n\n    for (var i = 0; i < num.length; i++) {\n      this.words[i] = this.words[i] | num.words[i];\n    }\n\n    return this.strip();\n  };\n\n  BN.prototype.ior = function ior (num) {\n    assert((this.negative | num.negative) === 0);\n    return this.iuor(num);\n  };\n\n  // Or `num` with `this`\n  BN.prototype.or = function or (num) {\n    if (this.length > num.length) return this.clone().ior(num);\n    return num.clone().ior(this);\n  };\n\n  BN.prototype.uor = function uor (num) {\n    if (this.length > num.length) return this.clone().iuor(num);\n    return num.clone().iuor(this);\n  };\n\n  // And `num` with `this` in-place\n  BN.prototype.iuand = function iuand (num) {\n    // b = min-length(num, this)\n    var b;\n    if (this.length > num.length) {\n      b = num;\n    } else {\n      b = this;\n    }\n\n    for (var i = 0; i < b.length; i++) {\n      this.words[i] = this.words[i] & num.words[i];\n    }\n\n    this.length = b.length;\n\n    return this.strip();\n  };\n\n  BN.prototype.iand = function iand (num) {\n    assert((this.negative | num.negative) === 0);\n    return this.iuand(num);\n  };\n\n  // And `num` with `this`\n  BN.prototype.and = function and (num) {\n    if (this.length > num.length) return this.clone().iand(num);\n    return num.clone().iand(this);\n  };\n\n  BN.prototype.uand = function uand (num) {\n    if (this.length > num.length) return this.clone().iuand(num);\n    return num.clone().iuand(this);\n  };\n\n  // Xor `num` with `this` in-place\n  BN.prototype.iuxor = function iuxor (num) {\n    // a.length > b.length\n    var a;\n    var b;\n    if (this.length > num.length) {\n      a = this;\n      b = num;\n    } else {\n      a = num;\n      b = this;\n    }\n\n    for (var i = 0; i < b.length; i++) {\n      this.words[i] = a.words[i] ^ b.words[i];\n    }\n\n    if (this !== a) {\n      for (; i < a.length; i++) {\n        this.words[i] = a.words[i];\n      }\n    }\n\n    this.length = a.length;\n\n    return this.strip();\n  };\n\n  BN.prototype.ixor = function ixor (num) {\n    assert((this.negative | num.negative) === 0);\n    return this.iuxor(num);\n  };\n\n  // Xor `num` with `this`\n  BN.prototype.xor = function xor (num) {\n    if (this.length > num.length) return this.clone().ixor(num);\n    return num.clone().ixor(this);\n  };\n\n  BN.prototype.uxor = function uxor (num) {\n    if (this.length > num.length) return this.clone().iuxor(num);\n    return num.clone().iuxor(this);\n  };\n\n  // Not ``this`` with ``width`` bitwidth\n  BN.prototype.inotn = function inotn (width) {\n    assert(typeof width === 'number' && width >= 0);\n\n    var bytesNeeded = Math.ceil(width / 26) | 0;\n    var bitsLeft = width % 26;\n\n    // Extend the buffer with leading zeroes\n    this._expand(bytesNeeded);\n\n    if (bitsLeft > 0) {\n      bytesNeeded--;\n    }\n\n    // Handle complete words\n    for (var i = 0; i < bytesNeeded; i++) {\n      this.words[i] = ~this.words[i] & 0x3ffffff;\n    }\n\n    // Handle the residue\n    if (bitsLeft > 0) {\n      this.words[i] = ~this.words[i] & (0x3ffffff >> (26 - bitsLeft));\n    }\n\n    // And remove leading zeroes\n    return this.strip();\n  };\n\n  BN.prototype.notn = function notn (width) {\n    return this.clone().inotn(width);\n  };\n\n  // Set `bit` of `this`\n  BN.prototype.setn = function setn (bit, val) {\n    assert(typeof bit === 'number' && bit >= 0);\n\n    var off = (bit / 26) | 0;\n    var wbit = bit % 26;\n\n    this._expand(off + 1);\n\n    if (val) {\n      this.words[off] = this.words[off] | (1 << wbit);\n    } else {\n      this.words[off] = this.words[off] & ~(1 << wbit);\n    }\n\n    return this.strip();\n  };\n\n  // Add `num` to `this` in-place\n  BN.prototype.iadd = function iadd (num) {\n    var r;\n\n    // negative + positive\n    if (this.negative !== 0 && num.negative === 0) {\n      this.negative = 0;\n      r = this.isub(num);\n      this.negative ^= 1;\n      return this._normSign();\n\n    // positive + negative\n    } else if (this.negative === 0 && num.negative !== 0) {\n      num.negative = 0;\n      r = this.isub(num);\n      num.negative = 1;\n      return r._normSign();\n    }\n\n    // a.length > b.length\n    var a, b;\n    if (this.length > num.length) {\n      a = this;\n      b = num;\n    } else {\n      a = num;\n      b = this;\n    }\n\n    var carry = 0;\n    for (var i = 0; i < b.length; i++) {\n      r = (a.words[i] | 0) + (b.words[i] | 0) + carry;\n      this.words[i] = r & 0x3ffffff;\n      carry = r >>> 26;\n    }\n    for (; carry !== 0 && i < a.length; i++) {\n      r = (a.words[i] | 0) + carry;\n      this.words[i] = r & 0x3ffffff;\n      carry = r >>> 26;\n    }\n\n    this.length = a.length;\n    if (carry !== 0) {\n      this.words[this.length] = carry;\n      this.length++;\n    // Copy the rest of the words\n    } else if (a !== this) {\n      for (; i < a.length; i++) {\n        this.words[i] = a.words[i];\n      }\n    }\n\n    return this;\n  };\n\n  // Add `num` to `this`\n  BN.prototype.add = function add (num) {\n    var res;\n    if (num.negative !== 0 && this.negative === 0) {\n      num.negative = 0;\n      res = this.sub(num);\n      num.negative ^= 1;\n      return res;\n    } else if (num.negative === 0 && this.negative !== 0) {\n      this.negative = 0;\n      res = num.sub(this);\n      this.negative = 1;\n      return res;\n    }\n\n    if (this.length > num.length) return this.clone().iadd(num);\n\n    return num.clone().iadd(this);\n  };\n\n  // Subtract `num` from `this` in-place\n  BN.prototype.isub = function isub (num) {\n    // this - (-num) = this + num\n    if (num.negative !== 0) {\n      num.negative = 0;\n      var r = this.iadd(num);\n      num.negative = 1;\n      return r._normSign();\n\n    // -this - num = -(this + num)\n    } else if (this.negative !== 0) {\n      this.negative = 0;\n      this.iadd(num);\n      this.negative = 1;\n      return this._normSign();\n    }\n\n    // At this point both numbers are positive\n    var cmp = this.cmp(num);\n\n    // Optimization - zeroify\n    if (cmp === 0) {\n      this.negative = 0;\n      this.length = 1;\n      this.words[0] = 0;\n      return this;\n    }\n\n    // a > b\n    var a, b;\n    if (cmp > 0) {\n      a = this;\n      b = num;\n    } else {\n      a = num;\n      b = this;\n    }\n\n    var carry = 0;\n    for (var i = 0; i < b.length; i++) {\n      r = (a.words[i] | 0) - (b.words[i] | 0) + carry;\n      carry = r >> 26;\n      this.words[i] = r & 0x3ffffff;\n    }\n    for (; carry !== 0 && i < a.length; i++) {\n      r = (a.words[i] | 0) + carry;\n      carry = r >> 26;\n      this.words[i] = r & 0x3ffffff;\n    }\n\n    // Copy rest of the words\n    if (carry === 0 && i < a.length && a !== this) {\n      for (; i < a.length; i++) {\n        this.words[i] = a.words[i];\n      }\n    }\n\n    this.length = Math.max(this.length, i);\n\n    if (a !== this) {\n      this.negative = 1;\n    }\n\n    return this.strip();\n  };\n\n  // Subtract `num` from `this`\n  BN.prototype.sub = function sub (num) {\n    return this.clone().isub(num);\n  };\n\n  function smallMulTo (self, num, out) {\n    out.negative = num.negative ^ self.negative;\n    var len = (self.length + num.length) | 0;\n    out.length = len;\n    len = (len - 1) | 0;\n\n    // Peel one iteration (compiler can't do it, because of code complexity)\n    var a = self.words[0] | 0;\n    var b = num.words[0] | 0;\n    var r = a * b;\n\n    var lo = r & 0x3ffffff;\n    var carry = (r / 0x4000000) | 0;\n    out.words[0] = lo;\n\n    for (var k = 1; k < len; k++) {\n      // Sum all words with the same `i + j = k` and accumulate `ncarry`,\n      // note that ncarry could be >= 0x3ffffff\n      var ncarry = carry >>> 26;\n      var rword = carry & 0x3ffffff;\n      var maxJ = Math.min(k, num.length - 1);\n      for (var j = Math.max(0, k - self.length + 1); j <= maxJ; j++) {\n        var i = (k - j) | 0;\n        a = self.words[i] | 0;\n        b = num.words[j] | 0;\n        r = a * b + rword;\n        ncarry += (r / 0x4000000) | 0;\n        rword = r & 0x3ffffff;\n      }\n      out.words[k] = rword | 0;\n      carry = ncarry | 0;\n    }\n    if (carry !== 0) {\n      out.words[k] = carry | 0;\n    } else {\n      out.length--;\n    }\n\n    return out.strip();\n  }\n\n  // TODO(indutny): it may be reasonable to omit it for users who don't need\n  // to work with 256-bit numbers, otherwise it gives 20% improvement for 256-bit\n  // multiplication (like elliptic secp256k1).\n  var comb10MulTo = function comb10MulTo (self, num, out) {\n    var a = self.words;\n    var b = num.words;\n    var o = out.words;\n    var c = 0;\n    var lo;\n    var mid;\n    var hi;\n    var a0 = a[0] | 0;\n    var al0 = a0 & 0x1fff;\n    var ah0 = a0 >>> 13;\n    var a1 = a[1] | 0;\n    var al1 = a1 & 0x1fff;\n    var ah1 = a1 >>> 13;\n    var a2 = a[2] | 0;\n    var al2 = a2 & 0x1fff;\n    var ah2 = a2 >>> 13;\n    var a3 = a[3] | 0;\n    var al3 = a3 & 0x1fff;\n    var ah3 = a3 >>> 13;\n    var a4 = a[4] | 0;\n    var al4 = a4 & 0x1fff;\n    var ah4 = a4 >>> 13;\n    var a5 = a[5] | 0;\n    var al5 = a5 & 0x1fff;\n    var ah5 = a5 >>> 13;\n    var a6 = a[6] | 0;\n    var al6 = a6 & 0x1fff;\n    var ah6 = a6 >>> 13;\n    var a7 = a[7] | 0;\n    var al7 = a7 & 0x1fff;\n    var ah7 = a7 >>> 13;\n    var a8 = a[8] | 0;\n    var al8 = a8 & 0x1fff;\n    var ah8 = a8 >>> 13;\n    var a9 = a[9] | 0;\n    var al9 = a9 & 0x1fff;\n    var ah9 = a9 >>> 13;\n    var b0 = b[0] | 0;\n    var bl0 = b0 & 0x1fff;\n    var bh0 = b0 >>> 13;\n    var b1 = b[1] | 0;\n    var bl1 = b1 & 0x1fff;\n    var bh1 = b1 >>> 13;\n    var b2 = b[2] | 0;\n    var bl2 = b2 & 0x1fff;\n    var bh2 = b2 >>> 13;\n    var b3 = b[3] | 0;\n    var bl3 = b3 & 0x1fff;\n    var bh3 = b3 >>> 13;\n    var b4 = b[4] | 0;\n    var bl4 = b4 & 0x1fff;\n    var bh4 = b4 >>> 13;\n    var b5 = b[5] | 0;\n    var bl5 = b5 & 0x1fff;\n    var bh5 = b5 >>> 13;\n    var b6 = b[6] | 0;\n    var bl6 = b6 & 0x1fff;\n    var bh6 = b6 >>> 13;\n    var b7 = b[7] | 0;\n    var bl7 = b7 & 0x1fff;\n    var bh7 = b7 >>> 13;\n    var b8 = b[8] | 0;\n    var bl8 = b8 & 0x1fff;\n    var bh8 = b8 >>> 13;\n    var b9 = b[9] | 0;\n    var bl9 = b9 & 0x1fff;\n    var bh9 = b9 >>> 13;\n\n    out.negative = self.negative ^ num.negative;\n    out.length = 19;\n    /* k = 0 */\n    lo = Math.imul(al0, bl0);\n    mid = Math.imul(al0, bh0);\n    mid = (mid + Math.imul(ah0, bl0)) | 0;\n    hi = Math.imul(ah0, bh0);\n    var w0 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w0 >>> 26)) | 0;\n    w0 &= 0x3ffffff;\n    /* k = 1 */\n    lo = Math.imul(al1, bl0);\n    mid = Math.imul(al1, bh0);\n    mid = (mid + Math.imul(ah1, bl0)) | 0;\n    hi = Math.imul(ah1, bh0);\n    lo = (lo + Math.imul(al0, bl1)) | 0;\n    mid = (mid + Math.imul(al0, bh1)) | 0;\n    mid = (mid + Math.imul(ah0, bl1)) | 0;\n    hi = (hi + Math.imul(ah0, bh1)) | 0;\n    var w1 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w1 >>> 26)) | 0;\n    w1 &= 0x3ffffff;\n    /* k = 2 */\n    lo = Math.imul(al2, bl0);\n    mid = Math.imul(al2, bh0);\n    mid = (mid + Math.imul(ah2, bl0)) | 0;\n    hi = Math.imul(ah2, bh0);\n    lo = (lo + Math.imul(al1, bl1)) | 0;\n    mid = (mid + Math.imul(al1, bh1)) | 0;\n    mid = (mid + Math.imul(ah1, bl1)) | 0;\n    hi = (hi + Math.imul(ah1, bh1)) | 0;\n    lo = (lo + Math.imul(al0, bl2)) | 0;\n    mid = (mid + Math.imul(al0, bh2)) | 0;\n    mid = (mid + Math.imul(ah0, bl2)) | 0;\n    hi = (hi + Math.imul(ah0, bh2)) | 0;\n    var w2 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w2 >>> 26)) | 0;\n    w2 &= 0x3ffffff;\n    /* k = 3 */\n    lo = Math.imul(al3, bl0);\n    mid = Math.imul(al3, bh0);\n    mid = (mid + Math.imul(ah3, bl0)) | 0;\n    hi = Math.imul(ah3, bh0);\n    lo = (lo + Math.imul(al2, bl1)) | 0;\n    mid = (mid + Math.imul(al2, bh1)) | 0;\n    mid = (mid + Math.imul(ah2, bl1)) | 0;\n    hi = (hi + Math.imul(ah2, bh1)) | 0;\n    lo = (lo + Math.imul(al1, bl2)) | 0;\n    mid = (mid + Math.imul(al1, bh2)) | 0;\n    mid = (mid + Math.imul(ah1, bl2)) | 0;\n    hi = (hi + Math.imul(ah1, bh2)) | 0;\n    lo = (lo + Math.imul(al0, bl3)) | 0;\n    mid = (mid + Math.imul(al0, bh3)) | 0;\n    mid = (mid + Math.imul(ah0, bl3)) | 0;\n    hi = (hi + Math.imul(ah0, bh3)) | 0;\n    var w3 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w3 >>> 26)) | 0;\n    w3 &= 0x3ffffff;\n    /* k = 4 */\n    lo = Math.imul(al4, bl0);\n    mid = Math.imul(al4, bh0);\n    mid = (mid + Math.imul(ah4, bl0)) | 0;\n    hi = Math.imul(ah4, bh0);\n    lo = (lo + Math.imul(al3, bl1)) | 0;\n    mid = (mid + Math.imul(al3, bh1)) | 0;\n    mid = (mid + Math.imul(ah3, bl1)) | 0;\n    hi = (hi + Math.imul(ah3, bh1)) | 0;\n    lo = (lo + Math.imul(al2, bl2)) | 0;\n    mid = (mid + Math.imul(al2, bh2)) | 0;\n    mid = (mid + Math.imul(ah2, bl2)) | 0;\n    hi = (hi + Math.imul(ah2, bh2)) | 0;\n    lo = (lo + Math.imul(al1, bl3)) | 0;\n    mid = (mid + Math.imul(al1, bh3)) | 0;\n    mid = (mid + Math.imul(ah1, bl3)) | 0;\n    hi = (hi + Math.imul(ah1, bh3)) | 0;\n    lo = (lo + Math.imul(al0, bl4)) | 0;\n    mid = (mid + Math.imul(al0, bh4)) | 0;\n    mid = (mid + Math.imul(ah0, bl4)) | 0;\n    hi = (hi + Math.imul(ah0, bh4)) | 0;\n    var w4 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w4 >>> 26)) | 0;\n    w4 &= 0x3ffffff;\n    /* k = 5 */\n    lo = Math.imul(al5, bl0);\n    mid = Math.imul(al5, bh0);\n    mid = (mid + Math.imul(ah5, bl0)) | 0;\n    hi = Math.imul(ah5, bh0);\n    lo = (lo + Math.imul(al4, bl1)) | 0;\n    mid = (mid + Math.imul(al4, bh1)) | 0;\n    mid = (mid + Math.imul(ah4, bl1)) | 0;\n    hi = (hi + Math.imul(ah4, bh1)) | 0;\n    lo = (lo + Math.imul(al3, bl2)) | 0;\n    mid = (mid + Math.imul(al3, bh2)) | 0;\n    mid = (mid + Math.imul(ah3, bl2)) | 0;\n    hi = (hi + Math.imul(ah3, bh2)) | 0;\n    lo = (lo + Math.imul(al2, bl3)) | 0;\n    mid = (mid + Math.imul(al2, bh3)) | 0;\n    mid = (mid + Math.imul(ah2, bl3)) | 0;\n    hi = (hi + Math.imul(ah2, bh3)) | 0;\n    lo = (lo + Math.imul(al1, bl4)) | 0;\n    mid = (mid + Math.imul(al1, bh4)) | 0;\n    mid = (mid + Math.imul(ah1, bl4)) | 0;\n    hi = (hi + Math.imul(ah1, bh4)) | 0;\n    lo = (lo + Math.imul(al0, bl5)) | 0;\n    mid = (mid + Math.imul(al0, bh5)) | 0;\n    mid = (mid + Math.imul(ah0, bl5)) | 0;\n    hi = (hi + Math.imul(ah0, bh5)) | 0;\n    var w5 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w5 >>> 26)) | 0;\n    w5 &= 0x3ffffff;\n    /* k = 6 */\n    lo = Math.imul(al6, bl0);\n    mid = Math.imul(al6, bh0);\n    mid = (mid + Math.imul(ah6, bl0)) | 0;\n    hi = Math.imul(ah6, bh0);\n    lo = (lo + Math.imul(al5, bl1)) | 0;\n    mid = (mid + Math.imul(al5, bh1)) | 0;\n    mid = (mid + Math.imul(ah5, bl1)) | 0;\n    hi = (hi + Math.imul(ah5, bh1)) | 0;\n    lo = (lo + Math.imul(al4, bl2)) | 0;\n    mid = (mid + Math.imul(al4, bh2)) | 0;\n    mid = (mid + Math.imul(ah4, bl2)) | 0;\n    hi = (hi + Math.imul(ah4, bh2)) | 0;\n    lo = (lo + Math.imul(al3, bl3)) | 0;\n    mid = (mid + Math.imul(al3, bh3)) | 0;\n    mid = (mid + Math.imul(ah3, bl3)) | 0;\n    hi = (hi + Math.imul(ah3, bh3)) | 0;\n    lo = (lo + Math.imul(al2, bl4)) | 0;\n    mid = (mid + Math.imul(al2, bh4)) | 0;\n    mid = (mid + Math.imul(ah2, bl4)) | 0;\n    hi = (hi + Math.imul(ah2, bh4)) | 0;\n    lo = (lo + Math.imul(al1, bl5)) | 0;\n    mid = (mid + Math.imul(al1, bh5)) | 0;\n    mid = (mid + Math.imul(ah1, bl5)) | 0;\n    hi = (hi + Math.imul(ah1, bh5)) | 0;\n    lo = (lo + Math.imul(al0, bl6)) | 0;\n    mid = (mid + Math.imul(al0, bh6)) | 0;\n    mid = (mid + Math.imul(ah0, bl6)) | 0;\n    hi = (hi + Math.imul(ah0, bh6)) | 0;\n    var w6 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w6 >>> 26)) | 0;\n    w6 &= 0x3ffffff;\n    /* k = 7 */\n    lo = Math.imul(al7, bl0);\n    mid = Math.imul(al7, bh0);\n    mid = (mid + Math.imul(ah7, bl0)) | 0;\n    hi = Math.imul(ah7, bh0);\n    lo = (lo + Math.imul(al6, bl1)) | 0;\n    mid = (mid + Math.imul(al6, bh1)) | 0;\n    mid = (mid + Math.imul(ah6, bl1)) | 0;\n    hi = (hi + Math.imul(ah6, bh1)) | 0;\n    lo = (lo + Math.imul(al5, bl2)) | 0;\n    mid = (mid + Math.imul(al5, bh2)) | 0;\n    mid = (mid + Math.imul(ah5, bl2)) | 0;\n    hi = (hi + Math.imul(ah5, bh2)) | 0;\n    lo = (lo + Math.imul(al4, bl3)) | 0;\n    mid = (mid + Math.imul(al4, bh3)) | 0;\n    mid = (mid + Math.imul(ah4, bl3)) | 0;\n    hi = (hi + Math.imul(ah4, bh3)) | 0;\n    lo = (lo + Math.imul(al3, bl4)) | 0;\n    mid = (mid + Math.imul(al3, bh4)) | 0;\n    mid = (mid + Math.imul(ah3, bl4)) | 0;\n    hi = (hi + Math.imul(ah3, bh4)) | 0;\n    lo = (lo + Math.imul(al2, bl5)) | 0;\n    mid = (mid + Math.imul(al2, bh5)) | 0;\n    mid = (mid + Math.imul(ah2, bl5)) | 0;\n    hi = (hi + Math.imul(ah2, bh5)) | 0;\n    lo = (lo + Math.imul(al1, bl6)) | 0;\n    mid = (mid + Math.imul(al1, bh6)) | 0;\n    mid = (mid + Math.imul(ah1, bl6)) | 0;\n    hi = (hi + Math.imul(ah1, bh6)) | 0;\n    lo = (lo + Math.imul(al0, bl7)) | 0;\n    mid = (mid + Math.imul(al0, bh7)) | 0;\n    mid = (mid + Math.imul(ah0, bl7)) | 0;\n    hi = (hi + Math.imul(ah0, bh7)) | 0;\n    var w7 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w7 >>> 26)) | 0;\n    w7 &= 0x3ffffff;\n    /* k = 8 */\n    lo = Math.imul(al8, bl0);\n    mid = Math.imul(al8, bh0);\n    mid = (mid + Math.imul(ah8, bl0)) | 0;\n    hi = Math.imul(ah8, bh0);\n    lo = (lo + Math.imul(al7, bl1)) | 0;\n    mid = (mid + Math.imul(al7, bh1)) | 0;\n    mid = (mid + Math.imul(ah7, bl1)) | 0;\n    hi = (hi + Math.imul(ah7, bh1)) | 0;\n    lo = (lo + Math.imul(al6, bl2)) | 0;\n    mid = (mid + Math.imul(al6, bh2)) | 0;\n    mid = (mid + Math.imul(ah6, bl2)) | 0;\n    hi = (hi + Math.imul(ah6, bh2)) | 0;\n    lo = (lo + Math.imul(al5, bl3)) | 0;\n    mid = (mid + Math.imul(al5, bh3)) | 0;\n    mid = (mid + Math.imul(ah5, bl3)) | 0;\n    hi = (hi + Math.imul(ah5, bh3)) | 0;\n    lo = (lo + Math.imul(al4, bl4)) | 0;\n    mid = (mid + Math.imul(al4, bh4)) | 0;\n    mid = (mid + Math.imul(ah4, bl4)) | 0;\n    hi = (hi + Math.imul(ah4, bh4)) | 0;\n    lo = (lo + Math.imul(al3, bl5)) | 0;\n    mid = (mid + Math.imul(al3, bh5)) | 0;\n    mid = (mid + Math.imul(ah3, bl5)) | 0;\n    hi = (hi + Math.imul(ah3, bh5)) | 0;\n    lo = (lo + Math.imul(al2, bl6)) | 0;\n    mid = (mid + Math.imul(al2, bh6)) | 0;\n    mid = (mid + Math.imul(ah2, bl6)) | 0;\n    hi = (hi + Math.imul(ah2, bh6)) | 0;\n    lo = (lo + Math.imul(al1, bl7)) | 0;\n    mid = (mid + Math.imul(al1, bh7)) | 0;\n    mid = (mid + Math.imul(ah1, bl7)) | 0;\n    hi = (hi + Math.imul(ah1, bh7)) | 0;\n    lo = (lo + Math.imul(al0, bl8)) | 0;\n    mid = (mid + Math.imul(al0, bh8)) | 0;\n    mid = (mid + Math.imul(ah0, bl8)) | 0;\n    hi = (hi + Math.imul(ah0, bh8)) | 0;\n    var w8 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w8 >>> 26)) | 0;\n    w8 &= 0x3ffffff;\n    /* k = 9 */\n    lo = Math.imul(al9, bl0);\n    mid = Math.imul(al9, bh0);\n    mid = (mid + Math.imul(ah9, bl0)) | 0;\n    hi = Math.imul(ah9, bh0);\n    lo = (lo + Math.imul(al8, bl1)) | 0;\n    mid = (mid + Math.imul(al8, bh1)) | 0;\n    mid = (mid + Math.imul(ah8, bl1)) | 0;\n    hi = (hi + Math.imul(ah8, bh1)) | 0;\n    lo = (lo + Math.imul(al7, bl2)) | 0;\n    mid = (mid + Math.imul(al7, bh2)) | 0;\n    mid = (mid + Math.imul(ah7, bl2)) | 0;\n    hi = (hi + Math.imul(ah7, bh2)) | 0;\n    lo = (lo + Math.imul(al6, bl3)) | 0;\n    mid = (mid + Math.imul(al6, bh3)) | 0;\n    mid = (mid + Math.imul(ah6, bl3)) | 0;\n    hi = (hi + Math.imul(ah6, bh3)) | 0;\n    lo = (lo + Math.imul(al5, bl4)) | 0;\n    mid = (mid + Math.imul(al5, bh4)) | 0;\n    mid = (mid + Math.imul(ah5, bl4)) | 0;\n    hi = (hi + Math.imul(ah5, bh4)) | 0;\n    lo = (lo + Math.imul(al4, bl5)) | 0;\n    mid = (mid + Math.imul(al4, bh5)) | 0;\n    mid = (mid + Math.imul(ah4, bl5)) | 0;\n    hi = (hi + Math.imul(ah4, bh5)) | 0;\n    lo = (lo + Math.imul(al3, bl6)) | 0;\n    mid = (mid + Math.imul(al3, bh6)) | 0;\n    mid = (mid + Math.imul(ah3, bl6)) | 0;\n    hi = (hi + Math.imul(ah3, bh6)) | 0;\n    lo = (lo + Math.imul(al2, bl7)) | 0;\n    mid = (mid + Math.imul(al2, bh7)) | 0;\n    mid = (mid + Math.imul(ah2, bl7)) | 0;\n    hi = (hi + Math.imul(ah2, bh7)) | 0;\n    lo = (lo + Math.imul(al1, bl8)) | 0;\n    mid = (mid + Math.imul(al1, bh8)) | 0;\n    mid = (mid + Math.imul(ah1, bl8)) | 0;\n    hi = (hi + Math.imul(ah1, bh8)) | 0;\n    lo = (lo + Math.imul(al0, bl9)) | 0;\n    mid = (mid + Math.imul(al0, bh9)) | 0;\n    mid = (mid + Math.imul(ah0, bl9)) | 0;\n    hi = (hi + Math.imul(ah0, bh9)) | 0;\n    var w9 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w9 >>> 26)) | 0;\n    w9 &= 0x3ffffff;\n    /* k = 10 */\n    lo = Math.imul(al9, bl1);\n    mid = Math.imul(al9, bh1);\n    mid = (mid + Math.imul(ah9, bl1)) | 0;\n    hi = Math.imul(ah9, bh1);\n    lo = (lo + Math.imul(al8, bl2)) | 0;\n    mid = (mid + Math.imul(al8, bh2)) | 0;\n    mid = (mid + Math.imul(ah8, bl2)) | 0;\n    hi = (hi + Math.imul(ah8, bh2)) | 0;\n    lo = (lo + Math.imul(al7, bl3)) | 0;\n    mid = (mid + Math.imul(al7, bh3)) | 0;\n    mid = (mid + Math.imul(ah7, bl3)) | 0;\n    hi = (hi + Math.imul(ah7, bh3)) | 0;\n    lo = (lo + Math.imul(al6, bl4)) | 0;\n    mid = (mid + Math.imul(al6, bh4)) | 0;\n    mid = (mid + Math.imul(ah6, bl4)) | 0;\n    hi = (hi + Math.imul(ah6, bh4)) | 0;\n    lo = (lo + Math.imul(al5, bl5)) | 0;\n    mid = (mid + Math.imul(al5, bh5)) | 0;\n    mid = (mid + Math.imul(ah5, bl5)) | 0;\n    hi = (hi + Math.imul(ah5, bh5)) | 0;\n    lo = (lo + Math.imul(al4, bl6)) | 0;\n    mid = (mid + Math.imul(al4, bh6)) | 0;\n    mid = (mid + Math.imul(ah4, bl6)) | 0;\n    hi = (hi + Math.imul(ah4, bh6)) | 0;\n    lo = (lo + Math.imul(al3, bl7)) | 0;\n    mid = (mid + Math.imul(al3, bh7)) | 0;\n    mid = (mid + Math.imul(ah3, bl7)) | 0;\n    hi = (hi + Math.imul(ah3, bh7)) | 0;\n    lo = (lo + Math.imul(al2, bl8)) | 0;\n    mid = (mid + Math.imul(al2, bh8)) | 0;\n    mid = (mid + Math.imul(ah2, bl8)) | 0;\n    hi = (hi + Math.imul(ah2, bh8)) | 0;\n    lo = (lo + Math.imul(al1, bl9)) | 0;\n    mid = (mid + Math.imul(al1, bh9)) | 0;\n    mid = (mid + Math.imul(ah1, bl9)) | 0;\n    hi = (hi + Math.imul(ah1, bh9)) | 0;\n    var w10 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w10 >>> 26)) | 0;\n    w10 &= 0x3ffffff;\n    /* k = 11 */\n    lo = Math.imul(al9, bl2);\n    mid = Math.imul(al9, bh2);\n    mid = (mid + Math.imul(ah9, bl2)) | 0;\n    hi = Math.imul(ah9, bh2);\n    lo = (lo + Math.imul(al8, bl3)) | 0;\n    mid = (mid + Math.imul(al8, bh3)) | 0;\n    mid = (mid + Math.imul(ah8, bl3)) | 0;\n    hi = (hi + Math.imul(ah8, bh3)) | 0;\n    lo = (lo + Math.imul(al7, bl4)) | 0;\n    mid = (mid + Math.imul(al7, bh4)) | 0;\n    mid = (mid + Math.imul(ah7, bl4)) | 0;\n    hi = (hi + Math.imul(ah7, bh4)) | 0;\n    lo = (lo + Math.imul(al6, bl5)) | 0;\n    mid = (mid + Math.imul(al6, bh5)) | 0;\n    mid = (mid + Math.imul(ah6, bl5)) | 0;\n    hi = (hi + Math.imul(ah6, bh5)) | 0;\n    lo = (lo + Math.imul(al5, bl6)) | 0;\n    mid = (mid + Math.imul(al5, bh6)) | 0;\n    mid = (mid + Math.imul(ah5, bl6)) | 0;\n    hi = (hi + Math.imul(ah5, bh6)) | 0;\n    lo = (lo + Math.imul(al4, bl7)) | 0;\n    mid = (mid + Math.imul(al4, bh7)) | 0;\n    mid = (mid + Math.imul(ah4, bl7)) | 0;\n    hi = (hi + Math.imul(ah4, bh7)) | 0;\n    lo = (lo + Math.imul(al3, bl8)) | 0;\n    mid = (mid + Math.imul(al3, bh8)) | 0;\n    mid = (mid + Math.imul(ah3, bl8)) | 0;\n    hi = (hi + Math.imul(ah3, bh8)) | 0;\n    lo = (lo + Math.imul(al2, bl9)) | 0;\n    mid = (mid + Math.imul(al2, bh9)) | 0;\n    mid = (mid + Math.imul(ah2, bl9)) | 0;\n    hi = (hi + Math.imul(ah2, bh9)) | 0;\n    var w11 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w11 >>> 26)) | 0;\n    w11 &= 0x3ffffff;\n    /* k = 12 */\n    lo = Math.imul(al9, bl3);\n    mid = Math.imul(al9, bh3);\n    mid = (mid + Math.imul(ah9, bl3)) | 0;\n    hi = Math.imul(ah9, bh3);\n    lo = (lo + Math.imul(al8, bl4)) | 0;\n    mid = (mid + Math.imul(al8, bh4)) | 0;\n    mid = (mid + Math.imul(ah8, bl4)) | 0;\n    hi = (hi + Math.imul(ah8, bh4)) | 0;\n    lo = (lo + Math.imul(al7, bl5)) | 0;\n    mid = (mid + Math.imul(al7, bh5)) | 0;\n    mid = (mid + Math.imul(ah7, bl5)) | 0;\n    hi = (hi + Math.imul(ah7, bh5)) | 0;\n    lo = (lo + Math.imul(al6, bl6)) | 0;\n    mid = (mid + Math.imul(al6, bh6)) | 0;\n    mid = (mid + Math.imul(ah6, bl6)) | 0;\n    hi = (hi + Math.imul(ah6, bh6)) | 0;\n    lo = (lo + Math.imul(al5, bl7)) | 0;\n    mid = (mid + Math.imul(al5, bh7)) | 0;\n    mid = (mid + Math.imul(ah5, bl7)) | 0;\n    hi = (hi + Math.imul(ah5, bh7)) | 0;\n    lo = (lo + Math.imul(al4, bl8)) | 0;\n    mid = (mid + Math.imul(al4, bh8)) | 0;\n    mid = (mid + Math.imul(ah4, bl8)) | 0;\n    hi = (hi + Math.imul(ah4, bh8)) | 0;\n    lo = (lo + Math.imul(al3, bl9)) | 0;\n    mid = (mid + Math.imul(al3, bh9)) | 0;\n    mid = (mid + Math.imul(ah3, bl9)) | 0;\n    hi = (hi + Math.imul(ah3, bh9)) | 0;\n    var w12 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w12 >>> 26)) | 0;\n    w12 &= 0x3ffffff;\n    /* k = 13 */\n    lo = Math.imul(al9, bl4);\n    mid = Math.imul(al9, bh4);\n    mid = (mid + Math.imul(ah9, bl4)) | 0;\n    hi = Math.imul(ah9, bh4);\n    lo = (lo + Math.imul(al8, bl5)) | 0;\n    mid = (mid + Math.imul(al8, bh5)) | 0;\n    mid = (mid + Math.imul(ah8, bl5)) | 0;\n    hi = (hi + Math.imul(ah8, bh5)) | 0;\n    lo = (lo + Math.imul(al7, bl6)) | 0;\n    mid = (mid + Math.imul(al7, bh6)) | 0;\n    mid = (mid + Math.imul(ah7, bl6)) | 0;\n    hi = (hi + Math.imul(ah7, bh6)) | 0;\n    lo = (lo + Math.imul(al6, bl7)) | 0;\n    mid = (mid + Math.imul(al6, bh7)) | 0;\n    mid = (mid + Math.imul(ah6, bl7)) | 0;\n    hi = (hi + Math.imul(ah6, bh7)) | 0;\n    lo = (lo + Math.imul(al5, bl8)) | 0;\n    mid = (mid + Math.imul(al5, bh8)) | 0;\n    mid = (mid + Math.imul(ah5, bl8)) | 0;\n    hi = (hi + Math.imul(ah5, bh8)) | 0;\n    lo = (lo + Math.imul(al4, bl9)) | 0;\n    mid = (mid + Math.imul(al4, bh9)) | 0;\n    mid = (mid + Math.imul(ah4, bl9)) | 0;\n    hi = (hi + Math.imul(ah4, bh9)) | 0;\n    var w13 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w13 >>> 26)) | 0;\n    w13 &= 0x3ffffff;\n    /* k = 14 */\n    lo = Math.imul(al9, bl5);\n    mid = Math.imul(al9, bh5);\n    mid = (mid + Math.imul(ah9, bl5)) | 0;\n    hi = Math.imul(ah9, bh5);\n    lo = (lo + Math.imul(al8, bl6)) | 0;\n    mid = (mid + Math.imul(al8, bh6)) | 0;\n    mid = (mid + Math.imul(ah8, bl6)) | 0;\n    hi = (hi + Math.imul(ah8, bh6)) | 0;\n    lo = (lo + Math.imul(al7, bl7)) | 0;\n    mid = (mid + Math.imul(al7, bh7)) | 0;\n    mid = (mid + Math.imul(ah7, bl7)) | 0;\n    hi = (hi + Math.imul(ah7, bh7)) | 0;\n    lo = (lo + Math.imul(al6, bl8)) | 0;\n    mid = (mid + Math.imul(al6, bh8)) | 0;\n    mid = (mid + Math.imul(ah6, bl8)) | 0;\n    hi = (hi + Math.imul(ah6, bh8)) | 0;\n    lo = (lo + Math.imul(al5, bl9)) | 0;\n    mid = (mid + Math.imul(al5, bh9)) | 0;\n    mid = (mid + Math.imul(ah5, bl9)) | 0;\n    hi = (hi + Math.imul(ah5, bh9)) | 0;\n    var w14 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w14 >>> 26)) | 0;\n    w14 &= 0x3ffffff;\n    /* k = 15 */\n    lo = Math.imul(al9, bl6);\n    mid = Math.imul(al9, bh6);\n    mid = (mid + Math.imul(ah9, bl6)) | 0;\n    hi = Math.imul(ah9, bh6);\n    lo = (lo + Math.imul(al8, bl7)) | 0;\n    mid = (mid + Math.imul(al8, bh7)) | 0;\n    mid = (mid + Math.imul(ah8, bl7)) | 0;\n    hi = (hi + Math.imul(ah8, bh7)) | 0;\n    lo = (lo + Math.imul(al7, bl8)) | 0;\n    mid = (mid + Math.imul(al7, bh8)) | 0;\n    mid = (mid + Math.imul(ah7, bl8)) | 0;\n    hi = (hi + Math.imul(ah7, bh8)) | 0;\n    lo = (lo + Math.imul(al6, bl9)) | 0;\n    mid = (mid + Math.imul(al6, bh9)) | 0;\n    mid = (mid + Math.imul(ah6, bl9)) | 0;\n    hi = (hi + Math.imul(ah6, bh9)) | 0;\n    var w15 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w15 >>> 26)) | 0;\n    w15 &= 0x3ffffff;\n    /* k = 16 */\n    lo = Math.imul(al9, bl7);\n    mid = Math.imul(al9, bh7);\n    mid = (mid + Math.imul(ah9, bl7)) | 0;\n    hi = Math.imul(ah9, bh7);\n    lo = (lo + Math.imul(al8, bl8)) | 0;\n    mid = (mid + Math.imul(al8, bh8)) | 0;\n    mid = (mid + Math.imul(ah8, bl8)) | 0;\n    hi = (hi + Math.imul(ah8, bh8)) | 0;\n    lo = (lo + Math.imul(al7, bl9)) | 0;\n    mid = (mid + Math.imul(al7, bh9)) | 0;\n    mid = (mid + Math.imul(ah7, bl9)) | 0;\n    hi = (hi + Math.imul(ah7, bh9)) | 0;\n    var w16 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w16 >>> 26)) | 0;\n    w16 &= 0x3ffffff;\n    /* k = 17 */\n    lo = Math.imul(al9, bl8);\n    mid = Math.imul(al9, bh8);\n    mid = (mid + Math.imul(ah9, bl8)) | 0;\n    hi = Math.imul(ah9, bh8);\n    lo = (lo + Math.imul(al8, bl9)) | 0;\n    mid = (mid + Math.imul(al8, bh9)) | 0;\n    mid = (mid + Math.imul(ah8, bl9)) | 0;\n    hi = (hi + Math.imul(ah8, bh9)) | 0;\n    var w17 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w17 >>> 26)) | 0;\n    w17 &= 0x3ffffff;\n    /* k = 18 */\n    lo = Math.imul(al9, bl9);\n    mid = Math.imul(al9, bh9);\n    mid = (mid + Math.imul(ah9, bl9)) | 0;\n    hi = Math.imul(ah9, bh9);\n    var w18 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w18 >>> 26)) | 0;\n    w18 &= 0x3ffffff;\n    o[0] = w0;\n    o[1] = w1;\n    o[2] = w2;\n    o[3] = w3;\n    o[4] = w4;\n    o[5] = w5;\n    o[6] = w6;\n    o[7] = w7;\n    o[8] = w8;\n    o[9] = w9;\n    o[10] = w10;\n    o[11] = w11;\n    o[12] = w12;\n    o[13] = w13;\n    o[14] = w14;\n    o[15] = w15;\n    o[16] = w16;\n    o[17] = w17;\n    o[18] = w18;\n    if (c !== 0) {\n      o[19] = c;\n      out.length++;\n    }\n    return out;\n  };\n\n  // Polyfill comb\n  if (!Math.imul) {\n    comb10MulTo = smallMulTo;\n  }\n\n  function bigMulTo (self, num, out) {\n    out.negative = num.negative ^ self.negative;\n    out.length = self.length + num.length;\n\n    var carry = 0;\n    var hncarry = 0;\n    for (var k = 0; k < out.length - 1; k++) {\n      // Sum all words with the same `i + j = k` and accumulate `ncarry`,\n      // note that ncarry could be >= 0x3ffffff\n      var ncarry = hncarry;\n      hncarry = 0;\n      var rword = carry & 0x3ffffff;\n      var maxJ = Math.min(k, num.length - 1);\n      for (var j = Math.max(0, k - self.length + 1); j <= maxJ; j++) {\n        var i = k - j;\n        var a = self.words[i] | 0;\n        var b = num.words[j] | 0;\n        var r = a * b;\n\n        var lo = r & 0x3ffffff;\n        ncarry = (ncarry + ((r / 0x4000000) | 0)) | 0;\n        lo = (lo + rword) | 0;\n        rword = lo & 0x3ffffff;\n        ncarry = (ncarry + (lo >>> 26)) | 0;\n\n        hncarry += ncarry >>> 26;\n        ncarry &= 0x3ffffff;\n      }\n      out.words[k] = rword;\n      carry = ncarry;\n      ncarry = hncarry;\n    }\n    if (carry !== 0) {\n      out.words[k] = carry;\n    } else {\n      out.length--;\n    }\n\n    return out.strip();\n  }\n\n  function jumboMulTo (self, num, out) {\n    var fftm = new FFTM();\n    return fftm.mulp(self, num, out);\n  }\n\n  BN.prototype.mulTo = function mulTo (num, out) {\n    var res;\n    var len = this.length + num.length;\n    if (this.length === 10 && num.length === 10) {\n      res = comb10MulTo(this, num, out);\n    } else if (len < 63) {\n      res = smallMulTo(this, num, out);\n    } else if (len < 1024) {\n      res = bigMulTo(this, num, out);\n    } else {\n      res = jumboMulTo(this, num, out);\n    }\n\n    return res;\n  };\n\n  // Cooley-Tukey algorithm for FFT\n  // slightly revisited to rely on looping instead of recursion\n\n  function FFTM (x, y) {\n    this.x = x;\n    this.y = y;\n  }\n\n  FFTM.prototype.makeRBT = function makeRBT (N) {\n    var t = new Array(N);\n    var l = BN.prototype._countBits(N) - 1;\n    for (var i = 0; i < N; i++) {\n      t[i] = this.revBin(i, l, N);\n    }\n\n    return t;\n  };\n\n  // Returns binary-reversed representation of `x`\n  FFTM.prototype.revBin = function revBin (x, l, N) {\n    if (x === 0 || x === N - 1) return x;\n\n    var rb = 0;\n    for (var i = 0; i < l; i++) {\n      rb |= (x & 1) << (l - i - 1);\n      x >>= 1;\n    }\n\n    return rb;\n  };\n\n  // Performs \"tweedling\" phase, therefore 'emulating'\n  // behaviour of the recursive algorithm\n  FFTM.prototype.permute = function permute (rbt, rws, iws, rtws, itws, N) {\n    for (var i = 0; i < N; i++) {\n      rtws[i] = rws[rbt[i]];\n      itws[i] = iws[rbt[i]];\n    }\n  };\n\n  FFTM.prototype.transform = function transform (rws, iws, rtws, itws, N, rbt) {\n    this.permute(rbt, rws, iws, rtws, itws, N);\n\n    for (var s = 1; s < N; s <<= 1) {\n      var l = s << 1;\n\n      var rtwdf = Math.cos(2 * Math.PI / l);\n      var itwdf = Math.sin(2 * Math.PI / l);\n\n      for (var p = 0; p < N; p += l) {\n        var rtwdf_ = rtwdf;\n        var itwdf_ = itwdf;\n\n        for (var j = 0; j < s; j++) {\n          var re = rtws[p + j];\n          var ie = itws[p + j];\n\n          var ro = rtws[p + j + s];\n          var io = itws[p + j + s];\n\n          var rx = rtwdf_ * ro - itwdf_ * io;\n\n          io = rtwdf_ * io + itwdf_ * ro;\n          ro = rx;\n\n          rtws[p + j] = re + ro;\n          itws[p + j] = ie + io;\n\n          rtws[p + j + s] = re - ro;\n          itws[p + j + s] = ie - io;\n\n          /* jshint maxdepth : false */\n          if (j !== l) {\n            rx = rtwdf * rtwdf_ - itwdf * itwdf_;\n\n            itwdf_ = rtwdf * itwdf_ + itwdf * rtwdf_;\n            rtwdf_ = rx;\n          }\n        }\n      }\n    }\n  };\n\n  FFTM.prototype.guessLen13b = function guessLen13b (n, m) {\n    var N = Math.max(m, n) | 1;\n    var odd = N & 1;\n    var i = 0;\n    for (N = N / 2 | 0; N; N = N >>> 1) {\n      i++;\n    }\n\n    return 1 << i + 1 + odd;\n  };\n\n  FFTM.prototype.conjugate = function conjugate (rws, iws, N) {\n    if (N <= 1) return;\n\n    for (var i = 0; i < N / 2; i++) {\n      var t = rws[i];\n\n      rws[i] = rws[N - i - 1];\n      rws[N - i - 1] = t;\n\n      t = iws[i];\n\n      iws[i] = -iws[N - i - 1];\n      iws[N - i - 1] = -t;\n    }\n  };\n\n  FFTM.prototype.normalize13b = function normalize13b (ws, N) {\n    var carry = 0;\n    for (var i = 0; i < N / 2; i++) {\n      var w = Math.round(ws[2 * i + 1] / N) * 0x2000 +\n        Math.round(ws[2 * i] / N) +\n        carry;\n\n      ws[i] = w & 0x3ffffff;\n\n      if (w < 0x4000000) {\n        carry = 0;\n      } else {\n        carry = w / 0x4000000 | 0;\n      }\n    }\n\n    return ws;\n  };\n\n  FFTM.prototype.convert13b = function convert13b (ws, len, rws, N) {\n    var carry = 0;\n    for (var i = 0; i < len; i++) {\n      carry = carry + (ws[i] | 0);\n\n      rws[2 * i] = carry & 0x1fff; carry = carry >>> 13;\n      rws[2 * i + 1] = carry & 0x1fff; carry = carry >>> 13;\n    }\n\n    // Pad with zeroes\n    for (i = 2 * len; i < N; ++i) {\n      rws[i] = 0;\n    }\n\n    assert(carry === 0);\n    assert((carry & ~0x1fff) === 0);\n  };\n\n  FFTM.prototype.stub = function stub (N) {\n    var ph = new Array(N);\n    for (var i = 0; i < N; i++) {\n      ph[i] = 0;\n    }\n\n    return ph;\n  };\n\n  FFTM.prototype.mulp = function mulp (x, y, out) {\n    var N = 2 * this.guessLen13b(x.length, y.length);\n\n    var rbt = this.makeRBT(N);\n\n    var _ = this.stub(N);\n\n    var rws = new Array(N);\n    var rwst = new Array(N);\n    var iwst = new Array(N);\n\n    var nrws = new Array(N);\n    var nrwst = new Array(N);\n    var niwst = new Array(N);\n\n    var rmws = out.words;\n    rmws.length = N;\n\n    this.convert13b(x.words, x.length, rws, N);\n    this.convert13b(y.words, y.length, nrws, N);\n\n    this.transform(rws, _, rwst, iwst, N, rbt);\n    this.transform(nrws, _, nrwst, niwst, N, rbt);\n\n    for (var i = 0; i < N; i++) {\n      var rx = rwst[i] * nrwst[i] - iwst[i] * niwst[i];\n      iwst[i] = rwst[i] * niwst[i] + iwst[i] * nrwst[i];\n      rwst[i] = rx;\n    }\n\n    this.conjugate(rwst, iwst, N);\n    this.transform(rwst, iwst, rmws, _, N, rbt);\n    this.conjugate(rmws, _, N);\n    this.normalize13b(rmws, N);\n\n    out.negative = x.negative ^ y.negative;\n    out.length = x.length + y.length;\n    return out.strip();\n  };\n\n  // Multiply `this` by `num`\n  BN.prototype.mul = function mul (num) {\n    var out = new BN(null);\n    out.words = new Array(this.length + num.length);\n    return this.mulTo(num, out);\n  };\n\n  // Multiply employing FFT\n  BN.prototype.mulf = function mulf (num) {\n    var out = new BN(null);\n    out.words = new Array(this.length + num.length);\n    return jumboMulTo(this, num, out);\n  };\n\n  // In-place Multiplication\n  BN.prototype.imul = function imul (num) {\n    return this.clone().mulTo(num, this);\n  };\n\n  BN.prototype.imuln = function imuln (num) {\n    assert(typeof num === 'number');\n    assert(num < 0x4000000);\n\n    // Carry\n    var carry = 0;\n    for (var i = 0; i < this.length; i++) {\n      var w = (this.words[i] | 0) * num;\n      var lo = (w & 0x3ffffff) + (carry & 0x3ffffff);\n      carry >>= 26;\n      carry += (w / 0x4000000) | 0;\n      // NOTE: lo is 27bit maximum\n      carry += lo >>> 26;\n      this.words[i] = lo & 0x3ffffff;\n    }\n\n    if (carry !== 0) {\n      this.words[i] = carry;\n      this.length++;\n    }\n\n    return this;\n  };\n\n  BN.prototype.muln = function muln (num) {\n    return this.clone().imuln(num);\n  };\n\n  // `this` * `this`\n  BN.prototype.sqr = function sqr () {\n    return this.mul(this);\n  };\n\n  // `this` * `this` in-place\n  BN.prototype.isqr = function isqr () {\n    return this.imul(this.clone());\n  };\n\n  // Math.pow(`this`, `num`)\n  BN.prototype.pow = function pow (num) {\n    var w = toBitArray(num);\n    if (w.length === 0) return new BN(1);\n\n    // Skip leading zeroes\n    var res = this;\n    for (var i = 0; i < w.length; i++, res = res.sqr()) {\n      if (w[i] !== 0) break;\n    }\n\n    if (++i < w.length) {\n      for (var q = res.sqr(); i < w.length; i++, q = q.sqr()) {\n        if (w[i] === 0) continue;\n\n        res = res.mul(q);\n      }\n    }\n\n    return res;\n  };\n\n  // Shift-left in-place\n  BN.prototype.iushln = function iushln (bits) {\n    assert(typeof bits === 'number' && bits >= 0);\n    var r = bits % 26;\n    var s = (bits - r) / 26;\n    var carryMask = (0x3ffffff >>> (26 - r)) << (26 - r);\n    var i;\n\n    if (r !== 0) {\n      var carry = 0;\n\n      for (i = 0; i < this.length; i++) {\n        var newCarry = this.words[i] & carryMask;\n        var c = ((this.words[i] | 0) - newCarry) << r;\n        this.words[i] = c | carry;\n        carry = newCarry >>> (26 - r);\n      }\n\n      if (carry) {\n        this.words[i] = carry;\n        this.length++;\n      }\n    }\n\n    if (s !== 0) {\n      for (i = this.length - 1; i >= 0; i--) {\n        this.words[i + s] = this.words[i];\n      }\n\n      for (i = 0; i < s; i++) {\n        this.words[i] = 0;\n      }\n\n      this.length += s;\n    }\n\n    return this.strip();\n  };\n\n  BN.prototype.ishln = function ishln (bits) {\n    // TODO(indutny): implement me\n    assert(this.negative === 0);\n    return this.iushln(bits);\n  };\n\n  // Shift-right in-place\n  // NOTE: `hint` is a lowest bit before trailing zeroes\n  // NOTE: if `extended` is present - it will be filled with destroyed bits\n  BN.prototype.iushrn = function iushrn (bits, hint, extended) {\n    assert(typeof bits === 'number' && bits >= 0);\n    var h;\n    if (hint) {\n      h = (hint - (hint % 26)) / 26;\n    } else {\n      h = 0;\n    }\n\n    var r = bits % 26;\n    var s = Math.min((bits - r) / 26, this.length);\n    var mask = 0x3ffffff ^ ((0x3ffffff >>> r) << r);\n    var maskedWords = extended;\n\n    h -= s;\n    h = Math.max(0, h);\n\n    // Extended mode, copy masked part\n    if (maskedWords) {\n      for (var i = 0; i < s; i++) {\n        maskedWords.words[i] = this.words[i];\n      }\n      maskedWords.length = s;\n    }\n\n    if (s === 0) {\n      // No-op, we should not move anything at all\n    } else if (this.length > s) {\n      this.length -= s;\n      for (i = 0; i < this.length; i++) {\n        this.words[i] = this.words[i + s];\n      }\n    } else {\n      this.words[0] = 0;\n      this.length = 1;\n    }\n\n    var carry = 0;\n    for (i = this.length - 1; i >= 0 && (carry !== 0 || i >= h); i--) {\n      var word = this.words[i] | 0;\n      this.words[i] = (carry << (26 - r)) | (word >>> r);\n      carry = word & mask;\n    }\n\n    // Push carried bits as a mask\n    if (maskedWords && carry !== 0) {\n      maskedWords.words[maskedWords.length++] = carry;\n    }\n\n    if (this.length === 0) {\n      this.words[0] = 0;\n      this.length = 1;\n    }\n\n    return this.strip();\n  };\n\n  BN.prototype.ishrn = function ishrn (bits, hint, extended) {\n    // TODO(indutny): implement me\n    assert(this.negative === 0);\n    return this.iushrn(bits, hint, extended);\n  };\n\n  // Shift-left\n  BN.prototype.shln = function shln (bits) {\n    return this.clone().ishln(bits);\n  };\n\n  BN.prototype.ushln = function ushln (bits) {\n    return this.clone().iushln(bits);\n  };\n\n  // Shift-right\n  BN.prototype.shrn = function shrn (bits) {\n    return this.clone().ishrn(bits);\n  };\n\n  BN.prototype.ushrn = function ushrn (bits) {\n    return this.clone().iushrn(bits);\n  };\n\n  // Test if n bit is set\n  BN.prototype.testn = function testn (bit) {\n    assert(typeof bit === 'number' && bit >= 0);\n    var r = bit % 26;\n    var s = (bit - r) / 26;\n    var q = 1 << r;\n\n    // Fast case: bit is much higher than all existing words\n    if (this.length <= s) return false;\n\n    // Check bit and return\n    var w = this.words[s];\n\n    return !!(w & q);\n  };\n\n  // Return only lowers bits of number (in-place)\n  BN.prototype.imaskn = function imaskn (bits) {\n    assert(typeof bits === 'number' && bits >= 0);\n    var r = bits % 26;\n    var s = (bits - r) / 26;\n\n    assert(this.negative === 0, 'imaskn works only with positive numbers');\n\n    if (this.length <= s) {\n      return this;\n    }\n\n    if (r !== 0) {\n      s++;\n    }\n    this.length = Math.min(s, this.length);\n\n    if (r !== 0) {\n      var mask = 0x3ffffff ^ ((0x3ffffff >>> r) << r);\n      this.words[this.length - 1] &= mask;\n    }\n\n    return this.strip();\n  };\n\n  // Return only lowers bits of number\n  BN.prototype.maskn = function maskn (bits) {\n    return this.clone().imaskn(bits);\n  };\n\n  // Add plain number `num` to `this`\n  BN.prototype.iaddn = function iaddn (num) {\n    assert(typeof num === 'number');\n    assert(num < 0x4000000);\n    if (num < 0) return this.isubn(-num);\n\n    // Possible sign change\n    if (this.negative !== 0) {\n      if (this.length === 1 && (this.words[0] | 0) < num) {\n        this.words[0] = num - (this.words[0] | 0);\n        this.negative = 0;\n        return this;\n      }\n\n      this.negative = 0;\n      this.isubn(num);\n      this.negative = 1;\n      return this;\n    }\n\n    // Add without checks\n    return this._iaddn(num);\n  };\n\n  BN.prototype._iaddn = function _iaddn (num) {\n    this.words[0] += num;\n\n    // Carry\n    for (var i = 0; i < this.length && this.words[i] >= 0x4000000; i++) {\n      this.words[i] -= 0x4000000;\n      if (i === this.length - 1) {\n        this.words[i + 1] = 1;\n      } else {\n        this.words[i + 1]++;\n      }\n    }\n    this.length = Math.max(this.length, i + 1);\n\n    return this;\n  };\n\n  // Subtract plain number `num` from `this`\n  BN.prototype.isubn = function isubn (num) {\n    assert(typeof num === 'number');\n    assert(num < 0x4000000);\n    if (num < 0) return this.iaddn(-num);\n\n    if (this.negative !== 0) {\n      this.negative = 0;\n      this.iaddn(num);\n      this.negative = 1;\n      return this;\n    }\n\n    this.words[0] -= num;\n\n    if (this.length === 1 && this.words[0] < 0) {\n      this.words[0] = -this.words[0];\n      this.negative = 1;\n    } else {\n      // Carry\n      for (var i = 0; i < this.length && this.words[i] < 0; i++) {\n        this.words[i] += 0x4000000;\n        this.words[i + 1] -= 1;\n      }\n    }\n\n    return this.strip();\n  };\n\n  BN.prototype.addn = function addn (num) {\n    return this.clone().iaddn(num);\n  };\n\n  BN.prototype.subn = function subn (num) {\n    return this.clone().isubn(num);\n  };\n\n  BN.prototype.iabs = function iabs () {\n    this.negative = 0;\n\n    return this;\n  };\n\n  BN.prototype.abs = function abs () {\n    return this.clone().iabs();\n  };\n\n  BN.prototype._ishlnsubmul = function _ishlnsubmul (num, mul, shift) {\n    var len = num.length + shift;\n    var i;\n\n    this._expand(len);\n\n    var w;\n    var carry = 0;\n    for (i = 0; i < num.length; i++) {\n      w = (this.words[i + shift] | 0) + carry;\n      var right = (num.words[i] | 0) * mul;\n      w -= right & 0x3ffffff;\n      carry = (w >> 26) - ((right / 0x4000000) | 0);\n      this.words[i + shift] = w & 0x3ffffff;\n    }\n    for (; i < this.length - shift; i++) {\n      w = (this.words[i + shift] | 0) + carry;\n      carry = w >> 26;\n      this.words[i + shift] = w & 0x3ffffff;\n    }\n\n    if (carry === 0) return this.strip();\n\n    // Subtraction overflow\n    assert(carry === -1);\n    carry = 0;\n    for (i = 0; i < this.length; i++) {\n      w = -(this.words[i] | 0) + carry;\n      carry = w >> 26;\n      this.words[i] = w & 0x3ffffff;\n    }\n    this.negative = 1;\n\n    return this.strip();\n  };\n\n  BN.prototype._wordDiv = function _wordDiv (num, mode) {\n    var shift = this.length - num.length;\n\n    var a = this.clone();\n    var b = num;\n\n    // Normalize\n    var bhi = b.words[b.length - 1] | 0;\n    var bhiBits = this._countBits(bhi);\n    shift = 26 - bhiBits;\n    if (shift !== 0) {\n      b = b.ushln(shift);\n      a.iushln(shift);\n      bhi = b.words[b.length - 1] | 0;\n    }\n\n    // Initialize quotient\n    var m = a.length - b.length;\n    var q;\n\n    if (mode !== 'mod') {\n      q = new BN(null);\n      q.length = m + 1;\n      q.words = new Array(q.length);\n      for (var i = 0; i < q.length; i++) {\n        q.words[i] = 0;\n      }\n    }\n\n    var diff = a.clone()._ishlnsubmul(b, 1, m);\n    if (diff.negative === 0) {\n      a = diff;\n      if (q) {\n        q.words[m] = 1;\n      }\n    }\n\n    for (var j = m - 1; j >= 0; j--) {\n      var qj = (a.words[b.length + j] | 0) * 0x4000000 +\n        (a.words[b.length + j - 1] | 0);\n\n      // NOTE: (qj / bhi) is (0x3ffffff * 0x4000000 + 0x3ffffff) / 0x2000000 max\n      // (0x7ffffff)\n      qj = Math.min((qj / bhi) | 0, 0x3ffffff);\n\n      a._ishlnsubmul(b, qj, j);\n      while (a.negative !== 0) {\n        qj--;\n        a.negative = 0;\n        a._ishlnsubmul(b, 1, j);\n        if (!a.isZero()) {\n          a.negative ^= 1;\n        }\n      }\n      if (q) {\n        q.words[j] = qj;\n      }\n    }\n    if (q) {\n      q.strip();\n    }\n    a.strip();\n\n    // Denormalize\n    if (mode !== 'div' && shift !== 0) {\n      a.iushrn(shift);\n    }\n\n    return {\n      div: q || null,\n      mod: a\n    };\n  };\n\n  // NOTE: 1) `mode` can be set to `mod` to request mod only,\n  //       to `div` to request div only, or be absent to\n  //       request both div & mod\n  //       2) `positive` is true if unsigned mod is requested\n  BN.prototype.divmod = function divmod (num, mode, positive) {\n    assert(!num.isZero());\n\n    if (this.isZero()) {\n      return {\n        div: new BN(0),\n        mod: new BN(0)\n      };\n    }\n\n    var div, mod, res;\n    if (this.negative !== 0 && num.negative === 0) {\n      res = this.neg().divmod(num, mode);\n\n      if (mode !== 'mod') {\n        div = res.div.neg();\n      }\n\n      if (mode !== 'div') {\n        mod = res.mod.neg();\n        if (positive && mod.negative !== 0) {\n          mod.iadd(num);\n        }\n      }\n\n      return {\n        div: div,\n        mod: mod\n      };\n    }\n\n    if (this.negative === 0 && num.negative !== 0) {\n      res = this.divmod(num.neg(), mode);\n\n      if (mode !== 'mod') {\n        div = res.div.neg();\n      }\n\n      return {\n        div: div,\n        mod: res.mod\n      };\n    }\n\n    if ((this.negative & num.negative) !== 0) {\n      res = this.neg().divmod(num.neg(), mode);\n\n      if (mode !== 'div') {\n        mod = res.mod.neg();\n        if (positive && mod.negative !== 0) {\n          mod.isub(num);\n        }\n      }\n\n      return {\n        div: res.div,\n        mod: mod\n      };\n    }\n\n    // Both numbers are positive at this point\n\n    // Strip both numbers to approximate shift value\n    if (num.length > this.length || this.cmp(num) < 0) {\n      return {\n        div: new BN(0),\n        mod: this\n      };\n    }\n\n    // Very short reduction\n    if (num.length === 1) {\n      if (mode === 'div') {\n        return {\n          div: this.divn(num.words[0]),\n          mod: null\n        };\n      }\n\n      if (mode === 'mod') {\n        return {\n          div: null,\n          mod: new BN(this.modn(num.words[0]))\n        };\n      }\n\n      return {\n        div: this.divn(num.words[0]),\n        mod: new BN(this.modn(num.words[0]))\n      };\n    }\n\n    return this._wordDiv(num, mode);\n  };\n\n  // Find `this` / `num`\n  BN.prototype.div = function div (num) {\n    return this.divmod(num, 'div', false).div;\n  };\n\n  // Find `this` % `num`\n  BN.prototype.mod = function mod (num) {\n    return this.divmod(num, 'mod', false).mod;\n  };\n\n  BN.prototype.umod = function umod (num) {\n    return this.divmod(num, 'mod', true).mod;\n  };\n\n  // Find Round(`this` / `num`)\n  BN.prototype.divRound = function divRound (num) {\n    var dm = this.divmod(num);\n\n    // Fast case - exact division\n    if (dm.mod.isZero()) return dm.div;\n\n    var mod = dm.div.negative !== 0 ? dm.mod.isub(num) : dm.mod;\n\n    var half = num.ushrn(1);\n    var r2 = num.andln(1);\n    var cmp = mod.cmp(half);\n\n    // Round down\n    if (cmp < 0 || r2 === 1 && cmp === 0) return dm.div;\n\n    // Round up\n    return dm.div.negative !== 0 ? dm.div.isubn(1) : dm.div.iaddn(1);\n  };\n\n  BN.prototype.modn = function modn (num) {\n    assert(num <= 0x3ffffff);\n    var p = (1 << 26) % num;\n\n    var acc = 0;\n    for (var i = this.length - 1; i >= 0; i--) {\n      acc = (p * acc + (this.words[i] | 0)) % num;\n    }\n\n    return acc;\n  };\n\n  // In-place division by number\n  BN.prototype.idivn = function idivn (num) {\n    assert(num <= 0x3ffffff);\n\n    var carry = 0;\n    for (var i = this.length - 1; i >= 0; i--) {\n      var w = (this.words[i] | 0) + carry * 0x4000000;\n      this.words[i] = (w / num) | 0;\n      carry = w % num;\n    }\n\n    return this.strip();\n  };\n\n  BN.prototype.divn = function divn (num) {\n    return this.clone().idivn(num);\n  };\n\n  BN.prototype.egcd = function egcd (p) {\n    assert(p.negative === 0);\n    assert(!p.isZero());\n\n    var x = this;\n    var y = p.clone();\n\n    if (x.negative !== 0) {\n      x = x.umod(p);\n    } else {\n      x = x.clone();\n    }\n\n    // A * x + B * y = x\n    var A = new BN(1);\n    var B = new BN(0);\n\n    // C * x + D * y = y\n    var C = new BN(0);\n    var D = new BN(1);\n\n    var g = 0;\n\n    while (x.isEven() && y.isEven()) {\n      x.iushrn(1);\n      y.iushrn(1);\n      ++g;\n    }\n\n    var yp = y.clone();\n    var xp = x.clone();\n\n    while (!x.isZero()) {\n      for (var i = 0, im = 1; (x.words[0] & im) === 0 && i < 26; ++i, im <<= 1);\n      if (i > 0) {\n        x.iushrn(i);\n        while (i-- > 0) {\n          if (A.isOdd() || B.isOdd()) {\n            A.iadd(yp);\n            B.isub(xp);\n          }\n\n          A.iushrn(1);\n          B.iushrn(1);\n        }\n      }\n\n      for (var j = 0, jm = 1; (y.words[0] & jm) === 0 && j < 26; ++j, jm <<= 1);\n      if (j > 0) {\n        y.iushrn(j);\n        while (j-- > 0) {\n          if (C.isOdd() || D.isOdd()) {\n            C.iadd(yp);\n            D.isub(xp);\n          }\n\n          C.iushrn(1);\n          D.iushrn(1);\n        }\n      }\n\n      if (x.cmp(y) >= 0) {\n        x.isub(y);\n        A.isub(C);\n        B.isub(D);\n      } else {\n        y.isub(x);\n        C.isub(A);\n        D.isub(B);\n      }\n    }\n\n    return {\n      a: C,\n      b: D,\n      gcd: y.iushln(g)\n    };\n  };\n\n  // This is reduced incarnation of the binary EEA\n  // above, designated to invert members of the\n  // _prime_ fields F(p) at a maximal speed\n  BN.prototype._invmp = function _invmp (p) {\n    assert(p.negative === 0);\n    assert(!p.isZero());\n\n    var a = this;\n    var b = p.clone();\n\n    if (a.negative !== 0) {\n      a = a.umod(p);\n    } else {\n      a = a.clone();\n    }\n\n    var x1 = new BN(1);\n    var x2 = new BN(0);\n\n    var delta = b.clone();\n\n    while (a.cmpn(1) > 0 && b.cmpn(1) > 0) {\n      for (var i = 0, im = 1; (a.words[0] & im) === 0 && i < 26; ++i, im <<= 1);\n      if (i > 0) {\n        a.iushrn(i);\n        while (i-- > 0) {\n          if (x1.isOdd()) {\n            x1.iadd(delta);\n          }\n\n          x1.iushrn(1);\n        }\n      }\n\n      for (var j = 0, jm = 1; (b.words[0] & jm) === 0 && j < 26; ++j, jm <<= 1);\n      if (j > 0) {\n        b.iushrn(j);\n        while (j-- > 0) {\n          if (x2.isOdd()) {\n            x2.iadd(delta);\n          }\n\n          x2.iushrn(1);\n        }\n      }\n\n      if (a.cmp(b) >= 0) {\n        a.isub(b);\n        x1.isub(x2);\n      } else {\n        b.isub(a);\n        x2.isub(x1);\n      }\n    }\n\n    var res;\n    if (a.cmpn(1) === 0) {\n      res = x1;\n    } else {\n      res = x2;\n    }\n\n    if (res.cmpn(0) < 0) {\n      res.iadd(p);\n    }\n\n    return res;\n  };\n\n  BN.prototype.gcd = function gcd (num) {\n    if (this.isZero()) return num.abs();\n    if (num.isZero()) return this.abs();\n\n    var a = this.clone();\n    var b = num.clone();\n    a.negative = 0;\n    b.negative = 0;\n\n    // Remove common factor of two\n    for (var shift = 0; a.isEven() && b.isEven(); shift++) {\n      a.iushrn(1);\n      b.iushrn(1);\n    }\n\n    do {\n      while (a.isEven()) {\n        a.iushrn(1);\n      }\n      while (b.isEven()) {\n        b.iushrn(1);\n      }\n\n      var r = a.cmp(b);\n      if (r < 0) {\n        // Swap `a` and `b` to make `a` always bigger than `b`\n        var t = a;\n        a = b;\n        b = t;\n      } else if (r === 0 || b.cmpn(1) === 0) {\n        break;\n      }\n\n      a.isub(b);\n    } while (true);\n\n    return b.iushln(shift);\n  };\n\n  // Invert number in the field F(num)\n  BN.prototype.invm = function invm (num) {\n    return this.egcd(num).a.umod(num);\n  };\n\n  BN.prototype.isEven = function isEven () {\n    return (this.words[0] & 1) === 0;\n  };\n\n  BN.prototype.isOdd = function isOdd () {\n    return (this.words[0] & 1) === 1;\n  };\n\n  // And first word and num\n  BN.prototype.andln = function andln (num) {\n    return this.words[0] & num;\n  };\n\n  // Increment at the bit position in-line\n  BN.prototype.bincn = function bincn (bit) {\n    assert(typeof bit === 'number');\n    var r = bit % 26;\n    var s = (bit - r) / 26;\n    var q = 1 << r;\n\n    // Fast case: bit is much higher than all existing words\n    if (this.length <= s) {\n      this._expand(s + 1);\n      this.words[s] |= q;\n      return this;\n    }\n\n    // Add bit and propagate, if needed\n    var carry = q;\n    for (var i = s; carry !== 0 && i < this.length; i++) {\n      var w = this.words[i] | 0;\n      w += carry;\n      carry = w >>> 26;\n      w &= 0x3ffffff;\n      this.words[i] = w;\n    }\n    if (carry !== 0) {\n      this.words[i] = carry;\n      this.length++;\n    }\n    return this;\n  };\n\n  BN.prototype.isZero = function isZero () {\n    return this.length === 1 && this.words[0] === 0;\n  };\n\n  BN.prototype.cmpn = function cmpn (num) {\n    var negative = num < 0;\n\n    if (this.negative !== 0 && !negative) return -1;\n    if (this.negative === 0 && negative) return 1;\n\n    this.strip();\n\n    var res;\n    if (this.length > 1) {\n      res = 1;\n    } else {\n      if (negative) {\n        num = -num;\n      }\n\n      assert(num <= 0x3ffffff, 'Number is too big');\n\n      var w = this.words[0] | 0;\n      res = w === num ? 0 : w < num ? -1 : 1;\n    }\n    if (this.negative !== 0) return -res | 0;\n    return res;\n  };\n\n  // Compare two numbers and return:\n  // 1 - if `this` > `num`\n  // 0 - if `this` == `num`\n  // -1 - if `this` < `num`\n  BN.prototype.cmp = function cmp (num) {\n    if (this.negative !== 0 && num.negative === 0) return -1;\n    if (this.negative === 0 && num.negative !== 0) return 1;\n\n    var res = this.ucmp(num);\n    if (this.negative !== 0) return -res | 0;\n    return res;\n  };\n\n  // Unsigned comparison\n  BN.prototype.ucmp = function ucmp (num) {\n    // At this point both numbers have the same sign\n    if (this.length > num.length) return 1;\n    if (this.length < num.length) return -1;\n\n    var res = 0;\n    for (var i = this.length - 1; i >= 0; i--) {\n      var a = this.words[i] | 0;\n      var b = num.words[i] | 0;\n\n      if (a === b) continue;\n      if (a < b) {\n        res = -1;\n      } else if (a > b) {\n        res = 1;\n      }\n      break;\n    }\n    return res;\n  };\n\n  BN.prototype.gtn = function gtn (num) {\n    return this.cmpn(num) === 1;\n  };\n\n  BN.prototype.gt = function gt (num) {\n    return this.cmp(num) === 1;\n  };\n\n  BN.prototype.gten = function gten (num) {\n    return this.cmpn(num) >= 0;\n  };\n\n  BN.prototype.gte = function gte (num) {\n    return this.cmp(num) >= 0;\n  };\n\n  BN.prototype.ltn = function ltn (num) {\n    return this.cmpn(num) === -1;\n  };\n\n  BN.prototype.lt = function lt (num) {\n    return this.cmp(num) === -1;\n  };\n\n  BN.prototype.lten = function lten (num) {\n    return this.cmpn(num) <= 0;\n  };\n\n  BN.prototype.lte = function lte (num) {\n    return this.cmp(num) <= 0;\n  };\n\n  BN.prototype.eqn = function eqn (num) {\n    return this.cmpn(num) === 0;\n  };\n\n  BN.prototype.eq = function eq (num) {\n    return this.cmp(num) === 0;\n  };\n\n  //\n  // A reduce context, could be using montgomery or something better, depending\n  // on the `m` itself.\n  //\n  BN.red = function red (num) {\n    return new Red(num);\n  };\n\n  BN.prototype.toRed = function toRed (ctx) {\n    assert(!this.red, 'Already a number in reduction context');\n    assert(this.negative === 0, 'red works only with positives');\n    return ctx.convertTo(this)._forceRed(ctx);\n  };\n\n  BN.prototype.fromRed = function fromRed () {\n    assert(this.red, 'fromRed works only with numbers in reduction context');\n    return this.red.convertFrom(this);\n  };\n\n  BN.prototype._forceRed = function _forceRed (ctx) {\n    this.red = ctx;\n    return this;\n  };\n\n  BN.prototype.forceRed = function forceRed (ctx) {\n    assert(!this.red, 'Already a number in reduction context');\n    return this._forceRed(ctx);\n  };\n\n  BN.prototype.redAdd = function redAdd (num) {\n    assert(this.red, 'redAdd works only with red numbers');\n    return this.red.add(this, num);\n  };\n\n  BN.prototype.redIAdd = function redIAdd (num) {\n    assert(this.red, 'redIAdd works only with red numbers');\n    return this.red.iadd(this, num);\n  };\n\n  BN.prototype.redSub = function redSub (num) {\n    assert(this.red, 'redSub works only with red numbers');\n    return this.red.sub(this, num);\n  };\n\n  BN.prototype.redISub = function redISub (num) {\n    assert(this.red, 'redISub works only with red numbers');\n    return this.red.isub(this, num);\n  };\n\n  BN.prototype.redShl = function redShl (num) {\n    assert(this.red, 'redShl works only with red numbers');\n    return this.red.shl(this, num);\n  };\n\n  BN.prototype.redMul = function redMul (num) {\n    assert(this.red, 'redMul works only with red numbers');\n    this.red._verify2(this, num);\n    return this.red.mul(this, num);\n  };\n\n  BN.prototype.redIMul = function redIMul (num) {\n    assert(this.red, 'redMul works only with red numbers');\n    this.red._verify2(this, num);\n    return this.red.imul(this, num);\n  };\n\n  BN.prototype.redSqr = function redSqr () {\n    assert(this.red, 'redSqr works only with red numbers');\n    this.red._verify1(this);\n    return this.red.sqr(this);\n  };\n\n  BN.prototype.redISqr = function redISqr () {\n    assert(this.red, 'redISqr works only with red numbers');\n    this.red._verify1(this);\n    return this.red.isqr(this);\n  };\n\n  // Square root over p\n  BN.prototype.redSqrt = function redSqrt () {\n    assert(this.red, 'redSqrt works only with red numbers');\n    this.red._verify1(this);\n    return this.red.sqrt(this);\n  };\n\n  BN.prototype.redInvm = function redInvm () {\n    assert(this.red, 'redInvm works only with red numbers');\n    this.red._verify1(this);\n    return this.red.invm(this);\n  };\n\n  // Return negative clone of `this` % `red modulo`\n  BN.prototype.redNeg = function redNeg () {\n    assert(this.red, 'redNeg works only with red numbers');\n    this.red._verify1(this);\n    return this.red.neg(this);\n  };\n\n  BN.prototype.redPow = function redPow (num) {\n    assert(this.red && !num.red, 'redPow(normalNum)');\n    this.red._verify1(this);\n    return this.red.pow(this, num);\n  };\n\n  // Prime numbers with efficient reduction\n  var primes = {\n    k256: null,\n    p224: null,\n    p192: null,\n    p25519: null\n  };\n\n  // Pseudo-Mersenne prime\n  function MPrime (name, p) {\n    // P = 2 ^ N - K\n    this.name = name;\n    this.p = new BN(p, 16);\n    this.n = this.p.bitLength();\n    this.k = new BN(1).iushln(this.n).isub(this.p);\n\n    this.tmp = this._tmp();\n  }\n\n  MPrime.prototype._tmp = function _tmp () {\n    var tmp = new BN(null);\n    tmp.words = new Array(Math.ceil(this.n / 13));\n    return tmp;\n  };\n\n  MPrime.prototype.ireduce = function ireduce (num) {\n    // Assumes that `num` is less than `P^2`\n    // num = HI * (2 ^ N - K) + HI * K + LO = HI * K + LO (mod P)\n    var r = num;\n    var rlen;\n\n    do {\n      this.split(r, this.tmp);\n      r = this.imulK(r);\n      r = r.iadd(this.tmp);\n      rlen = r.bitLength();\n    } while (rlen > this.n);\n\n    var cmp = rlen < this.n ? -1 : r.ucmp(this.p);\n    if (cmp === 0) {\n      r.words[0] = 0;\n      r.length = 1;\n    } else if (cmp > 0) {\n      r.isub(this.p);\n    } else {\n      if (r.strip !== undefined) {\n        // r is BN v4 instance\n        r.strip();\n      } else {\n        // r is BN v5 instance\n        r._strip();\n      }\n    }\n\n    return r;\n  };\n\n  MPrime.prototype.split = function split (input, out) {\n    input.iushrn(this.n, 0, out);\n  };\n\n  MPrime.prototype.imulK = function imulK (num) {\n    return num.imul(this.k);\n  };\n\n  function K256 () {\n    MPrime.call(\n      this,\n      'k256',\n      'ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffe fffffc2f');\n  }\n  inherits(K256, MPrime);\n\n  K256.prototype.split = function split (input, output) {\n    // 256 = 9 * 26 + 22\n    var mask = 0x3fffff;\n\n    var outLen = Math.min(input.length, 9);\n    for (var i = 0; i < outLen; i++) {\n      output.words[i] = input.words[i];\n    }\n    output.length = outLen;\n\n    if (input.length <= 9) {\n      input.words[0] = 0;\n      input.length = 1;\n      return;\n    }\n\n    // Shift by 9 limbs\n    var prev = input.words[9];\n    output.words[output.length++] = prev & mask;\n\n    for (i = 10; i < input.length; i++) {\n      var next = input.words[i] | 0;\n      input.words[i - 10] = ((next & mask) << 4) | (prev >>> 22);\n      prev = next;\n    }\n    prev >>>= 22;\n    input.words[i - 10] = prev;\n    if (prev === 0 && input.length > 10) {\n      input.length -= 10;\n    } else {\n      input.length -= 9;\n    }\n  };\n\n  K256.prototype.imulK = function imulK (num) {\n    // K = 0x1000003d1 = [ 0x40, 0x3d1 ]\n    num.words[num.length] = 0;\n    num.words[num.length + 1] = 0;\n    num.length += 2;\n\n    // bounded at: 0x40 * 0x3ffffff + 0x3d0 = 0x100000390\n    var lo = 0;\n    for (var i = 0; i < num.length; i++) {\n      var w = num.words[i] | 0;\n      lo += w * 0x3d1;\n      num.words[i] = lo & 0x3ffffff;\n      lo = w * 0x40 + ((lo / 0x4000000) | 0);\n    }\n\n    // Fast length reduction\n    if (num.words[num.length - 1] === 0) {\n      num.length--;\n      if (num.words[num.length - 1] === 0) {\n        num.length--;\n      }\n    }\n    return num;\n  };\n\n  function P224 () {\n    MPrime.call(\n      this,\n      'p224',\n      'ffffffff ffffffff ffffffff ffffffff 00000000 00000000 00000001');\n  }\n  inherits(P224, MPrime);\n\n  function P192 () {\n    MPrime.call(\n      this,\n      'p192',\n      'ffffffff ffffffff ffffffff fffffffe ffffffff ffffffff');\n  }\n  inherits(P192, MPrime);\n\n  function P25519 () {\n    // 2 ^ 255 - 19\n    MPrime.call(\n      this,\n      '25519',\n      '7fffffffffffffff ffffffffffffffff ffffffffffffffff ffffffffffffffed');\n  }\n  inherits(P25519, MPrime);\n\n  P25519.prototype.imulK = function imulK (num) {\n    // K = 0x13\n    var carry = 0;\n    for (var i = 0; i < num.length; i++) {\n      var hi = (num.words[i] | 0) * 0x13 + carry;\n      var lo = hi & 0x3ffffff;\n      hi >>>= 26;\n\n      num.words[i] = lo;\n      carry = hi;\n    }\n    if (carry !== 0) {\n      num.words[num.length++] = carry;\n    }\n    return num;\n  };\n\n  // Exported mostly for testing purposes, use plain name instead\n  BN._prime = function prime (name) {\n    // Cached version of prime\n    if (primes[name]) return primes[name];\n\n    var prime;\n    if (name === 'k256') {\n      prime = new K256();\n    } else if (name === 'p224') {\n      prime = new P224();\n    } else if (name === 'p192') {\n      prime = new P192();\n    } else if (name === 'p25519') {\n      prime = new P25519();\n    } else {\n      throw new Error('Unknown prime ' + name);\n    }\n    primes[name] = prime;\n\n    return prime;\n  };\n\n  //\n  // Base reduction engine\n  //\n  function Red (m) {\n    if (typeof m === 'string') {\n      var prime = BN._prime(m);\n      this.m = prime.p;\n      this.prime = prime;\n    } else {\n      assert(m.gtn(1), 'modulus must be greater than 1');\n      this.m = m;\n      this.prime = null;\n    }\n  }\n\n  Red.prototype._verify1 = function _verify1 (a) {\n    assert(a.negative === 0, 'red works only with positives');\n    assert(a.red, 'red works only with red numbers');\n  };\n\n  Red.prototype._verify2 = function _verify2 (a, b) {\n    assert((a.negative | b.negative) === 0, 'red works only with positives');\n    assert(a.red && a.red === b.red,\n      'red works only with red numbers');\n  };\n\n  Red.prototype.imod = function imod (a) {\n    if (this.prime) return this.prime.ireduce(a)._forceRed(this);\n    return a.umod(this.m)._forceRed(this);\n  };\n\n  Red.prototype.neg = function neg (a) {\n    if (a.isZero()) {\n      return a.clone();\n    }\n\n    return this.m.sub(a)._forceRed(this);\n  };\n\n  Red.prototype.add = function add (a, b) {\n    this._verify2(a, b);\n\n    var res = a.add(b);\n    if (res.cmp(this.m) >= 0) {\n      res.isub(this.m);\n    }\n    return res._forceRed(this);\n  };\n\n  Red.prototype.iadd = function iadd (a, b) {\n    this._verify2(a, b);\n\n    var res = a.iadd(b);\n    if (res.cmp(this.m) >= 0) {\n      res.isub(this.m);\n    }\n    return res;\n  };\n\n  Red.prototype.sub = function sub (a, b) {\n    this._verify2(a, b);\n\n    var res = a.sub(b);\n    if (res.cmpn(0) < 0) {\n      res.iadd(this.m);\n    }\n    return res._forceRed(this);\n  };\n\n  Red.prototype.isub = function isub (a, b) {\n    this._verify2(a, b);\n\n    var res = a.isub(b);\n    if (res.cmpn(0) < 0) {\n      res.iadd(this.m);\n    }\n    return res;\n  };\n\n  Red.prototype.shl = function shl (a, num) {\n    this._verify1(a);\n    return this.imod(a.ushln(num));\n  };\n\n  Red.prototype.imul = function imul (a, b) {\n    this._verify2(a, b);\n    return this.imod(a.imul(b));\n  };\n\n  Red.prototype.mul = function mul (a, b) {\n    this._verify2(a, b);\n    return this.imod(a.mul(b));\n  };\n\n  Red.prototype.isqr = function isqr (a) {\n    return this.imul(a, a.clone());\n  };\n\n  Red.prototype.sqr = function sqr (a) {\n    return this.mul(a, a);\n  };\n\n  Red.prototype.sqrt = function sqrt (a) {\n    if (a.isZero()) return a.clone();\n\n    var mod3 = this.m.andln(3);\n    assert(mod3 % 2 === 1);\n\n    // Fast case\n    if (mod3 === 3) {\n      var pow = this.m.add(new BN(1)).iushrn(2);\n      return this.pow(a, pow);\n    }\n\n    // Tonelli-Shanks algorithm (Totally unoptimized and slow)\n    //\n    // Find Q and S, that Q * 2 ^ S = (P - 1)\n    var q = this.m.subn(1);\n    var s = 0;\n    while (!q.isZero() && q.andln(1) === 0) {\n      s++;\n      q.iushrn(1);\n    }\n    assert(!q.isZero());\n\n    var one = new BN(1).toRed(this);\n    var nOne = one.redNeg();\n\n    // Find quadratic non-residue\n    // NOTE: Max is such because of generalized Riemann hypothesis.\n    var lpow = this.m.subn(1).iushrn(1);\n    var z = this.m.bitLength();\n    z = new BN(2 * z * z).toRed(this);\n\n    while (this.pow(z, lpow).cmp(nOne) !== 0) {\n      z.redIAdd(nOne);\n    }\n\n    var c = this.pow(z, q);\n    var r = this.pow(a, q.addn(1).iushrn(1));\n    var t = this.pow(a, q);\n    var m = s;\n    while (t.cmp(one) !== 0) {\n      var tmp = t;\n      for (var i = 0; tmp.cmp(one) !== 0; i++) {\n        tmp = tmp.redSqr();\n      }\n      assert(i < m);\n      var b = this.pow(c, new BN(1).iushln(m - i - 1));\n\n      r = r.redMul(b);\n      c = b.redSqr();\n      t = t.redMul(c);\n      m = i;\n    }\n\n    return r;\n  };\n\n  Red.prototype.invm = function invm (a) {\n    var inv = a._invmp(this.m);\n    if (inv.negative !== 0) {\n      inv.negative = 0;\n      return this.imod(inv).redNeg();\n    } else {\n      return this.imod(inv);\n    }\n  };\n\n  Red.prototype.pow = function pow (a, num) {\n    if (num.isZero()) return new BN(1).toRed(this);\n    if (num.cmpn(1) === 0) return a.clone();\n\n    var windowSize = 4;\n    var wnd = new Array(1 << windowSize);\n    wnd[0] = new BN(1).toRed(this);\n    wnd[1] = a;\n    for (var i = 2; i < wnd.length; i++) {\n      wnd[i] = this.mul(wnd[i - 1], a);\n    }\n\n    var res = wnd[0];\n    var current = 0;\n    var currentLen = 0;\n    var start = num.bitLength() % 26;\n    if (start === 0) {\n      start = 26;\n    }\n\n    for (i = num.length - 1; i >= 0; i--) {\n      var word = num.words[i];\n      for (var j = start - 1; j >= 0; j--) {\n        var bit = (word >> j) & 1;\n        if (res !== wnd[0]) {\n          res = this.sqr(res);\n        }\n\n        if (bit === 0 && current === 0) {\n          currentLen = 0;\n          continue;\n        }\n\n        current <<= 1;\n        current |= bit;\n        currentLen++;\n        if (currentLen !== windowSize && (i !== 0 || j !== 0)) continue;\n\n        res = this.mul(res, wnd[current]);\n        currentLen = 0;\n        current = 0;\n      }\n      start = 26;\n    }\n\n    return res;\n  };\n\n  Red.prototype.convertTo = function convertTo (num) {\n    var r = num.umod(this.m);\n\n    return r === num ? r.clone() : r;\n  };\n\n  Red.prototype.convertFrom = function convertFrom (num) {\n    var res = num.clone();\n    res.red = null;\n    return res;\n  };\n\n  //\n  // Montgomery method engine\n  //\n\n  BN.mont = function mont (num) {\n    return new Mont(num);\n  };\n\n  function Mont (m) {\n    Red.call(this, m);\n\n    this.shift = this.m.bitLength();\n    if (this.shift % 26 !== 0) {\n      this.shift += 26 - (this.shift % 26);\n    }\n\n    this.r = new BN(1).iushln(this.shift);\n    this.r2 = this.imod(this.r.sqr());\n    this.rinv = this.r._invmp(this.m);\n\n    this.minv = this.rinv.mul(this.r).isubn(1).div(this.m);\n    this.minv = this.minv.umod(this.r);\n    this.minv = this.r.sub(this.minv);\n  }\n  inherits(Mont, Red);\n\n  Mont.prototype.convertTo = function convertTo (num) {\n    return this.imod(num.ushln(this.shift));\n  };\n\n  Mont.prototype.convertFrom = function convertFrom (num) {\n    var r = this.imod(num.mul(this.rinv));\n    r.red = null;\n    return r;\n  };\n\n  Mont.prototype.imul = function imul (a, b) {\n    if (a.isZero() || b.isZero()) {\n      a.words[0] = 0;\n      a.length = 1;\n      return a;\n    }\n\n    var t = a.imul(b);\n    var c = t.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m);\n    var u = t.isub(c).iushrn(this.shift);\n    var res = u;\n\n    if (u.cmp(this.m) >= 0) {\n      res = u.isub(this.m);\n    } else if (u.cmpn(0) < 0) {\n      res = u.iadd(this.m);\n    }\n\n    return res._forceRed(this);\n  };\n\n  Mont.prototype.mul = function mul (a, b) {\n    if (a.isZero() || b.isZero()) return new BN(0)._forceRed(this);\n\n    var t = a.mul(b);\n    var c = t.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m);\n    var u = t.isub(c).iushrn(this.shift);\n    var res = u;\n    if (u.cmp(this.m) >= 0) {\n      res = u.isub(this.m);\n    } else if (u.cmpn(0) < 0) {\n      res = u.iadd(this.m);\n    }\n\n    return res._forceRed(this);\n  };\n\n  Mont.prototype.invm = function invm (a) {\n    // (AR)^-1 * R^2 = (A^-1 * R^-1) * R^2 = A^-1 * R\n    var res = this.imod(a._invmp(this.m).mul(this.r2));\n    return res._forceRed(this);\n  };\n})(typeof module === 'undefined' || module, this);\n"],"sourceRoot":""}