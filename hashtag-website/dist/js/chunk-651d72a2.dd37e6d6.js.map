{"version":3,"sources":["webpack:///./node_modules/bnc-onboard/node_modules/keccak/js.js","webpack:///./node_modules/ethereumjs-common/dist/chains/index.js","webpack:///./node_modules/bnc-onboard/node_modules/ethereumjs-tx/dist/fake.js","webpack:///./node_modules/bnc-onboard/node_modules/keccak/node_modules/safe-buffer/index.js","webpack:///./node_modules/bnc-onboard/node_modules/ethereumjs-util/dist/object.js","webpack:///./node_modules/bnc-onboard/node_modules/keccak/lib/api/keccak.js","webpack:///./node_modules/bnc-onboard/node_modules/ethereumjs-util/dist/signature.js","webpack:///./node_modules/bnc-onboard/node_modules/ethereumjs-util/dist/index.js","webpack:///./node_modules/ethereumjs-common/dist/hardforks/index.js","webpack:///./node_modules/bnc-onboard/node_modules/keccak/lib/api/shake.js","webpack:///./node_modules/bnc-onboard/node_modules/ethereumjs-tx/dist/index.js","webpack:///./node_modules/bnc-onboard/node_modules/ethereumjs-util/dist/hash.js","webpack:///./node_modules/bnc-onboard/node_modules/keccak/lib/keccak.js","webpack:///./node_modules/ethereumjs-common/dist/index.js","webpack:///./node_modules/bnc-onboard/node_modules/keccak/lib/api/index.js","webpack:///./node_modules/bnc-onboard/node_modules/keccak/lib/keccak-state-unroll.js","webpack:///./node_modules/bnc-onboard/node_modules/ethereumjs-tx/dist/transaction.js","webpack:///./node_modules/bnc-onboard/node_modules/ethereumjs-util/dist/bytes.js","webpack:///./node_modules/bnc-onboard/node_modules/ethereumjs-util/dist/account.js","webpack:///./node_modules/bnc-onboard/node_modules/ethereumjs-util/dist/constants.js"],"names":["module","exports","Object","defineProperty","value","chains","names","mainnet","ropsten","rinkeby","kovan","goerli","__extends","this","extendStatics","d","b","setPrototypeOf","__proto__","Array","p","hasOwnProperty","__","constructor","prototype","create","ethereumjs_util_1","buffer_1","transaction_1","FakeTransaction","_super","data","opts","_this","call","enumerable","configurable","get","getSenderAddress","set","val","_from","toBuffer","txData","from","hash","includeSignature","toString","fakeKey","Buffer","concat","slice","sign","default","buffer","copyProps","src","dst","key","SafeBuffer","arg","encodingOrOffset","length","alloc","allocUnsafe","allocUnsafeSlow","TypeError","size","fill","encoding","buf","undefined","SlowBuffer","assert","ethjsUtil","rlp","bytes_1","defineProperties","self","fields","raw","_fields","toJSON","label","obj_1","forEach","field","baToJSON","serialize","encode","i","getter","setter","v","allowZero","allowLess","stripZeros","name","push","alias","stripHexPrefix","isBuffer","decode","isArray","Error","keys_1","keys","indexOf","Transform","inherits","KeccakState","Keccak","rate","capacity","delimitedSuffix","hashBitLength","options","_rate","_capacity","_delimitedSuffix","_hashBitLength","_options","_state","initialize","_finalized","_transform","chunk","callback","error","update","err","_flush","digest","absorb","absorbLastFewBits","squeeze","_resetState","_clone","clone","copy","secp256k1","BN","hash_1","calculateSigRecovery","chainId","isValidSigRecovery","recovery","ecsign","msgHash","privateKey","sig","ret","r","signature","s","ecrecover","setLength","senderPubKey","recover","publicKeyConvert","toRpcSig","bufferToHex","setLengthLeft","fromRpcSig","isValidSignature","homesteadOrLater","SECP256K1_N_DIV_2","SECP256K1_N","rBN","sBN","isZero","gt","cmp","hashPersonalMessage","message","prefix","keccak","__export","m","assign","hardforks","Shake","_read","dataByteLength","Transaction","fake_1","createKeccakHash","createHash","a","bits","isHexString","keccak256","sha256","ripemd160","padded","rlphash","keccakState","state","blockSize","count","squeezing","p1600","output","dest","__assign","t","n","arguments","apply","chains_1","hardforks_1","Common","chain","hardfork","supportedHardforks","_chainParams","setChain","_hardfork","_supportedHardforks","setHardfork","forCustomChain","baseChain","customChainParams","standardChainParams","_getChainParams","required","_i","required_1","param","_isSupportedHardfork","changed","hardforkChanges_1","hfChanges","_chooseHardfork","onlySupported","_getHardfork","hfs","hfs_1","hf","chainName","_a","supportedHf","topic","hardforkChanges_2","paramByBlock","blockNumber","activeHfs","activeHardforks","hardforkIsActiveOnBlock","hfBlock","hardforkBlock","activeOnBlock","hardforkGteHardfork","hardfork1","hardfork2","onlyActive","posHf1","posHf2","index","hardforks_2","gteHardfork","hardforkIsActiveOnChain","hfs_2","activeHardfork","isHardforkBlock","consensus","finality","genesis","bootstrapNodes","networkId","createKeccak","createShake","algorithm","toLowerCase","P1600_ROUND_CONSTANTS","round","lo0","hi0","lo1","hi1","lo2","hi2","lo3","hi3","lo4","hi4","lo","hi","t1slo0","t1shi0","t1slo5","t1shi5","t1slo10","t1shi10","t1slo15","t1shi15","t1slo20","t1shi20","t1slo1","t1shi1","t1slo6","t1shi6","t1slo11","t1shi11","t1slo16","t1shi16","t1slo21","t1shi21","t1slo2","t1shi2","t1slo7","t1shi7","t1slo12","t1shi12","t1slo17","t1shi17","t1slo22","t1shi22","t1slo3","t1shi3","t1slo8","t1shi8","t1slo13","t1shi13","t1slo18","t1shi18","t1slo23","t1shi23","t1slo4","t1shi4","t1slo9","t1shi9","t1slo14","t1shi14","t1slo19","t1shi19","t1slo24","t1shi24","t2slo0","t2shi0","t2slo16","t2shi16","t2slo7","t2shi7","t2slo23","t2shi23","t2slo14","t2shi14","t2slo10","t2shi10","t2slo1","t2shi1","t2slo17","t2shi17","t2slo8","t2shi8","t2slo24","t2shi24","t2slo20","t2shi20","t2slo11","t2shi11","t2slo2","t2shi2","t2slo18","t2shi18","t2slo9","t2shi9","t2slo5","t2shi5","t2slo21","t2shi21","t2slo12","t2shi12","t2slo3","t2shi3","t2slo19","t2shi19","t2slo15","t2shi15","t2slo6","t2shi6","t2slo22","t2shi22","t2slo13","t2shi13","t2slo4","t2shi4","ethereumjs_common_1","N_DIV_2","common","_common","bind","_validateV","_overrideVSetterWithValidation","toCreationAddress","to","items","_implementsEIP155","getChainId","pubkey","getSenderPublicKey","publicToAddress","verifySignature","_senderPubKey","bufferToInt","useChainIdWhileRecoveringPubKey","e","getDataFee","cost","iaddn","getBaseFee","fee","getUpfrontCost","gasLimit","imul","gasPrice","iadd","validate","stringError","errors","join","labels","vInt","isValidEIP155V","_isSigned","vDescriptor","getOwnPropertyDescriptor","onEIP155BlockOrLater","vAndChainIdMeetEIP155Conditions","zeros","bytes","msg","right","setLengthRight","unpad","first","padToEven","intToBuffer","isBN","toArrayLike","toArray","toNumber","fromSigned","num","fromTwos","toUnsigned","toTwos","addHexPrefix","str","isHexPrefixed","ba","array","zeroAddress","addressLength","addr","isValidAddress","address","test","isZeroAddress","zeroAddr","toChecksumAddress","eip1191ChainId","parseInt","toUpperCase","isValidChecksumAddress","generateAddress","nonce","nonceBN","generateAddress2","salt","initCode","fromBuf","saltBuf","initCodeBuf","isPrecompiled","isValidPrivate","privateKeyVerify","isValidPublic","publicKey","sanitize","publicKeyVerify","pubToAddress","pubKey","privateToAddress","privateToPublic","publicKeyCreate","importPublic","MAX_INTEGER","TWO_POW256","KECCAK256_NULL_S","KECCAK256_NULL","KECCAK256_RLP_ARRAY_S","KECCAK256_RLP_ARRAY","KECCAK256_RLP_S","KECCAK256_RLP"],"mappings":"oJACAA,EAAOC,QAAU,EAAQ,OAAR,CAAqB,EAAQ,U,oCCA9CC,OAAOC,eAAeF,EAAS,aAAc,CAAEG,OAAO,IACtDH,EAAQI,OAAS,CACbC,MAAO,CACH,EAAK,UACL,EAAK,UACL,EAAK,UACL,GAAM,QACN,KAAQ,UAEZC,QAAS,EAAQ,QACjBC,QAAS,EAAQ,QACjBC,QAAS,EAAQ,QACjBC,MAAO,EAAQ,QACfC,OAAQ,EAAQ,U,81KCbpB,IAAIC,EAAaC,MAAQA,KAAKD,WAAc,WACxC,IAAIE,EAAgB,SAAUC,EAAGC,GAI7B,OAHAF,EAAgBZ,OAAOe,gBAClB,CAAEC,UAAW,cAAgBC,OAAS,SAAUJ,EAAGC,GAAKD,EAAEG,UAAYF,IACvE,SAAUD,EAAGC,GAAK,IAAK,IAAII,KAAKJ,EAAOA,EAAEK,eAAeD,KAAIL,EAAEK,GAAKJ,EAAEI,KAClEN,EAAcC,EAAGC,IAE5B,OAAO,SAAUD,EAAGC,GAEhB,SAASM,IAAOT,KAAKU,YAAcR,EADnCD,EAAcC,EAAGC,GAEjBD,EAAES,UAAkB,OAANR,EAAad,OAAOuB,OAAOT,IAAMM,EAAGE,UAAYR,EAAEQ,UAAW,IAAIF,IAV3C,GAa5CpB,OAAOC,eAAeF,EAAS,aAAc,CAAEG,OAAO,IACtD,IAAIsB,EAAoB,EAAQ,QAC5BC,EAAW,EAAQ,QACnBC,EAAgB,EAAQ,QAYxBC,EAAiC,SAAUC,GAE3C,SAASD,EAAgBE,EAAMC,QACd,IAATD,IAAmBA,EAAO,SACjB,IAATC,IAAmBA,EAAO,IAC9B,IAAIC,EAAQH,EAAOI,KAAKrB,KAAMkB,EAAMC,IAASnB,KAC7CX,OAAOC,eAAe8B,EAAO,OAAQ,CACjCE,YAAY,EACZC,cAAc,EACdC,IAAK,WAAc,OAAOJ,EAAMK,oBAChCC,IAAK,SAAUC,GACPA,IACAP,EAAMQ,MAAQf,EAAkBgB,SAASF,OAIrD,IAAIG,EAASZ,EAIb,OAHIY,EAAOC,OACPX,EAAMW,KAAOlB,EAAkBgB,SAASC,EAAOC,OAE5CX,EAiBX,OApCArB,EAAUiB,EAAiBC,GA2B3BD,EAAgBL,UAAUqB,KAAO,SAAUC,GAEvC,QADyB,IAArBA,IAA+BA,GAAmB,GAClDA,GAAoBjC,KAAK4B,OAAwC,KAA/B5B,KAAK4B,MAAMM,SAAS,OAAe,CAErE,IAAIC,EAAUrB,EAASsB,OAAOC,OAAO,CAACrC,KAAK4B,MAAO5B,KAAK4B,MAAMU,MAAM,EAAG,MACtEtC,KAAKuC,KAAKJ,GAEd,OAAOlB,EAAON,UAAUqB,KAAKX,KAAKrB,KAAMiC,IAErCjB,EArCyB,CAsClCD,EAAcyB,SAChBpD,EAAQoD,QAAUxB,G;;AClElB,IAAIyB,EAAS,EAAQ,QACjBL,EAASK,EAAOL,OAGpB,SAASM,EAAWC,EAAKC,GACvB,IAAK,IAAIC,KAAOF,EACdC,EAAIC,GAAOF,EAAIE,GAWnB,SAASC,EAAYC,EAAKC,EAAkBC,GAC1C,OAAOb,EAAOW,EAAKC,EAAkBC,GATnCb,EAAOL,MAAQK,EAAOc,OAASd,EAAOe,aAAef,EAAOgB,gBAC9DjE,EAAOC,QAAUqD,GAGjBC,EAAUD,EAAQrD,GAClBA,EAAQgD,OAASU,GAOnBA,EAAWnC,UAAYtB,OAAOuB,OAAOwB,EAAOzB,WAG5C+B,EAAUN,EAAQU,GAElBA,EAAWf,KAAO,SAAUgB,EAAKC,EAAkBC,GACjD,GAAmB,kBAARF,EACT,MAAM,IAAIM,UAAU,iCAEtB,OAAOjB,EAAOW,EAAKC,EAAkBC,IAGvCH,EAAWI,MAAQ,SAAUI,EAAMC,EAAMC,GACvC,GAAoB,kBAATF,EACT,MAAM,IAAID,UAAU,6BAEtB,IAAII,EAAMrB,EAAOkB,GAUjB,YATaI,IAATH,EACsB,kBAAbC,EACTC,EAAIF,KAAKA,EAAMC,GAEfC,EAAIF,KAAKA,GAGXE,EAAIF,KAAK,GAEJE,GAGTX,EAAWK,YAAc,SAAUG,GACjC,GAAoB,kBAATA,EACT,MAAM,IAAID,UAAU,6BAEtB,OAAOjB,EAAOkB,IAGhBR,EAAWM,gBAAkB,SAAUE,GACrC,GAAoB,kBAATA,EACT,MAAM,IAAID,UAAU,6BAEtB,OAAOZ,EAAOkB,WAAWL,K,qCC/D3B,YACAjE,OAAOC,eAAeF,EAAS,aAAc,CAAEG,OAAO,IACtD,IAAIqE,EAAS,EAAQ,QACjBC,EAAY,EAAQ,QACpBC,EAAM,EAAQ,QACdC,EAAU,EAAQ,QAYtB3E,EAAQ4E,iBAAmB,SAAUC,EAAMC,EAAQhD,GAyD/C,GAxDA+C,EAAKE,IAAM,GACXF,EAAKG,QAAU,GAEfH,EAAKI,OAAS,SAAUC,GAEpB,QADc,IAAVA,IAAoBA,GAAQ,GAC5BA,EAAO,CACP,IAAIC,EAAQ,GAIZ,OAHAN,EAAKG,QAAQI,SAAQ,SAAUC,GAC3BF,EAAME,GAAS,KAAOR,EAAKQ,GAAOvC,SAAS,UAExCqC,EAEX,OAAOR,EAAQW,SAAST,EAAKE,MAEjCF,EAAKU,UAAY,WACb,OAAOb,EAAIc,OAAOX,EAAKE,MAE3BD,EAAOM,SAAQ,SAAUC,EAAOI,GAE5B,SAASC,IACL,OAAOb,EAAKE,IAAIU,GAEpB,SAASE,EAAOC,GACZA,EAAIjB,EAAQlC,SAASmD,GACK,OAAtBA,EAAE9C,SAAS,QAAoBuC,EAAMQ,YACrCD,EAAI5C,EAAOe,YAAY,IAEvBsB,EAAMS,WAAaT,EAAMxB,QACzB+B,EAAIjB,EAAQoB,WAAWH,GACvBpB,EAAOa,EAAMxB,QAAU+B,EAAE/B,OAAQ,aAAewB,EAAMW,KAAO,uBAAyBX,EAAMxB,OAAS,WAE9FwB,EAAMQ,WAA0B,IAAbD,EAAE/B,SAAiBwB,EAAMxB,QACnDW,EAAOa,EAAMxB,SAAW+B,EAAE/B,OAAQ,aAAewB,EAAMW,KAAO,6BAA+BX,EAAMxB,QAEvGgB,EAAKE,IAAIU,GAAKG,EAhBlBf,EAAKG,QAAQiB,KAAKZ,EAAMW,MAkBxB/F,OAAOC,eAAe2E,EAAMQ,EAAMW,KAAM,CACpC9D,YAAY,EACZC,cAAc,EACdC,IAAKsD,EACLpD,IAAKqD,IAELN,EAAMjC,UACNyB,EAAKQ,EAAMW,MAAQX,EAAMjC,SAGzBiC,EAAMa,OACNjG,OAAOC,eAAe2E,EAAMQ,EAAMa,MAAO,CACrChE,YAAY,EACZC,cAAc,EACdG,IAAKqD,EACLvD,IAAKsD,OAKb5D,EAOA,GANoB,kBAATA,IACPA,EAAOkB,EAAOL,KAAK8B,EAAU0B,eAAerE,GAAO,QAEnDkB,EAAOoD,SAAStE,KAChBA,EAAO4C,EAAI2B,OAAOvE,IAElBZ,MAAMoF,QAAQxE,GAAO,CACrB,GAAIA,EAAK+B,OAASgB,EAAKG,QAAQnB,OAC3B,MAAM,IAAI0C,MAAM,kCAGpBzE,EAAKsD,SAAQ,SAAUtE,EAAG2E,GACtBZ,EAAKA,EAAKG,QAAQS,IAAMd,EAAQlC,SAAS3B,UAG5C,IAAoB,kBAATgB,EAUZ,MAAM,IAAIyE,MAAM,gBAThB,IAAIC,EAASvG,OAAOwG,KAAK3E,GACzBgD,EAAOM,SAAQ,SAAUC,IACe,IAAhCmB,EAAOE,QAAQrB,EAAMW,QACrBnB,EAAKQ,EAAMW,MAAQlE,EAAKuD,EAAMW,QACG,IAAjCQ,EAAOE,QAAQrB,EAAMa,SACrBrB,EAAKQ,EAAMa,OAASpE,EAAKuD,EAAMa,e,syFC/FnD,MAAMlD,EAAS,EAAQ,QAAeA,OAChC2D,EAAY,EAAQ,QAAUA,UAC9BC,EAAW,EAAQ,QAEzB7G,EAAOC,QAAU,SAAU6G,GACzB,SAASC,EAAQC,EAAMC,EAAUC,EAAiBC,EAAeC,GAC/DR,EAAU1E,KAAKrB,KAAMuG,GAErBvG,KAAKwG,MAAQL,EACbnG,KAAKyG,UAAYL,EACjBpG,KAAK0G,iBAAmBL,EACxBrG,KAAK2G,eAAiBL,EACtBtG,KAAK4G,SAAWL,EAEhBvG,KAAK6G,OAAS,IAAIZ,EAClBjG,KAAK6G,OAAOC,WAAWX,EAAMC,GAC7BpG,KAAK+G,YAAa,EAiEpB,OA9DAf,EAASE,EAAQH,GAEjBG,EAAOvF,UAAUqG,WAAa,SAAUC,EAAOzD,EAAU0D,GACvD,IAAIC,EAAQ,KACZ,IACEnH,KAAKoH,OAAOH,EAAOzD,GACnB,MAAO6D,GACPF,EAAQE,EAGVH,EAASC,IAGXjB,EAAOvF,UAAU2G,OAAS,SAAUJ,GAClC,IAAIC,EAAQ,KACZ,IACEnH,KAAKqF,KAAKrF,KAAKuH,UACf,MAAOF,GACPF,EAAQE,EAGVH,EAASC,IAGXjB,EAAOvF,UAAUyG,OAAS,SAAUlG,EAAMsC,GACxC,IAAKpB,EAAOoD,SAAStE,IAAyB,kBAATA,EAAmB,MAAM,IAAImC,UAAU,qCAC5E,GAAIrD,KAAK+G,WAAY,MAAM,IAAIpB,MAAM,yBAKrC,OAJKvD,EAAOoD,SAAStE,KAAOA,EAAOkB,EAAOL,KAAKb,EAAMsC,IAErDxD,KAAK6G,OAAOW,OAAOtG,GAEZlB,MAGTkG,EAAOvF,UAAU4G,OAAS,SAAU/D,GAClC,GAAIxD,KAAK+G,WAAY,MAAM,IAAIpB,MAAM,yBACrC3F,KAAK+G,YAAa,EAEd/G,KAAK0G,kBAAkB1G,KAAK6G,OAAOY,kBAAkBzH,KAAK0G,kBAC9D,IAAIa,EAASvH,KAAK6G,OAAOa,QAAQ1H,KAAK2G,eAAiB,GAKvD,YAJiBjD,IAAbF,IAAwB+D,EAASA,EAAOrF,SAASsB,IAErDxD,KAAK2H,cAEEJ,GAITrB,EAAOvF,UAAUgH,YAAc,WAE7B,OADA3H,KAAK6G,OAAOC,WAAW9G,KAAKwG,MAAOxG,KAAKyG,WACjCzG,MAITkG,EAAOvF,UAAUiH,OAAS,WACxB,MAAMC,EAAQ,IAAI3B,EAAOlG,KAAKwG,MAAOxG,KAAKyG,UAAWzG,KAAK0G,iBAAkB1G,KAAK2G,eAAgB3G,KAAK4G,UAItG,OAHA5G,KAAK6G,OAAOiB,KAAKD,EAAMhB,QACvBgB,EAAMd,WAAa/G,KAAK+G,WAEjBc,GAGF3B,I,qCClFT,YACA7G,OAAOC,eAAeF,EAAS,aAAc,CAAEG,OAAO,IACtD,IAAIwI,EAAY,EAAQ,QACpBC,EAAK,EAAQ,QACbjE,EAAU,EAAQ,QAClBkE,EAAS,EAAQ,QA8FrB,SAASC,EAAqBlD,EAAGmD,GAC7B,OAAOA,EAAUnD,GAAK,EAAImD,EAAU,IAAMnD,EAAI,GAElD,SAASoD,EAAmBC,GACxB,OAAoB,IAAbA,GAA+B,IAAbA,EA9F7BjJ,EAAQkJ,OAAS,SAAUC,EAASC,EAAYL,GAC5C,IAAIM,EAAMV,EAAUxF,KAAKgG,EAASC,GAC9BH,EAAWI,EAAIJ,SACfK,EAAM,CACNC,EAAGF,EAAIG,UAAUtG,MAAM,EAAG,IAC1BuG,EAAGJ,EAAIG,UAAUtG,MAAM,GAAI,IAC3B0C,EAAGmD,EAAUE,GAAsB,EAAVF,EAAc,IAAME,EAAW,IAE5D,OAAOK,GAMXtJ,EAAQ0J,UAAY,SAAUP,EAASvD,EAAG2D,EAAGE,EAAGV,GAC5C,IAAIS,EAAYxG,EAAOC,OAAO,CAAC0B,EAAQgF,UAAUJ,EAAG,IAAK5E,EAAQgF,UAAUF,EAAG,KAAM,IAChFR,EAAWH,EAAqBlD,EAAGmD,GACvC,IAAKC,EAAmBC,GACpB,MAAM,IAAI1C,MAAM,6BAEpB,IAAIqD,EAAejB,EAAUkB,QAAQV,EAASK,EAAWP,GACzD,OAAON,EAAUmB,iBAAiBF,GAAc,GAAO1G,MAAM,IAMjElD,EAAQ+J,SAAW,SAAUnE,EAAG2D,EAAGE,EAAGV,GAClC,IAAIE,EAAWH,EAAqBlD,EAAGmD,GACvC,IAAKC,EAAmBC,GACpB,MAAM,IAAI1C,MAAM,6BAGpB,OAAO5B,EAAQqF,YAAYhH,EAAOC,OAAO,CAAC0B,EAAQsF,cAAcV,EAAG,IAAK5E,EAAQsF,cAAcR,EAAG,IAAK9E,EAAQlC,SAASmD,OAM3H5F,EAAQkK,WAAa,SAAUb,GAC3B,IAAIhF,EAAMM,EAAQlC,SAAS4G,GAE3B,GAAmB,KAAfhF,EAAIR,OACJ,MAAM,IAAI0C,MAAM,4BAEpB,IAAIX,EAAIvB,EAAI,IAKZ,OAHIuB,EAAI,KACJA,GAAK,IAEF,CACHA,EAAGA,EACH2D,EAAGlF,EAAInB,MAAM,EAAG,IAChBuG,EAAGpF,EAAInB,MAAM,GAAI,MAOzBlD,EAAQmK,iBAAmB,SAAUvE,EAAG2D,EAAGE,EAAGW,EAAkBrB,QACnC,IAArBqB,IAA+BA,GAAmB,GACtD,IAAIC,EAAoB,IAAIzB,EAAG,mEAAoE,IAC/F0B,EAAc,IAAI1B,EAAG,mEAAoE,IAC7F,GAAiB,KAAbW,EAAE1F,QAA8B,KAAb4F,EAAE5F,OACrB,OAAO,EAEX,IAAKmF,EAAmBF,EAAqBlD,EAAGmD,IAC5C,OAAO,EAEX,IAAIwB,EAAM,IAAI3B,EAAGW,GACbiB,EAAM,IAAI5B,EAAGa,GACjB,QAAIc,EAAIE,UAAYF,EAAIG,GAAGJ,IAAgBE,EAAIC,UAAYD,EAAIE,GAAGJ,OAG9DF,GAAmD,IAA/BI,EAAIG,IAAIN,KAWpCrK,EAAQ4K,oBAAsB,SAAUC,GACpC,IAAIC,EAAS9H,EAAOL,KAAK,8BAAqCkI,EAAQhH,OAAOf,WAAY,SACzF,OAAO+F,EAAOkC,OAAO/H,EAAOC,OAAO,CAAC6H,EAAQD,Q,+DChGhD,SAASG,EAASC,GACd,IAAK,IAAI9J,KAAK8J,EAAQjL,EAAQoB,eAAeD,KAAInB,EAAQmB,GAAK8J,EAAE9J,IAEpElB,OAAOC,eAAeF,EAAS,aAAc,CAAEG,OAAO,IACtD,IAAIwI,EAAY,EAAQ,QACxB3I,EAAQ2I,UAAYA,EACpB,IAAIlE,EAAY,EAAQ,QACpBmE,EAAK,EAAQ,QACjB5I,EAAQ4I,GAAKA,EACb,IAAIlE,EAAM,EAAQ,QAClB1E,EAAQ0E,IAAMA,EACdzE,OAAOiL,OAAOlL,EAASyE,GAIvBuG,EAAS,EAAQ,SAIjBA,EAAS,EAAQ,SAIjBA,EAAS,EAAQ,SAIjBA,EAAS,EAAQ,SAIjBA,EAAS,EAAQ,SAIjBA,EAAS,EAAQ,U,oCCnCjB/K,OAAOC,eAAeF,EAAS,aAAc,CAAEG,OAAO,IACtDH,EAAQmL,UAAY,CAChB,CAAC,aAAc,EAAQ,SACvB,CAAC,YAAa,EAAQ,SACtB,CAAC,MAAO,EAAQ,SAChB,CAAC,mBAAoB,EAAQ,SAC7B,CAAC,iBAAkB,EAAQ,SAC3B,CAAC,YAAa,EAAQ,SACtB,CAAC,iBAAkB,EAAQ,SAC3B,CAAC,aAAc,EAAQ,SACvB,CAAC,WAAY,EAAQ,SACrB,CAAC,cAAe,EAAQ,W,oCCX5B,MAAMnI,EAAS,EAAQ,QAAeA,OAChC2D,EAAY,EAAQ,QAAUA,UAC9BC,EAAW,EAAQ,QAEzB7G,EAAOC,QAAU,SAAU6G,GACzB,SAASuE,EAAOrE,EAAMC,EAAUC,EAAiBE,GAC/CR,EAAU1E,KAAKrB,KAAMuG,GAErBvG,KAAKwG,MAAQL,EACbnG,KAAKyG,UAAYL,EACjBpG,KAAK0G,iBAAmBL,EACxBrG,KAAK4G,SAAWL,EAEhBvG,KAAK6G,OAAS,IAAIZ,EAClBjG,KAAK6G,OAAOC,WAAWX,EAAMC,GAC7BpG,KAAK+G,YAAa,EAyDpB,OAtDAf,EAASwE,EAAOzE,GAEhByE,EAAM7J,UAAUqG,WAAa,SAAUC,EAAOzD,EAAU0D,GACtD,IAAIC,EAAQ,KACZ,IACEnH,KAAKoH,OAAOH,EAAOzD,GACnB,MAAO6D,GACPF,EAAQE,EAGVH,EAASC,IAGXqD,EAAM7J,UAAU2G,OAAS,aAEzBkD,EAAM7J,UAAU8J,MAAQ,SAAUnH,GAChCtD,KAAKqF,KAAKrF,KAAK0H,QAAQpE,KAGzBkH,EAAM7J,UAAUyG,OAAS,SAAUlG,EAAMsC,GACvC,IAAKpB,EAAOoD,SAAStE,IAAyB,kBAATA,EAAmB,MAAM,IAAImC,UAAU,qCAC5E,GAAIrD,KAAK+G,WAAY,MAAM,IAAIpB,MAAM,0BAKrC,OAJKvD,EAAOoD,SAAStE,KAAOA,EAAOkB,EAAOL,KAAKb,EAAMsC,IAErDxD,KAAK6G,OAAOW,OAAOtG,GAEZlB,MAGTwK,EAAM7J,UAAU+G,QAAU,SAAUgD,EAAgBlH,GAC7CxD,KAAK+G,aACR/G,KAAK+G,YAAa,EAClB/G,KAAK6G,OAAOY,kBAAkBzH,KAAK0G,mBAGrC,IAAIxF,EAAOlB,KAAK6G,OAAOa,QAAQgD,GAG/B,YAFiBhH,IAAbF,IAAwBtC,EAAOA,EAAKgB,SAASsB,IAE1CtC,GAGTsJ,EAAM7J,UAAUgH,YAAc,WAE5B,OADA3H,KAAK6G,OAAOC,WAAW9G,KAAKwG,MAAOxG,KAAKyG,WACjCzG,MAGTwK,EAAM7J,UAAUiH,OAAS,WACvB,MAAMC,EAAQ,IAAI2C,EAAMxK,KAAKwG,MAAOxG,KAAKyG,UAAWzG,KAAK0G,iBAAkB1G,KAAK4G,UAIhF,OAHA5G,KAAK6G,OAAOiB,KAAKD,EAAMhB,QACvBgB,EAAMd,WAAa/G,KAAK+G,WAEjBc,GAGF2C,I,ogBCxETnL,OAAOC,eAAeF,EAAS,aAAc,CAAEG,OAAO,IACtD,IAAIwB,EAAgB,EAAQ,QAC5B3B,EAAQuL,YAAc5J,EAAcyB,QACpC,IAAIoI,EAAS,EAAQ,QACrBxL,EAAQ4B,gBAAkB4J,EAAOpI,S,0pGCLjC,YACAnD,OAAOC,eAAeF,EAAS,aAAc,CAAEG,OAAO,IACtD,IAAIsL,EAAmB,EAAQ,QAC3BC,EAAa,EAAQ,QACrBjH,EAAY,EAAQ,QACpBC,EAAM,EAAQ,QACdC,EAAU,EAAQ,QAOtB3E,EAAQ+K,OAAS,SAAUY,EAAGC,GAU1B,YATa,IAATA,IAAmBA,EAAO,KAK1BD,EAJa,kBAANA,GAAmBlH,EAAUoH,YAAYF,GAI5ChH,EAAQlC,SAASkJ,GAHjB3I,EAAOL,KAAKgJ,EAAG,QAKlBC,IACDA,EAAO,KACJH,EAAiB,SAAWG,GAC9B5D,OAAO2D,GACPxD,UAMTnI,EAAQ8L,UAAY,SAAUH,GAC1B,OAAO3L,EAAQ+K,OAAOY,IAM1B3L,EAAQ+L,OAAS,SAAUJ,GAEvB,OADAA,EAAIhH,EAAQlC,SAASkJ,GACdD,EAAW,UACb1D,OAAO2D,GACPxD,UAOTnI,EAAQgM,UAAY,SAAUL,EAAGM,GAC7BN,EAAIhH,EAAQlC,SAASkJ,GACrB,IAAI/I,EAAO8I,EAAW,UACjB1D,OAAO2D,GACPxD,SACL,OAAe,IAAX8D,EACOtH,EAAQgF,UAAU/G,EAAM,IAGxBA,GAOf5C,EAAQkM,QAAU,SAAUP,GACxB,OAAO3L,EAAQ+K,OAAOrG,EAAIc,OAAOmG,O,+DCjErC,MAAM3I,EAAS,EAAQ,QAAeA,OAChCmJ,EAAc,EAAQ,QAE5B,SAASrF,IAEPlG,KAAKwL,MAAQ,CACX,EAAG,EAAG,EAAG,EAAG,EACZ,EAAG,EAAG,EAAG,EAAG,EACZ,EAAG,EAAG,EAAG,EAAG,EACZ,EAAG,EAAG,EAAG,EAAG,EACZ,EAAG,EAAG,EAAG,EAAG,GAGdxL,KAAKyL,UAAY,KACjBzL,KAAK0L,MAAQ,EACb1L,KAAK2L,WAAY,EAGnBzF,EAAOvF,UAAUmG,WAAa,SAAUX,EAAMC,GAC5C,IAAK,IAAIvB,EAAI,EAAGA,EAAI,KAAMA,EAAG7E,KAAKwL,MAAM3G,GAAK,EAC7C7E,KAAKyL,UAAYtF,EAAO,EACxBnG,KAAK0L,MAAQ,EACb1L,KAAK2L,WAAY,GAGnBzF,EAAOvF,UAAU6G,OAAS,SAAUtG,GAClC,IAAK,IAAI2D,EAAI,EAAGA,EAAI3D,EAAK+B,SAAU4B,EACjC7E,KAAKwL,SAASxL,KAAK0L,MAAQ,KAAOxK,EAAK2D,IAAY7E,KAAK0L,MAAQ,EAAlB,EAC9C1L,KAAK0L,OAAS,EACV1L,KAAK0L,QAAU1L,KAAKyL,YACtBF,EAAYK,MAAM5L,KAAKwL,OACvBxL,KAAK0L,MAAQ,IAKnBxF,EAAOvF,UAAU8G,kBAAoB,SAAUuD,GAC7ChL,KAAKwL,SAASxL,KAAK0L,MAAQ,KAAOV,GAAchL,KAAK0L,MAAQ,EAAlB,EACrB,KAAV,IAAPV,IAAsBhL,KAAK0L,QAAW1L,KAAKyL,UAAY,GAAIF,EAAYK,MAAM5L,KAAKwL,OACvFxL,KAAKwL,UAAUxL,KAAKyL,UAAY,GAAK,KAAO,MAAezL,KAAKyL,UAAY,GAAK,EAA5B,EACrDF,EAAYK,MAAM5L,KAAKwL,OACvBxL,KAAK0L,MAAQ,EACb1L,KAAK2L,WAAY,GAGnBzF,EAAOvF,UAAU+G,QAAU,SAAUzE,GAC9BjD,KAAK2L,WAAW3L,KAAKyH,kBAAkB,GAE5C,MAAMoE,EAASzJ,EAAOc,MAAMD,GAC5B,IAAK,IAAI4B,EAAI,EAAGA,EAAI5B,IAAU4B,EAC5BgH,EAAOhH,GAAM7E,KAAKwL,SAASxL,KAAK0L,MAAQ,MAAc1L,KAAK0L,MAAQ,EAAlB,EAAyB,IAC1E1L,KAAK0L,OAAS,EACV1L,KAAK0L,QAAU1L,KAAKyL,YACtBF,EAAYK,MAAM5L,KAAKwL,OACvBxL,KAAK0L,MAAQ,GAIjB,OAAOG,GAGT3F,EAAOvF,UAAUmH,KAAO,SAAUgE,GAChC,IAAK,IAAIjH,EAAI,EAAGA,EAAI,KAAMA,EAAGiH,EAAKN,MAAM3G,GAAK7E,KAAKwL,MAAM3G,GACxDiH,EAAKL,UAAYzL,KAAKyL,UACtBK,EAAKJ,MAAQ1L,KAAK0L,MAClBI,EAAKH,UAAY3L,KAAK2L,WAGxBxM,EAAOC,QAAU8G,G,kCCpEjB,IAAI6F,EAAY/L,MAAQA,KAAK+L,UAAa,WAStC,OARAA,EAAW1M,OAAOiL,QAAU,SAAS0B,GACjC,IAAK,IAAInD,EAAGhE,EAAI,EAAGoH,EAAIC,UAAUjJ,OAAQ4B,EAAIoH,EAAGpH,IAE5C,IAAK,IAAItE,KADTsI,EAAIqD,UAAUrH,GACAgE,EAAOxJ,OAAOsB,UAAUH,eAAea,KAAKwH,EAAGtI,KACzDyL,EAAEzL,GAAKsI,EAAEtI,IAEjB,OAAOyL,GAEJD,EAASI,MAAMnM,KAAMkM,YAEhC7M,OAAOC,eAAeF,EAAS,aAAc,CAAEG,OAAO,IACtD,IAAI6M,EAAW,EAAQ,QACnBC,EAAc,EAAQ,QAItBC,EAAwB,WAOxB,SAASA,EAAOC,EAAOC,EAAUC,GAC7BzM,KAAK0M,aAAe1M,KAAK2M,SAASJ,GAClCvM,KAAK4M,UAAY,KACjB5M,KAAK6M,yBAA6CnJ,IAAvB+I,EAAmC,GAAKA,EAC/DD,GACAxM,KAAK8M,YAAYN,GAoXzB,OAvWAF,EAAOS,eAAiB,SAAUC,EAAWC,EAAmBT,EAAUC,GACtE,IAAIS,EAAsBZ,EAAOa,gBAAgBH,GACjD,OAAO,IAAIV,EAAOP,EAASA,EAAS,GAAImB,GAAsBD,GAAoBT,EAAUC,IAEhGH,EAAOa,gBAAkB,SAAUZ,GAC/B,GAAqB,kBAAVA,EAAoB,CAC3B,GAAIH,EAAS5M,OAAO,SAAS+M,GACzB,OAAOH,EAAS5M,OAAO4M,EAAS5M,OAAO,SAAS+M,IAEpD,MAAM,IAAI5G,MAAM,iBAAmB4G,EAAQ,kBAE/C,GAAIH,EAAS5M,OAAO+M,GAChB,OAAOH,EAAS5M,OAAO+M,GAE3B,MAAM,IAAI5G,MAAM,mBAAqB4G,EAAQ,mBAQjDD,EAAO3L,UAAUgM,SAAW,SAAUJ,GAClC,GAAqB,kBAAVA,GAAuC,kBAAVA,EACpCvM,KAAK0M,aAAeJ,EAAOa,gBAAgBZ,OAE1C,IAAqB,kBAAVA,EAWZ,MAAM,IAAI5G,MAAM,sBAThB,IADA,IAAIyH,EAAW,CAAC,YAAa,UAAW,YAAa,kBAC5CC,EAAK,EAAGC,EAAaF,EAAUC,EAAKC,EAAWrK,OAAQoK,IAAM,CAClE,IAAIE,EAAQD,EAAWD,GACvB,QAAqB3J,IAAjB6I,EAAMgB,GACN,MAAM,IAAI5H,MAAM,qCAAuC4H,GAG/DvN,KAAK0M,aAAeH,EAKxB,OAAOvM,KAAK0M,cAMhBJ,EAAO3L,UAAUmM,YAAc,SAAUN,GACrC,IAAKxM,KAAKwN,qBAAqBhB,GAC3B,MAAM,IAAI7G,MAAM,YAAc6G,EAAW,+CAG7C,IADA,IAAIiB,GAAU,EACLJ,EAAK,EAAGK,EAAoBrB,EAAY9B,UAAW8C,EAAKK,EAAkBzK,OAAQoK,IAAM,CAC7F,IAAIM,EAAYD,EAAkBL,GAC9BM,EAAU,KAAOnB,IACjBxM,KAAK4M,UAAYJ,EACjBiB,GAAU,GAGlB,IAAKA,EACD,MAAM,IAAI9H,MAAM,sBAAwB6G,EAAW,mBAQ3DF,EAAO3L,UAAUiN,gBAAkB,SAAUpB,EAAUqB,GAEnD,GADAA,OAAkCnK,IAAlBmK,GAAqCA,EAChDrB,GAQA,GAAIqB,IAAkB7N,KAAKwN,qBAAqBhB,GACjD,MAAM,IAAI7G,MAAM,YAAc6G,EAAW,mDAT9B,CACX,IAAKxM,KAAK4M,UACN,MAAM,IAAIjH,MAAM,mEAGhB6G,EAAWxM,KAAK4M,UAMxB,OAAOJ,GAOXF,EAAO3L,UAAUmN,aAAe,SAAUtB,GAEtC,IADA,IAAIuB,EAAM/N,KAAKuK,YACN8C,EAAK,EAAGW,EAAQD,EAAKV,EAAKW,EAAM/K,OAAQoK,IAAM,CACnD,IAAIY,EAAKD,EAAMX,GACf,GAAIY,EAAG,UAAYzB,EACf,OAAOyB,EAEf,MAAM,IAAItI,MAAM,YAAc6G,EAAW,0BAA4BxM,KAAKkO,cAO9E5B,EAAO3L,UAAU6M,qBAAuB,SAAUhB,GAC9C,KAAIxM,KAAK6M,oBAAoB5J,OAAS,GAQlC,OAAO,EAPP,IAAK,IAAIoK,EAAK,EAAGc,EAAKnO,KAAK6M,oBAAqBQ,EAAKc,EAAGlL,OAAQoK,IAAM,CAClE,IAAIe,EAAcD,EAAGd,GACrB,GAAIb,IAAa4B,EACb,OAAO,EAMnB,OAAO,GAQX9B,EAAO3L,UAAU4M,MAAQ,SAAUc,EAAOjJ,EAAMoH,GAE5C,IAAIjN,EADJiN,EAAWxM,KAAK4N,gBAAgBpB,GAEhC,IAAK,IAAIa,EAAK,EAAGiB,EAAoBjC,EAAY9B,UAAW8C,EAAKiB,EAAkBrL,OAAQoK,IAAM,CAC7F,IAAIM,EAAYW,EAAkBjB,GAClC,IAAKM,EAAU,GAAGU,GACd,MAAM,IAAI1I,MAAM,SAAW0I,EAAQ,gBAKvC,QAHkC3K,IAA9BiK,EAAU,GAAGU,GAAOjJ,KACpB7F,EAAQoO,EAAU,GAAGU,GAAOjJ,GAAMJ,GAElC2I,EAAU,KAAOnB,EACjB,MAER,QAAc9I,IAAVnE,EACA,MAAM,IAAIoG,MAAM0I,EAAQ,cAAgBjJ,EAAO,cAEnD,OAAO7F,GAQX+M,EAAO3L,UAAU4N,aAAe,SAAUF,EAAOjJ,EAAMoJ,GACnD,IAAIC,EAAYzO,KAAK0O,gBAAgBF,GACjChC,EAAWiC,EAAUA,EAAUxL,OAAS,GAAG,QAC/C,OAAOjD,KAAKuN,MAAMc,EAAOjJ,EAAMoH,IASnCF,EAAO3L,UAAUgO,wBAA0B,SAAUnC,EAAUgC,EAAarN,GACxEA,OAAgBuC,IAATvC,EAAqBA,EAAO,GACnC,IAAI0M,OAAuCnK,IAAvBvC,EAAK0M,eAAsC1M,EAAK0M,cACpErB,EAAWxM,KAAK4N,gBAAgBpB,EAAUqB,GAC1C,IAAIe,EAAU5O,KAAK6O,cAAcrC,GACjC,OAAgB,OAAZoC,GAAoBJ,GAAeI,GAU3CtC,EAAO3L,UAAUmO,cAAgB,SAAUN,EAAarN,GACpD,OAAOnB,KAAK2O,wBAAwB,KAAMH,EAAarN,IAS3DmL,EAAO3L,UAAUoO,oBAAsB,SAAUC,EAAWC,EAAW9N,GACnEA,OAAgBuC,IAATvC,EAAqBA,EAAO,GACnC,IAEIoJ,EAFA2E,OAAiCxL,IAApBvC,EAAK+N,YAAmC/N,EAAK+N,WAC9DF,EAAYhP,KAAK4N,gBAAgBoB,EAAW7N,EAAK0M,eAG7CtD,EADA2E,EACYlP,KAAK0O,gBAAgB,KAAMvN,GAG3BnB,KAAKuK,YAIrB,IAFA,IAAI4E,GAAU,EAAGC,GAAU,EACvBC,EAAQ,EACHhC,EAAK,EAAGiC,EAAc/E,EAAW8C,EAAKiC,EAAYrM,OAAQoK,IAAM,CACrE,IAAIY,EAAKqB,EAAYjC,GACjBY,EAAG,UAAYe,IACfG,EAASE,GACTpB,EAAG,UAAYgB,IACfG,EAASC,GACbA,GAAS,EAEb,OAAOF,GAAUC,GAQrB9C,EAAO3L,UAAU4O,YAAc,SAAU/C,EAAUrL,GAC/C,OAAOnB,KAAK+O,oBAAoB,KAAMvC,EAAUrL,IAQpDmL,EAAO3L,UAAU6O,wBAA0B,SAAUhD,EAAUrL,GAC3DA,OAAgBuC,IAATvC,EAAqBA,EAAO,GACnC,IAAI0M,OAAuCnK,IAAvBvC,EAAK0M,eAAsC1M,EAAK0M,cACpErB,EAAWxM,KAAK4N,gBAAgBpB,EAAUqB,GAC1C,IAAK,IAAIR,EAAK,EAAGc,EAAKnO,KAAKuK,YAAa8C,EAAKc,EAAGlL,OAAQoK,IAAM,CAC1D,IAAIY,EAAKE,EAAGd,GACZ,GAAIY,EAAG,UAAYzB,GAA4B,OAAhByB,EAAG,SAC9B,OAAO,EAEf,OAAO,GAQX3B,EAAO3L,UAAU+N,gBAAkB,SAAUF,EAAarN,GACtDA,OAAgBuC,IAATvC,EAAqBA,EAAO,GAGnC,IAFA,IAAIuN,EAAkB,GAClBX,EAAM/N,KAAKuK,YACN8C,EAAK,EAAGoC,EAAQ1B,EAAKV,EAAKoC,EAAMxM,OAAQoK,IAAM,CACnD,IAAIY,EAAKwB,EAAMpC,GACf,GAAoB,OAAhBY,EAAG,SAAP,CAEA,QAAoBvK,IAAhB8K,GAA6C,OAAhBA,GAAwBA,EAAcP,EAAG,SACtE,MACA9M,EAAK0M,gBAAkB7N,KAAKwN,qBAAqBS,EAAG,UAExDS,EAAgBrJ,KAAK4I,IAEzB,OAAOS,GAQXpC,EAAO3L,UAAU+O,eAAiB,SAAUlB,EAAarN,GACrDA,OAAgBuC,IAATvC,EAAqBA,EAAO,GACnC,IAAIuN,EAAkB1O,KAAK0O,gBAAgBF,EAAarN,GACxD,GAAIuN,EAAgBzL,OAAS,EACzB,OAAOyL,EAAgBA,EAAgBzL,OAAS,GAAG,QAGnD,MAAM,IAAI0C,MAAM,yCAQxB2G,EAAO3L,UAAUkO,cAAgB,SAAUrC,GAEvC,OADAA,EAAWxM,KAAK4N,gBAAgBpB,GAAU,GACnCxM,KAAK8N,aAAatB,GAAU,UAQvCF,EAAO3L,UAAUgP,gBAAkB,SAAUnB,EAAahC,GAEtD,OADAA,EAAWxM,KAAK4N,gBAAgBpB,GAAU,GACtCxM,KAAK6O,cAAcrC,KAAcgC,GAYzClC,EAAO3L,UAAUiP,UAAY,SAAUpD,GAEnC,OADAA,EAAWxM,KAAK4N,gBAAgBpB,GACzBxM,KAAK8N,aAAatB,GAAU,cAOvCF,EAAO3L,UAAUkP,SAAW,SAAUrD,GAElC,OADAA,EAAWxM,KAAK4N,gBAAgBpB,GACzBxM,KAAK8N,aAAatB,GAAU,aAMvCF,EAAO3L,UAAUmP,QAAU,WACvB,OAAO9P,KAAK0M,aAAa,YAM7BJ,EAAO3L,UAAU4J,UAAY,WACzB,OAAOvK,KAAK0M,aAAa,cAM7BJ,EAAO3L,UAAUoP,eAAiB,WAC9B,OAAO/P,KAAK0M,aAAa,mBAM7BJ,EAAO3L,UAAU6L,SAAW,WACxB,OAAOxM,KAAK4M,WAMhBN,EAAO3L,UAAUwH,QAAU,WACvB,OAAOnI,KAAK0M,aAAa,YAM7BJ,EAAO3L,UAAUuN,UAAY,WACzB,OAAO9B,EAAS5M,OAAO,SAASQ,KAAKmI,YAAcnI,KAAK0M,aAAa,SAMzEJ,EAAO3L,UAAUqP,UAAY,WACzB,OAAOhQ,KAAK0M,aAAa,cAEtBJ,EAhYgB,GAkY3BlN,EAAQoD,QAAU8J,G,uqDCnZlB,MAAM2D,EAAe,EAAQ,QACvBC,EAAc,EAAQ,QAE5B/Q,EAAOC,QAAU,SAAU6G,GACzB,MAAMC,EAAS+J,EAAahK,GACtBuE,EAAQ0F,EAAYjK,GAE1B,OAAO,SAAUkK,EAAW5J,GAC1B,MAAMvE,EAA4B,kBAAdmO,EAAyBA,EAAUC,cAAgBD,EACvE,OAAQnO,GACN,IAAK,YAAa,OAAO,IAAIkE,EAAO,KAAM,IAAK,KAAM,IAAKK,GAC1D,IAAK,YAAa,OAAO,IAAIL,EAAO,KAAM,IAAK,KAAM,IAAKK,GAC1D,IAAK,YAAa,OAAO,IAAIL,EAAO,IAAK,IAAK,KAAM,IAAKK,GACzD,IAAK,YAAa,OAAO,IAAIL,EAAO,IAAK,KAAM,KAAM,IAAKK,GAE1D,IAAK,WAAY,OAAO,IAAIL,EAAO,KAAM,IAAK,EAAM,IAAKK,GACzD,IAAK,WAAY,OAAO,IAAIL,EAAO,KAAM,IAAK,EAAM,IAAKK,GACzD,IAAK,WAAY,OAAO,IAAIL,EAAO,IAAK,IAAK,EAAM,IAAKK,GACxD,IAAK,WAAY,OAAO,IAAIL,EAAO,IAAK,KAAM,EAAM,IAAKK,GAEzD,IAAK,WAAY,OAAO,IAAIiE,EAAM,KAAM,IAAK,GAAMjE,GACnD,IAAK,WAAY,OAAO,IAAIiE,EAAM,KAAM,IAAK,GAAMjE,GAEnD,QAAS,MAAM,IAAIZ,MAAM,qBAAuBwK,O,kCCvBtD,MAAME,EAAwB,CAAC,EAAG,EAAG,MAAO,EAAG,MAAO,WAAY,WAAY,WAAY,MAAO,EAAG,WAAY,EAAG,WAAY,WAAY,MAAO,WAAY,IAAK,EAAG,IAAK,EAAG,WAAY,EAAG,WAAY,EAAG,WAAY,EAAG,IAAK,WAAY,MAAO,WAAY,MAAO,WAAY,MAAO,WAAY,IAAK,WAAY,MAAO,EAAG,WAAY,WAAY,WAAY,WAAY,MAAO,WAAY,WAAY,EAAG,WAAY,YAE9ZjR,EAAQwM,MAAQ,SAAU/C,GACxB,IAAK,IAAIyH,EAAQ,EAAGA,EAAQ,KAAMA,EAAO,CAEvC,MAAMC,EAAM1H,EAAE,GAAKA,EAAE,IAAMA,EAAE,IAAMA,EAAE,IAAMA,EAAE,IACvC2H,EAAM3H,EAAE,GAAKA,EAAE,IAAMA,EAAE,IAAMA,EAAE,IAAMA,EAAE,IACvC4H,EAAM5H,EAAE,GAAKA,EAAE,IAAMA,EAAE,IAAMA,EAAE,IAAMA,EAAE,IACvC6H,EAAM7H,EAAE,GAAKA,EAAE,IAAMA,EAAE,IAAMA,EAAE,IAAMA,EAAE,IACvC8H,EAAM9H,EAAE,GAAKA,EAAE,IAAMA,EAAE,IAAMA,EAAE,IAAMA,EAAE,IACvC+H,EAAM/H,EAAE,GAAKA,EAAE,IAAMA,EAAE,IAAMA,EAAE,IAAMA,EAAE,IACvCgI,EAAMhI,EAAE,GAAKA,EAAE,IAAMA,EAAE,IAAMA,EAAE,IAAMA,EAAE,IACvCiI,EAAMjI,EAAE,GAAKA,EAAE,IAAMA,EAAE,IAAMA,EAAE,IAAMA,EAAE,IACvCkI,EAAMlI,EAAE,GAAKA,EAAE,IAAMA,EAAE,IAAMA,EAAE,IAAMA,EAAE,IACvCmI,EAAMnI,EAAE,GAAKA,EAAE,IAAMA,EAAE,IAAMA,EAAE,IAAMA,EAAE,IAE7C,IAAIoI,EAAKF,GAAON,GAAO,EAAIC,IAAQ,IAC/BQ,EAAKF,GAAON,GAAO,EAAID,IAAQ,IACnC,MAAMU,EAAStI,EAAE,GAAKoI,EAChBG,EAASvI,EAAE,GAAKqI,EAChBG,EAASxI,EAAE,IAAMoI,EACjBK,EAASzI,EAAE,IAAMqI,EACjBK,EAAU1I,EAAE,IAAMoI,EAClBO,EAAU3I,EAAE,IAAMqI,EAClBO,EAAU5I,EAAE,IAAMoI,EAClBS,EAAU7I,EAAE,IAAMqI,EAClBS,EAAU9I,EAAE,IAAMoI,EAClBW,EAAU/I,EAAE,IAAMqI,EACxBD,EAAKV,GAAOI,GAAO,EAAIC,IAAQ,IAC/BM,EAAKV,GAAOI,GAAO,EAAID,IAAQ,IAC/B,MAAMkB,EAAShJ,EAAE,GAAKoI,EAChBa,EAASjJ,EAAE,GAAKqI,EAChBa,EAASlJ,EAAE,IAAMoI,EACjBe,EAASnJ,EAAE,IAAMqI,EACjBe,EAAUpJ,EAAE,IAAMoI,EAClBiB,EAAUrJ,EAAE,IAAMqI,EAClBiB,EAAUtJ,EAAE,IAAMoI,EAClBmB,EAAUvJ,EAAE,IAAMqI,EAClBmB,EAAUxJ,EAAE,IAAMoI,EAClBqB,EAAUzJ,EAAE,IAAMqI,EACxBD,EAAKR,GAAOI,GAAO,EAAIC,IAAQ,IAC/BI,EAAKR,GAAOI,GAAO,EAAID,IAAQ,IAC/B,MAAM0B,EAAS1J,EAAE,GAAKoI,EAChBuB,EAAS3J,EAAE,GAAKqI,EAChBuB,EAAS5J,EAAE,IAAMoI,EACjByB,EAAS7J,EAAE,IAAMqI,EACjByB,EAAU9J,EAAE,IAAMoI,EAClB2B,EAAU/J,EAAE,IAAMqI,EAClB2B,EAAUhK,EAAE,IAAMoI,EAClB6B,EAAUjK,EAAE,IAAMqI,EAClB6B,EAAUlK,EAAE,IAAMoI,EAClB+B,EAAUnK,EAAE,IAAMqI,EACxBD,EAAKN,GAAOI,GAAO,EAAIC,IAAQ,IAC/BE,EAAKN,GAAOI,GAAO,EAAID,IAAQ,IAC/B,MAAMkC,EAASpK,EAAE,GAAKoI,EAChBiC,EAASrK,EAAE,GAAKqI,EAChBiC,EAAStK,EAAE,IAAMoI,EACjBmC,EAASvK,EAAE,IAAMqI,EACjBmC,EAAUxK,EAAE,IAAMoI,EAClBqC,EAAUzK,EAAE,IAAMqI,EAClBqC,EAAU1K,EAAE,IAAMoI,EAClBuC,EAAU3K,EAAE,IAAMqI,EAClBuC,EAAU5K,EAAE,IAAMoI,EAClByC,GAAU7K,EAAE,IAAMqI,EACxBD,EAAKJ,GAAON,GAAO,EAAIC,IAAQ,IAC/BU,EAAKJ,GAAON,GAAO,EAAID,IAAQ,IAC/B,MAAMoD,GAAS9K,EAAE,GAAKoI,EAChB2C,GAAS/K,EAAE,GAAKqI,EAChB2C,GAAShL,EAAE,IAAMoI,EACjB6C,GAASjL,EAAE,IAAMqI,EACjB6C,GAAUlL,EAAE,IAAMoI,EAClB+C,GAAUnL,EAAE,IAAMqI,EAClB+C,GAAUpL,EAAE,IAAMoI,EAClBiD,GAAUrL,EAAE,IAAMqI,EAClBiD,GAAUtL,EAAE,IAAMoI,EAClBmD,GAAUvL,EAAE,IAAMqI,EAGlBmD,GAASlD,EACTmD,GAASlD,EACTmD,GAAWjD,GAAU,EAAID,IAAW,GACpCmD,GAAWnD,GAAU,EAAIC,IAAW,GACpCmD,GAAUlD,GAAW,EAAIC,IAAY,GACrCkD,GAAUlD,GAAW,EAAID,IAAY,GACrCoD,GAAWjD,GAAW,EAAID,IAAY,GACtCmD,GAAWnD,GAAW,EAAIC,IAAY,GACtCmD,GAAWlD,GAAW,GAAKC,IAAY,GACvCkD,GAAWlD,GAAW,GAAKD,IAAY,GACvCoD,GAAWlD,GAAU,EAAIC,IAAW,GACpCkD,GAAWlD,GAAU,EAAID,IAAW,GACpCoD,GAAUjD,GAAU,GAAKD,IAAW,GACpCmD,GAAUnD,GAAU,GAAKC,IAAW,GACpCmD,GAAWlD,GAAW,GAAKC,IAAY,GACvCkD,GAAWlD,GAAW,GAAKD,IAAY,GACvCoD,GAAUjD,GAAW,GAAKD,IAAY,GACtCmD,GAAUnD,GAAW,GAAKC,IAAY,GACtCmD,GAAWlD,GAAW,EAAIC,IAAY,GACtCkD,GAAWlD,GAAW,EAAID,IAAY,GACtCoD,GAAWjD,GAAU,GAAKD,IAAW,EACrCmD,GAAWnD,GAAU,GAAKC,IAAW,EACrCmD,GAAWlD,GAAU,EAAIC,IAAW,GACpCkD,GAAWlD,GAAU,EAAID,IAAW,GACpCoD,GAAUjD,GAAW,GAAKD,IAAY,GACtCmD,GAAUnD,GAAW,GAAKC,IAAY,GACtCmD,GAAWlD,GAAW,GAAKC,IAAY,GACvCkD,GAAWlD,GAAW,GAAKD,IAAY,GACvCoD,GAAUjD,GAAW,GAAKD,IAAY,EACtCmD,GAAUnD,GAAW,GAAKC,IAAY,EACtCmD,GAAUlD,GAAU,GAAKC,IAAW,EACpCkD,GAAUlD,GAAU,GAAKD,IAAW,EACpCoD,GAAWjD,GAAU,GAAKD,IAAW,EACrCmD,GAAWnD,GAAU,GAAKC,IAAW,EACrCmD,GAAWlD,GAAW,GAAKC,IAAY,EACvCkD,GAAWlD,GAAW,GAAKD,IAAY,EACvCoD,GAAUlD,GAAW,GAAKC,IAAY,GACtCkD,GAAUlD,GAAW,GAAKD,IAAY,GACtCoD,GAAWjD,IAAW,GAAKD,IAAY,EACvCmD,GAAWnD,GAAW,GAAKC,KAAY,EACvCmD,GAAWlD,IAAU,GAAKC,KAAW,EACrCkD,GAAWlD,IAAU,GAAKD,KAAW,EACrCoD,GAAUlD,IAAU,GAAKC,KAAW,GACpCkD,GAAUlD,IAAU,GAAKD,KAAW,GACpCoD,GAAWjD,IAAW,EAAID,KAAY,GACtCmD,GAAWnD,IAAW,EAAIC,KAAY,GACtCmD,GAAWlD,IAAW,EAAIC,KAAY,GACtCkD,GAAWlD,IAAW,EAAID,KAAY,GACtCoD,GAAUlD,IAAW,GAAKC,KAAY,GACtCkD,GAAUlD,IAAW,GAAKD,KAAY,GAG5CtL,EAAE,GAAKwL,IAAWY,GAASY,GAC3BhN,EAAE,GAAKyL,IAAWY,GAASY,GAC3BjN,EAAE,IAAMsN,IAAWY,GAAStC,GAC5B5L,EAAE,IAAMuN,IAAWY,GAAStC,GAC5B7L,EAAE,IAAMkM,IAAYY,GAAUY,GAC9B1N,EAAE,IAAMmM,IAAYY,GAAUY,GAC9B3N,EAAE,IAAMgO,IAAYtC,GAAUY,GAC9BtM,EAAE,IAAMiO,IAAYtC,GAAUY,GAC9BvM,EAAE,IAAM4M,IAAYY,GAAUY,GAC9BpO,EAAE,IAAM6M,IAAYY,GAAUY,GAC9BrO,EAAE,GAAKoM,IAAWY,GAASY,GAC3B5N,EAAE,GAAKqM,IAAWY,GAASY,GAC3B7N,EAAE,IAAMkO,IAAWtC,GAASY,GAC5BxM,EAAE,IAAMmO,IAAWtC,GAASY,GAC5BzM,EAAE,IAAM8M,IAAYY,GAAUY,GAC9BtO,EAAE,IAAM+M,IAAYY,GAAUY,GAC9BvO,EAAE,IAAM0L,IAAYY,GAAUY,GAC9BlN,EAAE,IAAM2L,IAAYY,GAAUY,GAC9BnN,EAAE,IAAMwN,IAAYY,GAAUtC,GAC9B9L,EAAE,IAAMyN,IAAYY,GAAUtC,GAC9B/L,EAAE,GAAKgN,IAAWY,GAASY,GAC3BxO,EAAE,GAAKiN,IAAWY,GAASY,GAC3BzO,EAAE,IAAM4L,IAAWY,GAASY,GAC5BpN,EAAE,IAAM6L,IAAWY,GAASY,GAC5BrN,EAAE,IAAM0N,IAAYY,GAAUtC,GAC9BhM,EAAE,IAAM2N,IAAYY,GAAUtC,GAC9BjM,EAAE,IAAMsM,IAAYY,GAAUY,GAC9B9N,EAAE,IAAMuM,IAAYY,GAAUY,GAC9B/N,EAAE,IAAMoO,IAAYtC,GAAUY,GAC9B1M,EAAE,IAAMqO,IAAYtC,GAAUY,GAC9B3M,EAAE,GAAK4N,IAAWY,GAAShD,GAC3BxL,EAAE,GAAK6N,IAAWY,GAAShD,GAC3BzL,EAAE,IAAMwM,IAAWY,GAASE,GAC5BtN,EAAE,IAAMyM,IAAWY,GAASE,GAC5BvN,EAAE,IAAMsO,IAAYtC,GAAUE,GAC9BlM,EAAE,IAAMuO,IAAYtC,GAAUE,GAC9BnM,EAAE,IAAMkN,IAAYY,GAAUE,GAC9BhO,EAAE,IAAMmN,IAAYY,GAAUE,GAC9BjO,EAAE,IAAM8L,IAAYY,GAAUE,GAC9B5M,EAAE,IAAM+L,IAAYY,GAAUE,GAC9B7M,EAAE,GAAKwO,IAAWhD,GAASY,GAC3BpM,EAAE,GAAKyO,IAAWhD,GAASY,GAC3BrM,EAAE,IAAMoN,IAAWE,GAASY,GAC5BlO,EAAE,IAAMqN,IAAWE,GAASY,GAC5BnO,EAAE,IAAMgM,IAAYE,GAAUY,GAC9B9M,EAAE,IAAMiM,IAAYE,GAAUY,GAC9B/M,EAAE,IAAM8N,IAAYE,GAAUtC,GAC9B1L,EAAE,IAAM+N,IAAYE,GAAUtC,GAC9B3L,EAAE,IAAM0M,IAAYE,GAAUY,GAC9BxN,EAAE,IAAM2M,IAAYE,GAAUY,GAG9BzN,EAAE,IAAMwH,EAA8B,EAARC,GAC9BzH,EAAE,IAAMwH,EAA8B,EAARC,EAAY,M,kCCvL9C,IAAIvE,EAAY/L,MAAQA,KAAK+L,UAAa,WAStC,OARAA,EAAW1M,OAAOiL,QAAU,SAAS0B,GACjC,IAAK,IAAInD,EAAGhE,EAAI,EAAGoH,EAAIC,UAAUjJ,OAAQ4B,EAAIoH,EAAGpH,IAE5C,IAAK,IAAItE,KADTsI,EAAIqD,UAAUrH,GACAgE,EAAOxJ,OAAOsB,UAAUH,eAAea,KAAKwH,EAAGtI,KACzDyL,EAAEzL,GAAKsI,EAAEtI,IAEjB,OAAOyL,GAEJD,EAASI,MAAMnM,KAAMkM,YAEhC7M,OAAOC,eAAeF,EAAS,aAAc,CAAEG,OAAO,IACtD,IAAIsB,EAAoB,EAAQ,QAC5B0W,EAAsB,EAAQ,QAC9BzW,EAAW,EAAQ,QAEnB0W,EAAU,IAAI3W,EAAkBmH,GAAG,mEAAoE,IAIvG2C,EAA6B,WA8B7B,SAASA,EAAYzJ,EAAMC,GAIvB,QAHa,IAATD,IAAmBA,EAAO,SACjB,IAATC,IAAmBA,EAAO,IAE1BA,EAAKsW,OAAQ,CACb,GAAItW,EAAKoL,OAASpL,EAAKqL,SACnB,MAAM,IAAI7G,MAAM,gGAEpB3F,KAAK0X,QAAUvW,EAAKsW,WAEnB,CACD,IAAIlL,EAAQpL,EAAKoL,MAAQpL,EAAKoL,MAAQ,UAClCC,EAAWrL,EAAKqL,SAAWrL,EAAKqL,SAAW,aAC/CxM,KAAK0X,QAAU,IAAIH,EAAoB/U,QAAQ+J,EAAOC,GAG1D,IAAItI,EAAS,CACT,CACIkB,KAAM,QACNnC,OAAQ,GACRiC,WAAW,EACX1C,QAAS,IAAI1B,EAASsB,OAAO,KAEjC,CACIgD,KAAM,WACNnC,OAAQ,GACRiC,WAAW,EACX1C,QAAS,IAAI1B,EAASsB,OAAO,KAEjC,CACIgD,KAAM,WACNE,MAAO,MACPrC,OAAQ,GACRiC,WAAW,EACX1C,QAAS,IAAI1B,EAASsB,OAAO,KAEjC,CACIgD,KAAM,KACNH,WAAW,EACXhC,OAAQ,GACRT,QAAS,IAAI1B,EAASsB,OAAO,KAEjC,CACIgD,KAAM,QACNnC,OAAQ,GACRiC,WAAW,EACX1C,QAAS,IAAI1B,EAASsB,OAAO,KAEjC,CACIgD,KAAM,OACNE,MAAO,QACPL,WAAW,EACXzC,QAAS,IAAI1B,EAASsB,OAAO,KAEjC,CACIgD,KAAM,IACNH,WAAW,EACXzC,QAAS,IAAI1B,EAASsB,OAAO,KAEjC,CACIgD,KAAM,IACNnC,OAAQ,GACRgC,WAAW,EACXC,WAAW,EACX1C,QAAS,IAAI1B,EAASsB,OAAO,KAEjC,CACIgD,KAAM,IACNnC,OAAQ,GACRgC,WAAW,EACXC,WAAW,EACX1C,QAAS,IAAI1B,EAASsB,OAAO,MAIrCvB,EAAkBmD,iBAAiBhE,KAAMkE,EAAQhD,GAMjD7B,OAAOC,eAAeU,KAAM,OAAQ,CAChCsB,YAAY,EACZC,cAAc,EACdC,IAAKxB,KAAKyB,iBAAiBkW,KAAK3X,QAEpCA,KAAK4X,WAAW5X,KAAKgF,GACrBhF,KAAK6X,iCA0MT,OArMAlN,EAAYhK,UAAUmX,kBAAoB,WACtC,MAAmC,KAA5B9X,KAAK+X,GAAG7V,SAAS,QAM5ByI,EAAYhK,UAAUqB,KAAO,SAAUC,GAEnC,IAAI+V,EAkBJ,YAnByB,IAArB/V,IAA+BA,GAAmB,GAGlD+V,EADA/V,EACQjC,KAAKmE,IAGTnE,KAAKiY,oBACGjY,KAAKmE,IAAI7B,MAAM,EAAG,GAAGD,OAAO,CAChCxB,EAAkBgB,SAAS7B,KAAKkY,cAEhCrX,EAAkBsE,WAAWtE,EAAkBgB,SAAS,IACxDhB,EAAkBsE,WAAWtE,EAAkBgB,SAAS,MAIpD7B,KAAKmE,IAAI7B,MAAM,EAAG,GAI3BzB,EAAkByK,QAAQ0M,IAKrCrN,EAAYhK,UAAUuX,WAAa,WAC/B,OAAOlY,KAAK0X,QAAQvP,WAKxBwC,EAAYhK,UAAUc,iBAAmB,WACrC,GAAIzB,KAAK4B,MACL,OAAO5B,KAAK4B,MAEhB,IAAIuW,EAASnY,KAAKoY,qBAElB,OADApY,KAAK4B,MAAQf,EAAkBwX,gBAAgBF,GACxCnY,KAAK4B,OAKhB+I,EAAYhK,UAAUyX,mBAAqB,WACvC,IAAKpY,KAAKsY,kBACN,MAAM,IAAI3S,MAAM,qBAGpB,OAAO3F,KAAKuY,eAKhB5N,EAAYhK,UAAU2X,gBAAkB,WACpC,IAAI/P,EAAUvI,KAAKgC,MAAK,GAExB,GAAIhC,KAAK0X,QAAQnI,YAAY,cAAkE,IAAlD,IAAI1O,EAAkBmH,GAAGhI,KAAK6I,GAAGkB,IAAIyN,GAC9E,OAAO,EAEX,IACI,IAAIxS,EAAInE,EAAkB2X,YAAYxY,KAAKgF,GACvCyT,EAAkCzT,GAAyB,EAApBhF,KAAKkY,aAAmB,IAAMlY,KAAK0X,QAAQnI,YAAY,kBAClGvP,KAAKuY,cAAgB1X,EAAkBiI,UAAUP,EAASvD,EAAGhF,KAAK2I,EAAG3I,KAAK6I,EAAG4P,EAAkCzY,KAAKkY,kBAAexU,GAEvI,MAAOgV,GACH,OAAO,EAEX,QAAS1Y,KAAKuY,eAMlB5N,EAAYhK,UAAU4B,KAAO,SAAUiG,GAGnCxI,KAAKgF,EAAI,IAAIlE,EAASsB,OAAO,IAC7BpC,KAAK6I,EAAI,IAAI/H,EAASsB,OAAO,IAC7BpC,KAAK2I,EAAI,IAAI7H,EAASsB,OAAO,IAC7B,IAAImG,EAAUvI,KAAKgC,MAAK,GACpByG,EAAM5H,EAAkByH,OAAOC,EAASC,GACxCxI,KAAKiY,sBACLxP,EAAIzD,GAAyB,EAApBhF,KAAKkY,aAAmB,GAErC7Y,OAAOiL,OAAOtK,KAAMyI,IAKxBkC,EAAYhK,UAAUgY,WAAa,WAG/B,IAFA,IAAIzX,EAAOlB,KAAKmE,IAAI,GAChByU,EAAO,IAAI/X,EAAkBmH,GAAG,GAC3BnD,EAAI,EAAGA,EAAI3D,EAAK+B,OAAQ4B,IACjB,IAAZ3D,EAAK2D,GACC+T,EAAKC,MAAM7Y,KAAK0X,QAAQnK,MAAM,YAAa,eAC3CqL,EAAKC,MAAM7Y,KAAK0X,QAAQnK,MAAM,YAAa,kBAErD,OAAOqL,GAKXjO,EAAYhK,UAAUmY,WAAa,WAC/B,IAAIC,EAAM/Y,KAAK2Y,aAAaE,MAAM7Y,KAAK0X,QAAQnK,MAAM,YAAa,OAIlE,OAHIvN,KAAK0X,QAAQnI,YAAY,cAAgBvP,KAAK8X,qBAC9CiB,EAAIF,MAAM7Y,KAAK0X,QAAQnK,MAAM,YAAa,eAEvCwL,GAKXpO,EAAYhK,UAAUqY,eAAiB,WACnC,OAAO,IAAInY,EAAkBmH,GAAGhI,KAAKiZ,UAAUC,KAAK,IAAIrY,EAAkBmH,GAAGhI,KAAKmZ,WAAWC,KAAK,IAAIvY,EAAkBmH,GAAGhI,KAAKT,SAEpIoL,EAAYhK,UAAU0Y,SAAW,SAAUC,QACnB,IAAhBA,IAA0BA,GAAc,GAC5C,IAAIC,EAAS,GAOb,OANKvZ,KAAKsY,mBACNiB,EAAOlU,KAAK,qBAEZrF,KAAK8Y,aAAa/O,IAAI,IAAIlJ,EAAkBmH,GAAGhI,KAAKiZ,WAAa,GACjEM,EAAOlU,KAAK,CAAC,uCAAyCrF,KAAK8Y,gBAE3C,IAAhBQ,EACyB,IAAlBC,EAAOtW,OAGPsW,EAAOC,KAAK,MAM3B7O,EAAYhK,UAAUgE,UAAY,WAE9B,OAAO9D,EAAkBiD,IAAIc,OAAO5E,KAAKmE,MAM7CwG,EAAYhK,UAAU0D,OAAS,SAAUoV,GAGrC,YAFe,IAAXA,IAAqBA,GAAS,GAE3B,IAEX9O,EAAYhK,UAAUiX,WAAa,SAAU5S,GACzC,QAAUtB,IAANsB,GAAgC,IAAbA,EAAE/B,QAGpBjD,KAAK0X,QAAQnI,YAAY,kBAA9B,CAGA,IAAImK,EAAO7Y,EAAkB2X,YAAYxT,GACzC,GAAa,KAAT0U,GAAwB,KAATA,EAAnB,CAGA,IAAIC,EAAiBD,IAA6B,EAApB1Z,KAAKkY,aAAmB,IAAMwB,IAA6B,EAApB1Z,KAAKkY,aAAmB,GAC7F,IAAKyB,EACD,MAAM,IAAIhU,MAAM,+BAAiC+T,EAAO,iBAAmB1Z,KAAKkY,aAAe,qFAGvGvN,EAAYhK,UAAUiZ,UAAY,WAC9B,OAAO5Z,KAAKgF,EAAE/B,OAAS,GAAKjD,KAAK2I,EAAE1F,OAAS,GAAKjD,KAAK6I,EAAE5F,OAAS,GAErE0H,EAAYhK,UAAUkX,+BAAiC,WACnD,IAAIzW,EAAQpB,KACR6Z,EAAcxa,OAAOya,yBAAyB9Z,KAAM,KACxDX,OAAOC,eAAeU,KAAM,IAAK+L,EAAS,GAAI8N,EAAa,CAAEnY,IAAK,SAAUsD,QAC1DtB,IAANsB,GACA5D,EAAMwW,WAAW/W,EAAkBgB,SAASmD,IAEhD6U,EAAYnY,IAAIsD,QAG5B2F,EAAYhK,UAAUsX,kBAAoB,WACtC,IAAI8B,EAAuB/Z,KAAK0X,QAAQnI,YAAY,kBACpD,IAAKvP,KAAK4Z,YAEN,OAAOG,EAOX,IAAI/U,EAAInE,EAAkB2X,YAAYxY,KAAKgF,GACvCgV,EAAkChV,IAA0B,EAApBhF,KAAKkY,aAAmB,IAAMlT,IAA0B,EAApBhF,KAAKkY,aAAmB,GACxG,OAAO8B,GAAmCD,GAEvCpP,EA/TqB,GAiUhCvL,EAAQoD,QAAUmI,G,mCCtVlB,YACAtL,OAAOC,eAAeF,EAAS,aAAc,CAAEG,OAAO,IACtD,IAAIsE,EAAY,EAAQ,QACpBmE,EAAK,EAAQ,QAKjB5I,EAAQ6a,MAAQ,SAAUC,GACtB,OAAO9X,EAAOe,YAAY+W,GAAO3W,KAAK,IAU1CnE,EAAQiK,cAAgB,SAAU8Q,EAAKlX,EAAQmX,QAC7B,IAAVA,IAAoBA,GAAQ,GAChC,IAAI3W,EAAMrE,EAAQ6a,MAAMhX,GAExB,OADAkX,EAAM/a,EAAQyC,SAASsY,GACnBC,EACID,EAAIlX,OAASA,GACbkX,EAAIrS,KAAKrE,GACFA,GAEJ0W,EAAI7X,MAAM,EAAGW,GAGhBkX,EAAIlX,OAASA,GACbkX,EAAIrS,KAAKrE,EAAKR,EAASkX,EAAIlX,QACpBQ,GAEJ0W,EAAI7X,OAAOW,IAG1B7D,EAAQ2J,UAAY3J,EAAQiK,cAQ5BjK,EAAQib,eAAiB,SAAUF,EAAKlX,GACpC,OAAO7D,EAAQ2J,UAAUoR,EAAKlX,GAAQ,IAO1C7D,EAAQkb,MAAQ,SAAUvP,GACtBA,EAAIlH,EAAU0B,eAAewF,GAC7B,IAAIwP,EAAQxP,EAAE,GACd,MAAOA,EAAE9H,OAAS,GAA0B,MAArBsX,EAAMrY,WACzB6I,EAAIA,EAAEzI,MAAM,GACZiY,EAAQxP,EAAE,GAEd,OAAOA,GAEX3L,EAAQ+F,WAAa/F,EAAQkb,MAK7Blb,EAAQyC,SAAW,SAAUmD,GACzB,IAAK5C,EAAOoD,SAASR,GACjB,GAAI1E,MAAMoF,QAAQV,GACdA,EAAI5C,EAAOL,KAAKiD,QAEf,GAAiB,kBAANA,EAAgB,CAC5B,IAAInB,EAAUoH,YAAYjG,GAItB,MAAM,IAAIW,MAAM,8GAAgHX,GAHhIA,EAAI5C,EAAOL,KAAK8B,EAAU2W,UAAU3W,EAAU0B,eAAeP,IAAK,YAMrE,GAAiB,kBAANA,EACZA,EAAInB,EAAU4W,YAAYzV,QAEzB,GAAU,OAANA,QAAoBtB,IAANsB,EACnBA,EAAI5C,EAAOe,YAAY,QAEtB,GAAI6E,EAAG0S,KAAK1V,GACbA,EAAIA,EAAE2V,YAAYvY,OAEjB,KAAI4C,EAAE4V,QAKP,MAAM,IAAIjV,MAAM,gBAHhBX,EAAI5C,EAAOL,KAAKiD,EAAE4V,WAM1B,OAAO5V,GAOX5F,EAAQoZ,YAAc,SAAU/U,GAC5B,OAAO,IAAIuE,EAAG5I,EAAQyC,SAAS4B,IAAMoX,YAMzCzb,EAAQgK,YAAc,SAAU3F,GAE5B,OADAA,EAAMrE,EAAQyC,SAAS4B,GAChB,KAAOA,EAAIvB,SAAS,QAM/B9C,EAAQ0b,WAAa,SAAUC,GAC3B,OAAO,IAAI/S,EAAG+S,GAAKC,SAAS,MAMhC5b,EAAQ6b,WAAa,SAAUF,GAC3B,OAAO3Y,EAAOL,KAAKgZ,EAAIG,OAAO,KAAKN,YAKvCxb,EAAQ+b,aAAe,SAAUC,GAC7B,MAAmB,kBAARA,GAGJvX,EAAUwX,cAAcD,GAFpBA,EAEiC,KAAOA,GAOvDhc,EAAQsF,SAAW,SAAU4W,GACzB,GAAIlZ,EAAOoD,SAAS8V,GAChB,MAAO,KAAOA,EAAGpZ,SAAS,OAEzB,GAAIoZ,aAAchb,MAAO,CAE1B,IADA,IAAIib,EAAQ,GACH1W,EAAI,EAAGA,EAAIyW,EAAGrY,OAAQ4B,IAC3B0W,EAAMlW,KAAKjG,EAAQsF,SAAS4W,EAAGzW,KAEnC,OAAO0W,M,imCCzJf,YACAlc,OAAOC,eAAeF,EAAS,aAAc,CAAEG,OAAO,IACtD,IAAIqE,EAAS,EAAQ,QACjBC,EAAY,EAAQ,QACpBkE,EAAY,EAAQ,QACpBC,EAAK,EAAQ,QACbjE,EAAU,EAAQ,QAClBkE,EAAS,EAAQ,QAIrB7I,EAAQoc,YAAc,WAClB,IAAIC,EAAgB,GAChBC,EAAO3X,EAAQkW,MAAMwB,GACzB,OAAO1X,EAAQqF,YAAYsS,IAK/Btc,EAAQuc,eAAiB,SAAUC,GAC/B,MAAO,sBAAsBC,KAAKD,IAKtCxc,EAAQ0c,cAAgB,SAAUF,GAC9B,IAAIG,EAAW3c,EAAQoc,cACvB,OAAOO,IAAahY,EAAQoX,aAAaS,IAY7Cxc,EAAQ4c,kBAAoB,SAAUJ,EAASK,GAC3CL,EAAU/X,EAAU0B,eAAeqW,GAASxL,cAI5C,IAHA,IAAIlG,OAA4BxG,IAAnBuY,EAA+BA,EAAe/Z,WAAa,KAAO,GAC3EF,EAAOiG,EAAOkC,OAAOD,EAAS0R,GAAS1Z,SAAS,OAChDwG,EAAM,KACD7D,EAAI,EAAGA,EAAI+W,EAAQ3Y,OAAQ4B,IAC5BqX,SAASla,EAAK6C,GAAI,KAAO,EACzB6D,GAAOkT,EAAQ/W,GAAGsX,cAGlBzT,GAAOkT,EAAQ/W,GAGvB,OAAO6D,GAOXtJ,EAAQgd,uBAAyB,SAAUR,EAASK,GAChD,OAAO7c,EAAQuc,eAAeC,IAAYxc,EAAQ4c,kBAAkBJ,EAASK,KAAoBL,GAOrGxc,EAAQid,gBAAkB,SAAUta,EAAMua,GACtCva,EAAOgC,EAAQlC,SAASE,GACxB,IAAIwa,EAAU,IAAIvU,EAAGsU,GACrB,OAAIC,EAAQ1S,SAGD5B,EAAOqD,QAAQ,CAACvJ,EAAM,OAAOO,OAAO,IAGxC2F,EAAOqD,QAAQ,CAACvJ,EAAMK,EAAOL,KAAKwa,EAAQ3B,aAAatY,OAAO,KAQzElD,EAAQod,iBAAmB,SAAUza,EAAM0a,EAAMC,GAC7C,IAAIC,EAAU5Y,EAAQlC,SAASE,GAC3B6a,EAAU7Y,EAAQlC,SAAS4a,GAC3BI,EAAc9Y,EAAQlC,SAAS6a,GACnC9Y,EAA0B,KAAnB+Y,EAAQ1Z,QACfW,EAA0B,KAAnBgZ,EAAQ3Z,QACf,IAAI2Y,EAAU3T,EAAOiD,UAAU9I,EAAOC,OAAO,CAACD,EAAOL,KAAK,KAAM,OAAQ4a,EAASC,EAAS3U,EAAOiD,UAAU2R,MAC3G,OAAOjB,EAAQtZ,OAAO,KAK1BlD,EAAQ0d,cAAgB,SAAUlB,GAC9B,IAAI7Q,EAAIhH,EAAQuW,MAAMsB,GACtB,OAAoB,IAAb7Q,EAAE9H,QAAgB8H,EAAE,IAAM,GAAKA,EAAE,IAAM,GAKlD3L,EAAQ2d,eAAiB,SAAUvU,GAC/B,OAAOT,EAAUiV,iBAAiBxU,IAQtCpJ,EAAQ6d,cAAgB,SAAUC,EAAWC,GAEzC,YADiB,IAAbA,IAAuBA,GAAW,GACb,KAArBD,EAAUja,OAEH8E,EAAUqV,gBAAgBhb,EAAOC,OAAO,CAACD,EAAOL,KAAK,CAAC,IAAKmb,OAEjEC,GAGEpV,EAAUqV,gBAAgBF,IAQrC9d,EAAQie,aAAe,SAAUC,EAAQH,GAQrC,YAPiB,IAAbA,IAAuBA,GAAW,GACtCG,EAASvZ,EAAQlC,SAASyb,GACtBH,GAA8B,KAAlBG,EAAOra,SACnBqa,EAASvV,EAAUmB,iBAAiBoU,GAAQ,GAAOhb,MAAM,IAE7DsB,EAAyB,KAAlB0Z,EAAOra,QAEPgF,EAAOkC,OAAOmT,GAAQhb,OAAO,KAExClD,EAAQiZ,gBAAkBjZ,EAAQie,aAKlCje,EAAQme,iBAAmB,SAAU/U,GACjC,OAAOpJ,EAAQiZ,gBAAgBjZ,EAAQoe,gBAAgBhV,KAM3DpJ,EAAQoe,gBAAkB,SAAUhV,GAGhC,OAFAA,EAAazE,EAAQlC,SAAS2G,GAEvBT,EAAU0V,gBAAgBjV,GAAY,GAAOlG,MAAM,IAK9DlD,EAAQse,aAAe,SAAUR,GAK7B,OAJAA,EAAYnZ,EAAQlC,SAASqb,GACJ,KAArBA,EAAUja,SACVia,EAAYnV,EAAUmB,iBAAiBgU,GAAW,GAAO5a,MAAM,IAE5D4a,K,gECpKX,YACA7d,OAAOC,eAAeF,EAAS,aAAc,CAAEG,OAAO,IACtD,IAAIyI,EAAK,EAAQ,QAIjB5I,EAAQue,YAAc,IAAI3V,EAAG,mEAAoE,IAIjG5I,EAAQwe,WAAa,IAAI5V,EAAG,oEAAqE,IAIjG5I,EAAQye,iBAAmB,mEAI3Bze,EAAQ0e,eAAiB1b,EAAOL,KAAK3C,EAAQye,iBAAkB,OAI/Dze,EAAQ2e,sBAAwB,mEAIhC3e,EAAQ4e,oBAAsB5b,EAAOL,KAAK3C,EAAQ2e,sBAAuB,OAIzE3e,EAAQ6e,gBAAkB,mEAI1B7e,EAAQ8e,cAAgB9b,EAAOL,KAAK3C,EAAQ6e,gBAAiB,S","file":"js/chunk-651d72a2.dd37e6d6.js","sourcesContent":["'use strict'\nmodule.exports = require('./lib/api')(require('./lib/keccak'))\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.chains = {\n    names: {\n        '1': 'mainnet',\n        '3': 'ropsten',\n        '4': 'rinkeby',\n        '42': 'kovan',\n        '6284': 'goerli',\n    },\n    mainnet: require('./mainnet.json'),\n    ropsten: require('./ropsten.json'),\n    rinkeby: require('./rinkeby.json'),\n    kovan: require('./kovan.json'),\n    goerli: require('./goerli.json'),\n};\n//# sourceMappingURL=index.js.map","\"use strict\";\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar ethereumjs_util_1 = require(\"ethereumjs-util\");\nvar buffer_1 = require(\"buffer\");\nvar transaction_1 = require(\"./transaction\");\n/**\n * Creates a new transaction object that doesn't need to be signed.\n *\n * @param data - A transaction can be initialized with its rlp representation, an array containing\n * the value of its fields in order, or an object containing them by name.\n *\n * @param opts - The transaction's options, used to indicate the chain and hardfork the\n * transactions belongs to.\n *\n * @see Transaction\n */\nvar FakeTransaction = /** @class */ (function (_super) {\n    __extends(FakeTransaction, _super);\n    function FakeTransaction(data, opts) {\n        if (data === void 0) { data = {}; }\n        if (opts === void 0) { opts = {}; }\n        var _this = _super.call(this, data, opts) || this;\n        Object.defineProperty(_this, 'from', {\n            enumerable: true,\n            configurable: true,\n            get: function () { return _this.getSenderAddress(); },\n            set: function (val) {\n                if (val) {\n                    _this._from = ethereumjs_util_1.toBuffer(val);\n                }\n            },\n        });\n        var txData = data;\n        if (txData.from) {\n            _this.from = ethereumjs_util_1.toBuffer(txData.from);\n        }\n        return _this;\n    }\n    /**\n     * Computes a sha3-256 hash of the serialized tx, using the sender address to generate a fake\n     * signature.\n     *\n     * @param includeSignature - Whether or not to include the signature\n     */\n    FakeTransaction.prototype.hash = function (includeSignature) {\n        if (includeSignature === void 0) { includeSignature = true; }\n        if (includeSignature && this._from && this._from.toString('hex') !== '') {\n            // include a fake signature using the from address as a private key\n            var fakeKey = buffer_1.Buffer.concat([this._from, this._from.slice(0, 12)]);\n            this.sign(fakeKey);\n        }\n        return _super.prototype.hash.call(this, includeSignature);\n    };\n    return FakeTransaction;\n}(transaction_1.default));\nexports.default = FakeTransaction;\n//# sourceMappingURL=fake.js.map","/*! safe-buffer. MIT License. Feross Aboukhadijeh <https://feross.org/opensource> */\n/* eslint-disable node/no-deprecated-api */\nvar buffer = require('buffer')\nvar Buffer = buffer.Buffer\n\n// alternative to using Object.keys for old browsers\nfunction copyProps (src, dst) {\n  for (var key in src) {\n    dst[key] = src[key]\n  }\n}\nif (Buffer.from && Buffer.alloc && Buffer.allocUnsafe && Buffer.allocUnsafeSlow) {\n  module.exports = buffer\n} else {\n  // Copy properties from require('buffer')\n  copyProps(buffer, exports)\n  exports.Buffer = SafeBuffer\n}\n\nfunction SafeBuffer (arg, encodingOrOffset, length) {\n  return Buffer(arg, encodingOrOffset, length)\n}\n\nSafeBuffer.prototype = Object.create(Buffer.prototype)\n\n// Copy static methods from Buffer\ncopyProps(Buffer, SafeBuffer)\n\nSafeBuffer.from = function (arg, encodingOrOffset, length) {\n  if (typeof arg === 'number') {\n    throw new TypeError('Argument must not be a number')\n  }\n  return Buffer(arg, encodingOrOffset, length)\n}\n\nSafeBuffer.alloc = function (size, fill, encoding) {\n  if (typeof size !== 'number') {\n    throw new TypeError('Argument must be a number')\n  }\n  var buf = Buffer(size)\n  if (fill !== undefined) {\n    if (typeof encoding === 'string') {\n      buf.fill(fill, encoding)\n    } else {\n      buf.fill(fill)\n    }\n  } else {\n    buf.fill(0)\n  }\n  return buf\n}\n\nSafeBuffer.allocUnsafe = function (size) {\n  if (typeof size !== 'number') {\n    throw new TypeError('Argument must be a number')\n  }\n  return Buffer(size)\n}\n\nSafeBuffer.allocUnsafeSlow = function (size) {\n  if (typeof size !== 'number') {\n    throw new TypeError('Argument must be a number')\n  }\n  return buffer.SlowBuffer(size)\n}\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar assert = require('assert');\nvar ethjsUtil = require('ethjs-util');\nvar rlp = require(\"rlp\");\nvar bytes_1 = require(\"./bytes\");\n/**\n * Defines properties on a `Object`. It make the assumption that underlying data is binary.\n * @param self the `Object` to define properties on\n * @param fields an array fields to define. Fields can contain:\n * * `name` - the name of the properties\n * * `length` - the number of bytes the field can have\n * * `allowLess` - if the field can be less than the length\n * * `allowEmpty`\n * @param data data to be validated against the definitions\n * @deprecated\n */\nexports.defineProperties = function (self, fields, data) {\n    self.raw = [];\n    self._fields = [];\n    // attach the `toJSON`\n    self.toJSON = function (label) {\n        if (label === void 0) { label = false; }\n        if (label) {\n            var obj_1 = {};\n            self._fields.forEach(function (field) {\n                obj_1[field] = \"0x\" + self[field].toString('hex');\n            });\n            return obj_1;\n        }\n        return bytes_1.baToJSON(self.raw);\n    };\n    self.serialize = function serialize() {\n        return rlp.encode(self.raw);\n    };\n    fields.forEach(function (field, i) {\n        self._fields.push(field.name);\n        function getter() {\n            return self.raw[i];\n        }\n        function setter(v) {\n            v = bytes_1.toBuffer(v);\n            if (v.toString('hex') === '00' && !field.allowZero) {\n                v = Buffer.allocUnsafe(0);\n            }\n            if (field.allowLess && field.length) {\n                v = bytes_1.stripZeros(v);\n                assert(field.length >= v.length, \"The field \" + field.name + \" must not have more \" + field.length + \" bytes\");\n            }\n            else if (!(field.allowZero && v.length === 0) && field.length) {\n                assert(field.length === v.length, \"The field \" + field.name + \" must have byte length of \" + field.length);\n            }\n            self.raw[i] = v;\n        }\n        Object.defineProperty(self, field.name, {\n            enumerable: true,\n            configurable: true,\n            get: getter,\n            set: setter,\n        });\n        if (field.default) {\n            self[field.name] = field.default;\n        }\n        // attach alias\n        if (field.alias) {\n            Object.defineProperty(self, field.alias, {\n                enumerable: false,\n                configurable: true,\n                set: setter,\n                get: getter,\n            });\n        }\n    });\n    // if the constuctor is passed data\n    if (data) {\n        if (typeof data === 'string') {\n            data = Buffer.from(ethjsUtil.stripHexPrefix(data), 'hex');\n        }\n        if (Buffer.isBuffer(data)) {\n            data = rlp.decode(data);\n        }\n        if (Array.isArray(data)) {\n            if (data.length > self._fields.length) {\n                throw new Error('wrong number of fields in data');\n            }\n            // make sure all the items are buffers\n            data.forEach(function (d, i) {\n                self[self._fields[i]] = bytes_1.toBuffer(d);\n            });\n        }\n        else if (typeof data === 'object') {\n            var keys_1 = Object.keys(data);\n            fields.forEach(function (field) {\n                if (keys_1.indexOf(field.name) !== -1)\n                    self[field.name] = data[field.name];\n                if (keys_1.indexOf(field.alias) !== -1)\n                    self[field.alias] = data[field.alias];\n            });\n        }\n        else {\n            throw new Error('invalid data');\n        }\n    }\n};\n//# sourceMappingURL=object.js.map","'use strict'\nconst Buffer = require('safe-buffer').Buffer\nconst Transform = require('stream').Transform\nconst inherits = require('inherits')\n\nmodule.exports = function (KeccakState) {\n  function Keccak (rate, capacity, delimitedSuffix, hashBitLength, options) {\n    Transform.call(this, options)\n\n    this._rate = rate\n    this._capacity = capacity\n    this._delimitedSuffix = delimitedSuffix\n    this._hashBitLength = hashBitLength\n    this._options = options\n\n    this._state = new KeccakState()\n    this._state.initialize(rate, capacity)\n    this._finalized = false\n  }\n\n  inherits(Keccak, Transform)\n\n  Keccak.prototype._transform = function (chunk, encoding, callback) {\n    let error = null\n    try {\n      this.update(chunk, encoding)\n    } catch (err) {\n      error = err\n    }\n\n    callback(error)\n  }\n\n  Keccak.prototype._flush = function (callback) {\n    let error = null\n    try {\n      this.push(this.digest())\n    } catch (err) {\n      error = err\n    }\n\n    callback(error)\n  }\n\n  Keccak.prototype.update = function (data, encoding) {\n    if (!Buffer.isBuffer(data) && typeof data !== 'string') throw new TypeError('Data must be a string or a buffer')\n    if (this._finalized) throw new Error('Digest already called')\n    if (!Buffer.isBuffer(data)) data = Buffer.from(data, encoding)\n\n    this._state.absorb(data)\n\n    return this\n  }\n\n  Keccak.prototype.digest = function (encoding) {\n    if (this._finalized) throw new Error('Digest already called')\n    this._finalized = true\n\n    if (this._delimitedSuffix) this._state.absorbLastFewBits(this._delimitedSuffix)\n    let digest = this._state.squeeze(this._hashBitLength / 8)\n    if (encoding !== undefined) digest = digest.toString(encoding)\n\n    this._resetState()\n\n    return digest\n  }\n\n  // remove result from memory\n  Keccak.prototype._resetState = function () {\n    this._state.initialize(this._rate, this._capacity)\n    return this\n  }\n\n  // because sometimes we need hash right now and little later\n  Keccak.prototype._clone = function () {\n    const clone = new Keccak(this._rate, this._capacity, this._delimitedSuffix, this._hashBitLength, this._options)\n    this._state.copy(clone._state)\n    clone._finalized = this._finalized\n\n    return clone\n  }\n\n  return Keccak\n}\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar secp256k1 = require('secp256k1');\nvar BN = require(\"bn.js\");\nvar bytes_1 = require(\"./bytes\");\nvar hash_1 = require(\"./hash\");\n/**\n * Returns the ECDSA signature of a message hash.\n */\nexports.ecsign = function (msgHash, privateKey, chainId) {\n    var sig = secp256k1.sign(msgHash, privateKey);\n    var recovery = sig.recovery;\n    var ret = {\n        r: sig.signature.slice(0, 32),\n        s: sig.signature.slice(32, 64),\n        v: chainId ? recovery + (chainId * 2 + 35) : recovery + 27,\n    };\n    return ret;\n};\n/**\n * ECDSA public key recovery from signature.\n * @returns Recovered public key\n */\nexports.ecrecover = function (msgHash, v, r, s, chainId) {\n    var signature = Buffer.concat([bytes_1.setLength(r, 32), bytes_1.setLength(s, 32)], 64);\n    var recovery = calculateSigRecovery(v, chainId);\n    if (!isValidSigRecovery(recovery)) {\n        throw new Error('Invalid signature v value');\n    }\n    var senderPubKey = secp256k1.recover(msgHash, signature, recovery);\n    return secp256k1.publicKeyConvert(senderPubKey, false).slice(1);\n};\n/**\n * Convert signature parameters into the format of `eth_sign` RPC method.\n * @returns Signature\n */\nexports.toRpcSig = function (v, r, s, chainId) {\n    var recovery = calculateSigRecovery(v, chainId);\n    if (!isValidSigRecovery(recovery)) {\n        throw new Error('Invalid signature v value');\n    }\n    // geth (and the RPC eth_sign method) uses the 65 byte format used by Bitcoin\n    return bytes_1.bufferToHex(Buffer.concat([bytes_1.setLengthLeft(r, 32), bytes_1.setLengthLeft(s, 32), bytes_1.toBuffer(v)]));\n};\n/**\n * Convert signature format of the `eth_sign` RPC method to signature parameters\n * NOTE: all because of a bug in geth: https://github.com/ethereum/go-ethereum/issues/2053\n */\nexports.fromRpcSig = function (sig) {\n    var buf = bytes_1.toBuffer(sig);\n    // NOTE: with potential introduction of chainId this might need to be updated\n    if (buf.length !== 65) {\n        throw new Error('Invalid signature length');\n    }\n    var v = buf[64];\n    // support both versions of `eth_sign` responses\n    if (v < 27) {\n        v += 27;\n    }\n    return {\n        v: v,\n        r: buf.slice(0, 32),\n        s: buf.slice(32, 64),\n    };\n};\n/**\n * Validate a ECDSA signature.\n * @param homesteadOrLater Indicates whether this is being used on either the homestead hardfork or a later one\n */\nexports.isValidSignature = function (v, r, s, homesteadOrLater, chainId) {\n    if (homesteadOrLater === void 0) { homesteadOrLater = true; }\n    var SECP256K1_N_DIV_2 = new BN('7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a0', 16);\n    var SECP256K1_N = new BN('fffffffffffffffffffffffffffffffebaaedce6af48a03bbfd25e8cd0364141', 16);\n    if (r.length !== 32 || s.length !== 32) {\n        return false;\n    }\n    if (!isValidSigRecovery(calculateSigRecovery(v, chainId))) {\n        return false;\n    }\n    var rBN = new BN(r);\n    var sBN = new BN(s);\n    if (rBN.isZero() || rBN.gt(SECP256K1_N) || sBN.isZero() || sBN.gt(SECP256K1_N)) {\n        return false;\n    }\n    if (homesteadOrLater && sBN.cmp(SECP256K1_N_DIV_2) === 1) {\n        return false;\n    }\n    return true;\n};\n/**\n * Returns the keccak-256 hash of `message`, prefixed with the header used by the `eth_sign` RPC call.\n * The output of this function can be fed into `ecsign` to produce the same signature as the `eth_sign`\n * call for a given `message`, or fed to `ecrecover` along with a signature to recover the public key\n * used to produce the signature.\n */\nexports.hashPersonalMessage = function (message) {\n    var prefix = Buffer.from(\"\\u0019Ethereum Signed Message:\\n\" + message.length.toString(), 'utf-8');\n    return hash_1.keccak(Buffer.concat([prefix, message]));\n};\nfunction calculateSigRecovery(v, chainId) {\n    return chainId ? v - (2 * chainId + 35) : v - 27;\n}\nfunction isValidSigRecovery(recovery) {\n    return recovery === 0 || recovery === 1;\n}\n//# sourceMappingURL=signature.js.map","\"use strict\";\nfunction __export(m) {\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\n}\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar secp256k1 = require('secp256k1');\nexports.secp256k1 = secp256k1;\nvar ethjsUtil = require('ethjs-util');\nvar BN = require(\"bn.js\");\nexports.BN = BN;\nvar rlp = require(\"rlp\");\nexports.rlp = rlp;\nObject.assign(exports, ethjsUtil);\n/**\n * Constants\n */\n__export(require(\"./constants\"));\n/**\n * Public-key cryptography (secp256k1) and addresses\n */\n__export(require(\"./account\"));\n/**\n * Hash functions\n */\n__export(require(\"./hash\"));\n/**\n * ECDSA signature\n */\n__export(require(\"./signature\"));\n/**\n * Utilities for manipulating Buffers, byte arrays, etc.\n */\n__export(require(\"./bytes\"));\n/**\n * Function for definining properties on an object\n */\n__export(require(\"./object\"));\n//# sourceMappingURL=index.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.hardforks = [\n    ['chainstart', require('./chainstart.json')],\n    ['homestead', require('./homestead.json')],\n    ['dao', require('./dao.json')],\n    ['tangerineWhistle', require('./tangerineWhistle.json')],\n    ['spuriousDragon', require('./spuriousDragon.json')],\n    ['byzantium', require('./byzantium.json')],\n    ['constantinople', require('./constantinople.json')],\n    ['petersburg', require('./petersburg.json')],\n    ['istanbul', require('./istanbul.json')],\n    ['muirGlacier', require('./muirGlacier.json')],\n];\n//# sourceMappingURL=index.js.map","'use strict'\nconst Buffer = require('safe-buffer').Buffer\nconst Transform = require('stream').Transform\nconst inherits = require('inherits')\n\nmodule.exports = function (KeccakState) {\n  function Shake (rate, capacity, delimitedSuffix, options) {\n    Transform.call(this, options)\n\n    this._rate = rate\n    this._capacity = capacity\n    this._delimitedSuffix = delimitedSuffix\n    this._options = options\n\n    this._state = new KeccakState()\n    this._state.initialize(rate, capacity)\n    this._finalized = false\n  }\n\n  inherits(Shake, Transform)\n\n  Shake.prototype._transform = function (chunk, encoding, callback) {\n    let error = null\n    try {\n      this.update(chunk, encoding)\n    } catch (err) {\n      error = err\n    }\n\n    callback(error)\n  }\n\n  Shake.prototype._flush = function () {}\n\n  Shake.prototype._read = function (size) {\n    this.push(this.squeeze(size))\n  }\n\n  Shake.prototype.update = function (data, encoding) {\n    if (!Buffer.isBuffer(data) && typeof data !== 'string') throw new TypeError('Data must be a string or a buffer')\n    if (this._finalized) throw new Error('Squeeze already called')\n    if (!Buffer.isBuffer(data)) data = Buffer.from(data, encoding)\n\n    this._state.absorb(data)\n\n    return this\n  }\n\n  Shake.prototype.squeeze = function (dataByteLength, encoding) {\n    if (!this._finalized) {\n      this._finalized = true\n      this._state.absorbLastFewBits(this._delimitedSuffix)\n    }\n\n    let data = this._state.squeeze(dataByteLength)\n    if (encoding !== undefined) data = data.toString(encoding)\n\n    return data\n  }\n\n  Shake.prototype._resetState = function () {\n    this._state.initialize(this._rate, this._capacity)\n    return this\n  }\n\n  Shake.prototype._clone = function () {\n    const clone = new Shake(this._rate, this._capacity, this._delimitedSuffix, this._options)\n    this._state.copy(clone._state)\n    clone._finalized = this._finalized\n\n    return clone\n  }\n\n  return Shake\n}\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar transaction_1 = require(\"./transaction\");\nexports.Transaction = transaction_1.default;\nvar fake_1 = require(\"./fake\");\nexports.FakeTransaction = fake_1.default;\n//# sourceMappingURL=index.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar createKeccakHash = require('keccak');\nvar createHash = require('create-hash');\nvar ethjsUtil = require('ethjs-util');\nvar rlp = require(\"rlp\");\nvar bytes_1 = require(\"./bytes\");\n/**\n * Creates Keccak hash of the input\n * @param a The input data (Buffer|Array|String|Number) If the string is a 0x-prefixed hex value\n * it's interpreted as hexadecimal, otherwise as utf8.\n * @param bits The Keccak width\n */\nexports.keccak = function (a, bits) {\n    if (bits === void 0) { bits = 256; }\n    if (typeof a === 'string' && !ethjsUtil.isHexString(a)) {\n        a = Buffer.from(a, 'utf8');\n    }\n    else {\n        a = bytes_1.toBuffer(a);\n    }\n    if (!bits)\n        bits = 256;\n    return createKeccakHash(\"keccak\" + bits)\n        .update(a)\n        .digest();\n};\n/**\n * Creates Keccak-256 hash of the input, alias for keccak(a, 256).\n * @param a The input data (Buffer|Array|String|Number)\n */\nexports.keccak256 = function (a) {\n    return exports.keccak(a);\n};\n/**\n * Creates SHA256 hash of the input.\n * @param a The input data (Buffer|Array|String|Number)\n */\nexports.sha256 = function (a) {\n    a = bytes_1.toBuffer(a);\n    return createHash('sha256')\n        .update(a)\n        .digest();\n};\n/**\n * Creates RIPEMD160 hash of the input.\n * @param a The input data (Buffer|Array|String|Number)\n * @param padded Whether it should be padded to 256 bits or not\n */\nexports.ripemd160 = function (a, padded) {\n    a = bytes_1.toBuffer(a);\n    var hash = createHash('rmd160')\n        .update(a)\n        .digest();\n    if (padded === true) {\n        return bytes_1.setLength(hash, 32);\n    }\n    else {\n        return hash;\n    }\n};\n/**\n * Creates SHA-3 hash of the RLP encoded version of the input.\n * @param a The input data\n */\nexports.rlphash = function (a) {\n    return exports.keccak(rlp.encode(a));\n};\n//# sourceMappingURL=hash.js.map","'use strict'\nconst Buffer = require('safe-buffer').Buffer\nconst keccakState = require('./keccak-state-unroll')\n\nfunction Keccak () {\n  // much faster than `new Array(50)`\n  this.state = [\n    0, 0, 0, 0, 0,\n    0, 0, 0, 0, 0,\n    0, 0, 0, 0, 0,\n    0, 0, 0, 0, 0,\n    0, 0, 0, 0, 0\n  ]\n\n  this.blockSize = null\n  this.count = 0\n  this.squeezing = false\n}\n\nKeccak.prototype.initialize = function (rate, capacity) {\n  for (let i = 0; i < 50; ++i) this.state[i] = 0\n  this.blockSize = rate / 8\n  this.count = 0\n  this.squeezing = false\n}\n\nKeccak.prototype.absorb = function (data) {\n  for (let i = 0; i < data.length; ++i) {\n    this.state[~~(this.count / 4)] ^= data[i] << (8 * (this.count % 4))\n    this.count += 1\n    if (this.count === this.blockSize) {\n      keccakState.p1600(this.state)\n      this.count = 0\n    }\n  }\n}\n\nKeccak.prototype.absorbLastFewBits = function (bits) {\n  this.state[~~(this.count / 4)] ^= bits << (8 * (this.count % 4))\n  if ((bits & 0x80) !== 0 && this.count === (this.blockSize - 1)) keccakState.p1600(this.state)\n  this.state[~~((this.blockSize - 1) / 4)] ^= 0x80 << (8 * ((this.blockSize - 1) % 4))\n  keccakState.p1600(this.state)\n  this.count = 0\n  this.squeezing = true\n}\n\nKeccak.prototype.squeeze = function (length) {\n  if (!this.squeezing) this.absorbLastFewBits(0x01)\n\n  const output = Buffer.alloc(length)\n  for (var i = 0; i < length; ++i) {\n    output[i] = (this.state[~~(this.count / 4)] >>> (8 * (this.count % 4))) & 0xff\n    this.count += 1\n    if (this.count === this.blockSize) {\n      keccakState.p1600(this.state)\n      this.count = 0\n    }\n  }\n\n  return output\n}\n\nKeccak.prototype.copy = function (dest) {\n  for (let i = 0; i < 50; ++i) dest.state[i] = this.state[i]\n  dest.blockSize = this.blockSize\n  dest.count = this.count\n  dest.squeezing = this.squeezing\n}\n\nmodule.exports = Keccak\n","\"use strict\";\nvar __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar chains_1 = require(\"./chains\");\nvar hardforks_1 = require(\"./hardforks\");\n/**\n * Common class to access chain and hardfork parameters\n */\nvar Common = /** @class */ (function () {\n    /**\n     * @constructor\n     * @param chain String ('mainnet') or Number (1) chain\n     * @param hardfork String identifier ('byzantium') for hardfork (optional)\n     * @param supportedHardforks Limit parameter returns to the given hardforks (optional)\n     */\n    function Common(chain, hardfork, supportedHardforks) {\n        this._chainParams = this.setChain(chain);\n        this._hardfork = null;\n        this._supportedHardforks = supportedHardforks === undefined ? [] : supportedHardforks;\n        if (hardfork) {\n            this.setHardfork(hardfork);\n        }\n    }\n    /**\n     * Creates a Common object for a custom chain, based on a standard one. It uses all the [[Chain]]\n     * params from [[baseChain]] except the ones overridden in [[customChainParams]].\n     *\n     * @param baseChain The name (`mainnet`) or id (`1`) of a standard chain used to base the custom\n     * chain params on.\n     * @param customChainParams The custom parameters of the chain.\n     * @param hardfork String identifier ('byzantium') for hardfork (optional)\n     * @param supportedHardforks Limit parameter returns to the given hardforks (optional)\n     */\n    Common.forCustomChain = function (baseChain, customChainParams, hardfork, supportedHardforks) {\n        var standardChainParams = Common._getChainParams(baseChain);\n        return new Common(__assign(__assign({}, standardChainParams), customChainParams), hardfork, supportedHardforks);\n    };\n    Common._getChainParams = function (chain) {\n        if (typeof chain === 'number') {\n            if (chains_1.chains['names'][chain]) {\n                return chains_1.chains[chains_1.chains['names'][chain]];\n            }\n            throw new Error(\"Chain with ID \" + chain + \" not supported\");\n        }\n        if (chains_1.chains[chain]) {\n            return chains_1.chains[chain];\n        }\n        throw new Error(\"Chain with name \" + chain + \" not supported\");\n    };\n    /**\n     * Sets the chain\n     * @param chain String ('mainnet') or Number (1) chain\n     *     representation. Or, a Dictionary of chain parameters for a private network.\n     * @returns The dictionary with parameters set as chain\n     */\n    Common.prototype.setChain = function (chain) {\n        if (typeof chain === 'number' || typeof chain === 'string') {\n            this._chainParams = Common._getChainParams(chain);\n        }\n        else if (typeof chain === 'object') {\n            var required = ['networkId', 'genesis', 'hardforks', 'bootstrapNodes'];\n            for (var _i = 0, required_1 = required; _i < required_1.length; _i++) {\n                var param = required_1[_i];\n                if (chain[param] === undefined) {\n                    throw new Error(\"Missing required chain parameter: \" + param);\n                }\n            }\n            this._chainParams = chain;\n        }\n        else {\n            throw new Error('Wrong input format');\n        }\n        return this._chainParams;\n    };\n    /**\n     * Sets the hardfork to get params for\n     * @param hardfork String identifier ('byzantium')\n     */\n    Common.prototype.setHardfork = function (hardfork) {\n        if (!this._isSupportedHardfork(hardfork)) {\n            throw new Error(\"Hardfork \" + hardfork + \" not set as supported in supportedHardforks\");\n        }\n        var changed = false;\n        for (var _i = 0, hardforkChanges_1 = hardforks_1.hardforks; _i < hardforkChanges_1.length; _i++) {\n            var hfChanges = hardforkChanges_1[_i];\n            if (hfChanges[0] === hardfork) {\n                this._hardfork = hardfork;\n                changed = true;\n            }\n        }\n        if (!changed) {\n            throw new Error(\"Hardfork with name \" + hardfork + \" not supported\");\n        }\n    };\n    /**\n     * Internal helper function to choose between hardfork set and hardfork provided as param\n     * @param hardfork Hardfork given to function as a parameter\n     * @returns Hardfork chosen to be used\n     */\n    Common.prototype._chooseHardfork = function (hardfork, onlySupported) {\n        onlySupported = onlySupported === undefined ? true : onlySupported;\n        if (!hardfork) {\n            if (!this._hardfork) {\n                throw new Error('Method called with neither a hardfork set nor provided by param');\n            }\n            else {\n                hardfork = this._hardfork;\n            }\n        }\n        else if (onlySupported && !this._isSupportedHardfork(hardfork)) {\n            throw new Error(\"Hardfork \" + hardfork + \" not set as supported in supportedHardforks\");\n        }\n        return hardfork;\n    };\n    /**\n     * Internal helper function, returns the params for the given hardfork for the chain set\n     * @param hardfork Hardfork name\n     * @returns Dictionary with hardfork params\n     */\n    Common.prototype._getHardfork = function (hardfork) {\n        var hfs = this.hardforks();\n        for (var _i = 0, hfs_1 = hfs; _i < hfs_1.length; _i++) {\n            var hf = hfs_1[_i];\n            if (hf['name'] === hardfork)\n                return hf;\n        }\n        throw new Error(\"Hardfork \" + hardfork + \" not defined for chain \" + this.chainName());\n    };\n    /**\n     * Internal helper function to check if a hardfork is set to be supported by the library\n     * @param hardfork Hardfork name\n     * @returns True if hardfork is supported\n     */\n    Common.prototype._isSupportedHardfork = function (hardfork) {\n        if (this._supportedHardforks.length > 0) {\n            for (var _i = 0, _a = this._supportedHardforks; _i < _a.length; _i++) {\n                var supportedHf = _a[_i];\n                if (hardfork === supportedHf)\n                    return true;\n            }\n        }\n        else {\n            return true;\n        }\n        return false;\n    };\n    /**\n     * Returns the parameter corresponding to a hardfork\n     * @param topic Parameter topic ('gasConfig', 'gasPrices', 'vm', 'pow', 'casper', 'sharding')\n     * @param name Parameter name (e.g. 'minGasLimit' for 'gasConfig' topic)\n     * @param hardfork Hardfork name, optional if hardfork set\n     */\n    Common.prototype.param = function (topic, name, hardfork) {\n        hardfork = this._chooseHardfork(hardfork);\n        var value;\n        for (var _i = 0, hardforkChanges_2 = hardforks_1.hardforks; _i < hardforkChanges_2.length; _i++) {\n            var hfChanges = hardforkChanges_2[_i];\n            if (!hfChanges[1][topic]) {\n                throw new Error(\"Topic \" + topic + \" not defined\");\n            }\n            if (hfChanges[1][topic][name] !== undefined) {\n                value = hfChanges[1][topic][name].v;\n            }\n            if (hfChanges[0] === hardfork)\n                break;\n        }\n        if (value === undefined) {\n            throw new Error(topic + \" value for \" + name + \" not found\");\n        }\n        return value;\n    };\n    /**\n     * Returns a parameter for the hardfork active on block number\n     * @param topic Parameter topic\n     * @param name Parameter name\n     * @param blockNumber Block number\n     */\n    Common.prototype.paramByBlock = function (topic, name, blockNumber) {\n        var activeHfs = this.activeHardforks(blockNumber);\n        var hardfork = activeHfs[activeHfs.length - 1]['name'];\n        return this.param(topic, name, hardfork);\n    };\n    /**\n     * Checks if set or provided hardfork is active on block number\n     * @param hardfork Hardfork name or null (for HF set)\n     * @param blockNumber\n     * @param opts Hardfork options (onlyActive unused)\n     * @returns True if HF is active on block number\n     */\n    Common.prototype.hardforkIsActiveOnBlock = function (hardfork, blockNumber, opts) {\n        opts = opts !== undefined ? opts : {};\n        var onlySupported = opts.onlySupported === undefined ? false : opts.onlySupported;\n        hardfork = this._chooseHardfork(hardfork, onlySupported);\n        var hfBlock = this.hardforkBlock(hardfork);\n        if (hfBlock !== null && blockNumber >= hfBlock)\n            return true;\n        return false;\n    };\n    /**\n     * Alias to hardforkIsActiveOnBlock when hardfork is set\n     * @param blockNumber\n     * @param opts Hardfork options (onlyActive unused)\n     * @returns True if HF is active on block number\n     */\n    Common.prototype.activeOnBlock = function (blockNumber, opts) {\n        return this.hardforkIsActiveOnBlock(null, blockNumber, opts);\n    };\n    /**\n     * Sequence based check if given or set HF1 is greater than or equal HF2\n     * @param hardfork1 Hardfork name or null (if set)\n     * @param hardfork2 Hardfork name\n     * @param opts Hardfork options\n     * @returns True if HF1 gte HF2\n     */\n    Common.prototype.hardforkGteHardfork = function (hardfork1, hardfork2, opts) {\n        opts = opts !== undefined ? opts : {};\n        var onlyActive = opts.onlyActive === undefined ? false : opts.onlyActive;\n        hardfork1 = this._chooseHardfork(hardfork1, opts.onlySupported);\n        var hardforks;\n        if (onlyActive) {\n            hardforks = this.activeHardforks(null, opts);\n        }\n        else {\n            hardforks = this.hardforks();\n        }\n        var posHf1 = -1, posHf2 = -1;\n        var index = 0;\n        for (var _i = 0, hardforks_2 = hardforks; _i < hardforks_2.length; _i++) {\n            var hf = hardforks_2[_i];\n            if (hf['name'] === hardfork1)\n                posHf1 = index;\n            if (hf['name'] === hardfork2)\n                posHf2 = index;\n            index += 1;\n        }\n        return posHf1 >= posHf2;\n    };\n    /**\n     * Alias to hardforkGteHardfork when hardfork is set\n     * @param hardfork Hardfork name\n     * @param opts Hardfork options\n     * @returns True if hardfork set is greater than hardfork provided\n     */\n    Common.prototype.gteHardfork = function (hardfork, opts) {\n        return this.hardforkGteHardfork(null, hardfork, opts);\n    };\n    /**\n     * Checks if given or set hardfork is active on the chain\n     * @param hardfork Hardfork name, optional if HF set\n     * @param opts Hardfork options (onlyActive unused)\n     * @returns True if hardfork is active on the chain\n     */\n    Common.prototype.hardforkIsActiveOnChain = function (hardfork, opts) {\n        opts = opts !== undefined ? opts : {};\n        var onlySupported = opts.onlySupported === undefined ? false : opts.onlySupported;\n        hardfork = this._chooseHardfork(hardfork, onlySupported);\n        for (var _i = 0, _a = this.hardforks(); _i < _a.length; _i++) {\n            var hf = _a[_i];\n            if (hf['name'] === hardfork && hf['block'] !== null)\n                return true;\n        }\n        return false;\n    };\n    /**\n     * Returns the active hardfork switches for the current chain\n     * @param blockNumber up to block if provided, otherwise for the whole chain\n     * @param opts Hardfork options (onlyActive unused)\n     * @return Array with hardfork arrays\n     */\n    Common.prototype.activeHardforks = function (blockNumber, opts) {\n        opts = opts !== undefined ? opts : {};\n        var activeHardforks = [];\n        var hfs = this.hardforks();\n        for (var _i = 0, hfs_2 = hfs; _i < hfs_2.length; _i++) {\n            var hf = hfs_2[_i];\n            if (hf['block'] === null)\n                continue;\n            if (blockNumber !== undefined && blockNumber !== null && blockNumber < hf['block'])\n                break;\n            if (opts.onlySupported && !this._isSupportedHardfork(hf['name']))\n                continue;\n            activeHardforks.push(hf);\n        }\n        return activeHardforks;\n    };\n    /**\n     * Returns the latest active hardfork name for chain or block or throws if unavailable\n     * @param blockNumber up to block if provided, otherwise for the whole chain\n     * @param opts Hardfork options (onlyActive unused)\n     * @return Hardfork name\n     */\n    Common.prototype.activeHardfork = function (blockNumber, opts) {\n        opts = opts !== undefined ? opts : {};\n        var activeHardforks = this.activeHardforks(blockNumber, opts);\n        if (activeHardforks.length > 0) {\n            return activeHardforks[activeHardforks.length - 1]['name'];\n        }\n        else {\n            throw new Error(\"No (supported) active hardfork found\");\n        }\n    };\n    /**\n     * Returns the hardfork change block for hardfork provided or set\n     * @param hardfork Hardfork name, optional if HF set\n     * @returns Block number\n     */\n    Common.prototype.hardforkBlock = function (hardfork) {\n        hardfork = this._chooseHardfork(hardfork, false);\n        return this._getHardfork(hardfork)['block'];\n    };\n    /**\n     * True if block number provided is the hardfork (given or set) change block of the current chain\n     * @param blockNumber Number of the block to check\n     * @param hardfork Hardfork name, optional if HF set\n     * @returns True if blockNumber is HF block\n     */\n    Common.prototype.isHardforkBlock = function (blockNumber, hardfork) {\n        hardfork = this._chooseHardfork(hardfork, false);\n        if (this.hardforkBlock(hardfork) === blockNumber) {\n            return true;\n        }\n        else {\n            return false;\n        }\n    };\n    /**\n     * Provide the consensus type for the hardfork set or provided as param\n     * @param hardfork Hardfork name, optional if hardfork set\n     * @returns Consensus type (e.g. 'pow', 'poa')\n     */\n    Common.prototype.consensus = function (hardfork) {\n        hardfork = this._chooseHardfork(hardfork);\n        return this._getHardfork(hardfork)['consensus'];\n    };\n    /**\n     * Provide the finality type for the hardfork set or provided as param\n     * @param {String} hardfork Hardfork name, optional if hardfork set\n     * @returns {String} Finality type (e.g. 'pos', null of no finality)\n     */\n    Common.prototype.finality = function (hardfork) {\n        hardfork = this._chooseHardfork(hardfork);\n        return this._getHardfork(hardfork)['finality'];\n    };\n    /**\n     * Returns the Genesis parameters of current chain\n     * @returns Genesis dictionary\n     */\n    Common.prototype.genesis = function () {\n        return this._chainParams['genesis'];\n    };\n    /**\n     * Returns the hardforks for current chain\n     * @returns {Array} Array with arrays of hardforks\n     */\n    Common.prototype.hardforks = function () {\n        return this._chainParams['hardforks'];\n    };\n    /**\n     * Returns bootstrap nodes for the current chain\n     * @returns {Dictionary} Dict with bootstrap nodes\n     */\n    Common.prototype.bootstrapNodes = function () {\n        return this._chainParams['bootstrapNodes'];\n    };\n    /**\n     * Returns the hardfork set\n     * @returns Hardfork name\n     */\n    Common.prototype.hardfork = function () {\n        return this._hardfork;\n    };\n    /**\n     * Returns the Id of current chain\n     * @returns chain Id\n     */\n    Common.prototype.chainId = function () {\n        return this._chainParams['chainId'];\n    };\n    /**\n     * Returns the name of current chain\n     * @returns chain name (lower case)\n     */\n    Common.prototype.chainName = function () {\n        return chains_1.chains['names'][this.chainId()] || this._chainParams['name'];\n    };\n    /**\n     * Returns the Id of current network\n     * @returns network Id\n     */\n    Common.prototype.networkId = function () {\n        return this._chainParams['networkId'];\n    };\n    return Common;\n}());\nexports.default = Common;\n//# sourceMappingURL=index.js.map","'use strict'\nconst createKeccak = require('./keccak')\nconst createShake = require('./shake')\n\nmodule.exports = function (KeccakState) {\n  const Keccak = createKeccak(KeccakState)\n  const Shake = createShake(KeccakState)\n\n  return function (algorithm, options) {\n    const hash = typeof algorithm === 'string' ? algorithm.toLowerCase() : algorithm\n    switch (hash) {\n      case 'keccak224': return new Keccak(1152, 448, null, 224, options)\n      case 'keccak256': return new Keccak(1088, 512, null, 256, options)\n      case 'keccak384': return new Keccak(832, 768, null, 384, options)\n      case 'keccak512': return new Keccak(576, 1024, null, 512, options)\n\n      case 'sha3-224': return new Keccak(1152, 448, 0x06, 224, options)\n      case 'sha3-256': return new Keccak(1088, 512, 0x06, 256, options)\n      case 'sha3-384': return new Keccak(832, 768, 0x06, 384, options)\n      case 'sha3-512': return new Keccak(576, 1024, 0x06, 512, options)\n\n      case 'shake128': return new Shake(1344, 256, 0x1f, options)\n      case 'shake256': return new Shake(1088, 512, 0x1f, options)\n\n      default: throw new Error('Invald algorithm: ' + algorithm)\n    }\n  }\n}\n","'use strict'\nconst P1600_ROUND_CONSTANTS = [1, 0, 32898, 0, 32906, 2147483648, 2147516416, 2147483648, 32907, 0, 2147483649, 0, 2147516545, 2147483648, 32777, 2147483648, 138, 0, 136, 0, 2147516425, 0, 2147483658, 0, 2147516555, 0, 139, 2147483648, 32905, 2147483648, 32771, 2147483648, 32770, 2147483648, 128, 2147483648, 32778, 0, 2147483658, 2147483648, 2147516545, 2147483648, 32896, 2147483648, 2147483649, 0, 2147516424, 2147483648]\n\nexports.p1600 = function (s) {\n  for (let round = 0; round < 24; ++round) {\n    // theta\n    const lo0 = s[0] ^ s[10] ^ s[20] ^ s[30] ^ s[40]\n    const hi0 = s[1] ^ s[11] ^ s[21] ^ s[31] ^ s[41]\n    const lo1 = s[2] ^ s[12] ^ s[22] ^ s[32] ^ s[42]\n    const hi1 = s[3] ^ s[13] ^ s[23] ^ s[33] ^ s[43]\n    const lo2 = s[4] ^ s[14] ^ s[24] ^ s[34] ^ s[44]\n    const hi2 = s[5] ^ s[15] ^ s[25] ^ s[35] ^ s[45]\n    const lo3 = s[6] ^ s[16] ^ s[26] ^ s[36] ^ s[46]\n    const hi3 = s[7] ^ s[17] ^ s[27] ^ s[37] ^ s[47]\n    const lo4 = s[8] ^ s[18] ^ s[28] ^ s[38] ^ s[48]\n    const hi4 = s[9] ^ s[19] ^ s[29] ^ s[39] ^ s[49]\n\n    let lo = lo4 ^ (lo1 << 1 | hi1 >>> 31)\n    let hi = hi4 ^ (hi1 << 1 | lo1 >>> 31)\n    const t1slo0 = s[0] ^ lo\n    const t1shi0 = s[1] ^ hi\n    const t1slo5 = s[10] ^ lo\n    const t1shi5 = s[11] ^ hi\n    const t1slo10 = s[20] ^ lo\n    const t1shi10 = s[21] ^ hi\n    const t1slo15 = s[30] ^ lo\n    const t1shi15 = s[31] ^ hi\n    const t1slo20 = s[40] ^ lo\n    const t1shi20 = s[41] ^ hi\n    lo = lo0 ^ (lo2 << 1 | hi2 >>> 31)\n    hi = hi0 ^ (hi2 << 1 | lo2 >>> 31)\n    const t1slo1 = s[2] ^ lo\n    const t1shi1 = s[3] ^ hi\n    const t1slo6 = s[12] ^ lo\n    const t1shi6 = s[13] ^ hi\n    const t1slo11 = s[22] ^ lo\n    const t1shi11 = s[23] ^ hi\n    const t1slo16 = s[32] ^ lo\n    const t1shi16 = s[33] ^ hi\n    const t1slo21 = s[42] ^ lo\n    const t1shi21 = s[43] ^ hi\n    lo = lo1 ^ (lo3 << 1 | hi3 >>> 31)\n    hi = hi1 ^ (hi3 << 1 | lo3 >>> 31)\n    const t1slo2 = s[4] ^ lo\n    const t1shi2 = s[5] ^ hi\n    const t1slo7 = s[14] ^ lo\n    const t1shi7 = s[15] ^ hi\n    const t1slo12 = s[24] ^ lo\n    const t1shi12 = s[25] ^ hi\n    const t1slo17 = s[34] ^ lo\n    const t1shi17 = s[35] ^ hi\n    const t1slo22 = s[44] ^ lo\n    const t1shi22 = s[45] ^ hi\n    lo = lo2 ^ (lo4 << 1 | hi4 >>> 31)\n    hi = hi2 ^ (hi4 << 1 | lo4 >>> 31)\n    const t1slo3 = s[6] ^ lo\n    const t1shi3 = s[7] ^ hi\n    const t1slo8 = s[16] ^ lo\n    const t1shi8 = s[17] ^ hi\n    const t1slo13 = s[26] ^ lo\n    const t1shi13 = s[27] ^ hi\n    const t1slo18 = s[36] ^ lo\n    const t1shi18 = s[37] ^ hi\n    const t1slo23 = s[46] ^ lo\n    const t1shi23 = s[47] ^ hi\n    lo = lo3 ^ (lo0 << 1 | hi0 >>> 31)\n    hi = hi3 ^ (hi0 << 1 | lo0 >>> 31)\n    const t1slo4 = s[8] ^ lo\n    const t1shi4 = s[9] ^ hi\n    const t1slo9 = s[18] ^ lo\n    const t1shi9 = s[19] ^ hi\n    const t1slo14 = s[28] ^ lo\n    const t1shi14 = s[29] ^ hi\n    const t1slo19 = s[38] ^ lo\n    const t1shi19 = s[39] ^ hi\n    const t1slo24 = s[48] ^ lo\n    const t1shi24 = s[49] ^ hi\n\n    // rho & pi\n    const t2slo0 = t1slo0\n    const t2shi0 = t1shi0\n    const t2slo16 = (t1shi5 << 4 | t1slo5 >>> 28)\n    const t2shi16 = (t1slo5 << 4 | t1shi5 >>> 28)\n    const t2slo7 = (t1slo10 << 3 | t1shi10 >>> 29)\n    const t2shi7 = (t1shi10 << 3 | t1slo10 >>> 29)\n    const t2slo23 = (t1shi15 << 9 | t1slo15 >>> 23)\n    const t2shi23 = (t1slo15 << 9 | t1shi15 >>> 23)\n    const t2slo14 = (t1slo20 << 18 | t1shi20 >>> 14)\n    const t2shi14 = (t1shi20 << 18 | t1slo20 >>> 14)\n    const t2slo10 = (t1slo1 << 1 | t1shi1 >>> 31)\n    const t2shi10 = (t1shi1 << 1 | t1slo1 >>> 31)\n    const t2slo1 = (t1shi6 << 12 | t1slo6 >>> 20)\n    const t2shi1 = (t1slo6 << 12 | t1shi6 >>> 20)\n    const t2slo17 = (t1slo11 << 10 | t1shi11 >>> 22)\n    const t2shi17 = (t1shi11 << 10 | t1slo11 >>> 22)\n    const t2slo8 = (t1shi16 << 13 | t1slo16 >>> 19)\n    const t2shi8 = (t1slo16 << 13 | t1shi16 >>> 19)\n    const t2slo24 = (t1slo21 << 2 | t1shi21 >>> 30)\n    const t2shi24 = (t1shi21 << 2 | t1slo21 >>> 30)\n    const t2slo20 = (t1shi2 << 30 | t1slo2 >>> 2)\n    const t2shi20 = (t1slo2 << 30 | t1shi2 >>> 2)\n    const t2slo11 = (t1slo7 << 6 | t1shi7 >>> 26)\n    const t2shi11 = (t1shi7 << 6 | t1slo7 >>> 26)\n    const t2slo2 = (t1shi12 << 11 | t1slo12 >>> 21)\n    const t2shi2 = (t1slo12 << 11 | t1shi12 >>> 21)\n    const t2slo18 = (t1slo17 << 15 | t1shi17 >>> 17)\n    const t2shi18 = (t1shi17 << 15 | t1slo17 >>> 17)\n    const t2slo9 = (t1shi22 << 29 | t1slo22 >>> 3)\n    const t2shi9 = (t1slo22 << 29 | t1shi22 >>> 3)\n    const t2slo5 = (t1slo3 << 28 | t1shi3 >>> 4)\n    const t2shi5 = (t1shi3 << 28 | t1slo3 >>> 4)\n    const t2slo21 = (t1shi8 << 23 | t1slo8 >>> 9)\n    const t2shi21 = (t1slo8 << 23 | t1shi8 >>> 9)\n    const t2slo12 = (t1slo13 << 25 | t1shi13 >>> 7)\n    const t2shi12 = (t1shi13 << 25 | t1slo13 >>> 7)\n    const t2slo3 = (t1slo18 << 21 | t1shi18 >>> 11)\n    const t2shi3 = (t1shi18 << 21 | t1slo18 >>> 11)\n    const t2slo19 = (t1shi23 << 24 | t1slo23 >>> 8)\n    const t2shi19 = (t1slo23 << 24 | t1shi23 >>> 8)\n    const t2slo15 = (t1slo4 << 27 | t1shi4 >>> 5)\n    const t2shi15 = (t1shi4 << 27 | t1slo4 >>> 5)\n    const t2slo6 = (t1slo9 << 20 | t1shi9 >>> 12)\n    const t2shi6 = (t1shi9 << 20 | t1slo9 >>> 12)\n    const t2slo22 = (t1shi14 << 7 | t1slo14 >>> 25)\n    const t2shi22 = (t1slo14 << 7 | t1shi14 >>> 25)\n    const t2slo13 = (t1slo19 << 8 | t1shi19 >>> 24)\n    const t2shi13 = (t1shi19 << 8 | t1slo19 >>> 24)\n    const t2slo4 = (t1slo24 << 14 | t1shi24 >>> 18)\n    const t2shi4 = (t1shi24 << 14 | t1slo24 >>> 18)\n\n    // chi\n    s[0] = t2slo0 ^ (~t2slo1 & t2slo2)\n    s[1] = t2shi0 ^ (~t2shi1 & t2shi2)\n    s[10] = t2slo5 ^ (~t2slo6 & t2slo7)\n    s[11] = t2shi5 ^ (~t2shi6 & t2shi7)\n    s[20] = t2slo10 ^ (~t2slo11 & t2slo12)\n    s[21] = t2shi10 ^ (~t2shi11 & t2shi12)\n    s[30] = t2slo15 ^ (~t2slo16 & t2slo17)\n    s[31] = t2shi15 ^ (~t2shi16 & t2shi17)\n    s[40] = t2slo20 ^ (~t2slo21 & t2slo22)\n    s[41] = t2shi20 ^ (~t2shi21 & t2shi22)\n    s[2] = t2slo1 ^ (~t2slo2 & t2slo3)\n    s[3] = t2shi1 ^ (~t2shi2 & t2shi3)\n    s[12] = t2slo6 ^ (~t2slo7 & t2slo8)\n    s[13] = t2shi6 ^ (~t2shi7 & t2shi8)\n    s[22] = t2slo11 ^ (~t2slo12 & t2slo13)\n    s[23] = t2shi11 ^ (~t2shi12 & t2shi13)\n    s[32] = t2slo16 ^ (~t2slo17 & t2slo18)\n    s[33] = t2shi16 ^ (~t2shi17 & t2shi18)\n    s[42] = t2slo21 ^ (~t2slo22 & t2slo23)\n    s[43] = t2shi21 ^ (~t2shi22 & t2shi23)\n    s[4] = t2slo2 ^ (~t2slo3 & t2slo4)\n    s[5] = t2shi2 ^ (~t2shi3 & t2shi4)\n    s[14] = t2slo7 ^ (~t2slo8 & t2slo9)\n    s[15] = t2shi7 ^ (~t2shi8 & t2shi9)\n    s[24] = t2slo12 ^ (~t2slo13 & t2slo14)\n    s[25] = t2shi12 ^ (~t2shi13 & t2shi14)\n    s[34] = t2slo17 ^ (~t2slo18 & t2slo19)\n    s[35] = t2shi17 ^ (~t2shi18 & t2shi19)\n    s[44] = t2slo22 ^ (~t2slo23 & t2slo24)\n    s[45] = t2shi22 ^ (~t2shi23 & t2shi24)\n    s[6] = t2slo3 ^ (~t2slo4 & t2slo0)\n    s[7] = t2shi3 ^ (~t2shi4 & t2shi0)\n    s[16] = t2slo8 ^ (~t2slo9 & t2slo5)\n    s[17] = t2shi8 ^ (~t2shi9 & t2shi5)\n    s[26] = t2slo13 ^ (~t2slo14 & t2slo10)\n    s[27] = t2shi13 ^ (~t2shi14 & t2shi10)\n    s[36] = t2slo18 ^ (~t2slo19 & t2slo15)\n    s[37] = t2shi18 ^ (~t2shi19 & t2shi15)\n    s[46] = t2slo23 ^ (~t2slo24 & t2slo20)\n    s[47] = t2shi23 ^ (~t2shi24 & t2shi20)\n    s[8] = t2slo4 ^ (~t2slo0 & t2slo1)\n    s[9] = t2shi4 ^ (~t2shi0 & t2shi1)\n    s[18] = t2slo9 ^ (~t2slo5 & t2slo6)\n    s[19] = t2shi9 ^ (~t2shi5 & t2shi6)\n    s[28] = t2slo14 ^ (~t2slo10 & t2slo11)\n    s[29] = t2shi14 ^ (~t2shi10 & t2shi11)\n    s[38] = t2slo19 ^ (~t2slo15 & t2slo16)\n    s[39] = t2shi19 ^ (~t2shi15 & t2shi16)\n    s[48] = t2slo24 ^ (~t2slo20 & t2slo21)\n    s[49] = t2shi24 ^ (~t2shi20 & t2shi21)\n\n    // iota\n    s[0] ^= P1600_ROUND_CONSTANTS[round * 2]\n    s[1] ^= P1600_ROUND_CONSTANTS[round * 2 + 1]\n  }\n}\n","\"use strict\";\nvar __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar ethereumjs_util_1 = require(\"ethereumjs-util\");\nvar ethereumjs_common_1 = require(\"ethereumjs-common\");\nvar buffer_1 = require(\"buffer\");\n// secp256k1n/2\nvar N_DIV_2 = new ethereumjs_util_1.BN('7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a0', 16);\n/**\n * An Ethereum transaction.\n */\nvar Transaction = /** @class */ (function () {\n    /**\n     * Creates a new transaction from an object with its fields' values.\n     *\n     * @param data - A transaction can be initialized with its rlp representation, an array containing\n     * the value of its fields in order, or an object containing them by name.\n     *\n     * @param opts - The transaction's options, used to indicate the chain and hardfork the\n     * transactions belongs to.\n     *\n     * @note Transaction objects implement EIP155 by default. To disable it, use the constructor's\n     * second parameter to set a chain and hardfork before EIP155 activation (i.e. before Spurious\n     * Dragon.)\n     *\n     * @example\n     * ```js\n     * const txData = {\n     *   nonce: '0x00',\n     *   gasPrice: '0x09184e72a000',\n     *   gasLimit: '0x2710',\n     *   to: '0x0000000000000000000000000000000000000000',\n     *   value: '0x00',\n     *   data: '0x7f7465737432000000000000000000000000000000000000000000000000000000600057',\n     *   v: '0x1c',\n     *   r: '0x5e1d3a76fbf824220eafc8c79ad578ad2b67d01b0c2425eb1f1347e8f50882ab',\n     *   s: '0x5bd428537f05f9830e93792f90ea6a3e2d1ee84952dd96edbae9f658f831ab13'\n     * };\n     * const tx = new Transaction(txData);\n     * ```\n     */\n    function Transaction(data, opts) {\n        if (data === void 0) { data = {}; }\n        if (opts === void 0) { opts = {}; }\n        // instantiate Common class instance based on passed options\n        if (opts.common) {\n            if (opts.chain || opts.hardfork) {\n                throw new Error('Instantiation with both opts.common, and opts.chain and opts.hardfork parameter not allowed!');\n            }\n            this._common = opts.common;\n        }\n        else {\n            var chain = opts.chain ? opts.chain : 'mainnet';\n            var hardfork = opts.hardfork ? opts.hardfork : 'petersburg';\n            this._common = new ethereumjs_common_1.default(chain, hardfork);\n        }\n        // Define Properties\n        var fields = [\n            {\n                name: 'nonce',\n                length: 32,\n                allowLess: true,\n                default: new buffer_1.Buffer([]),\n            },\n            {\n                name: 'gasPrice',\n                length: 32,\n                allowLess: true,\n                default: new buffer_1.Buffer([]),\n            },\n            {\n                name: 'gasLimit',\n                alias: 'gas',\n                length: 32,\n                allowLess: true,\n                default: new buffer_1.Buffer([]),\n            },\n            {\n                name: 'to',\n                allowZero: true,\n                length: 20,\n                default: new buffer_1.Buffer([]),\n            },\n            {\n                name: 'value',\n                length: 32,\n                allowLess: true,\n                default: new buffer_1.Buffer([]),\n            },\n            {\n                name: 'data',\n                alias: 'input',\n                allowZero: true,\n                default: new buffer_1.Buffer([]),\n            },\n            {\n                name: 'v',\n                allowZero: true,\n                default: new buffer_1.Buffer([]),\n            },\n            {\n                name: 'r',\n                length: 32,\n                allowZero: true,\n                allowLess: true,\n                default: new buffer_1.Buffer([]),\n            },\n            {\n                name: 's',\n                length: 32,\n                allowZero: true,\n                allowLess: true,\n                default: new buffer_1.Buffer([]),\n            },\n        ];\n        // attached serialize\n        ethereumjs_util_1.defineProperties(this, fields, data);\n        /**\n         * @property {Buffer} from (read only) sender address of this transaction, mathematically derived from other parameters.\n         * @name from\n         * @memberof Transaction\n         */\n        Object.defineProperty(this, 'from', {\n            enumerable: true,\n            configurable: true,\n            get: this.getSenderAddress.bind(this),\n        });\n        this._validateV(this.v);\n        this._overrideVSetterWithValidation();\n    }\n    /**\n     * If the tx's `to` is to the creation address\n     */\n    Transaction.prototype.toCreationAddress = function () {\n        return this.to.toString('hex') === '';\n    };\n    /**\n     * Computes a sha3-256 hash of the serialized tx\n     * @param includeSignature - Whether or not to include the signature\n     */\n    Transaction.prototype.hash = function (includeSignature) {\n        if (includeSignature === void 0) { includeSignature = true; }\n        var items;\n        if (includeSignature) {\n            items = this.raw;\n        }\n        else {\n            if (this._implementsEIP155()) {\n                items = this.raw.slice(0, 6).concat([\n                    ethereumjs_util_1.toBuffer(this.getChainId()),\n                    // TODO: stripping zeros should probably be a responsibility of the rlp module\n                    ethereumjs_util_1.stripZeros(ethereumjs_util_1.toBuffer(0)),\n                    ethereumjs_util_1.stripZeros(ethereumjs_util_1.toBuffer(0)),\n                ]);\n            }\n            else {\n                items = this.raw.slice(0, 6);\n            }\n        }\n        // create hash\n        return ethereumjs_util_1.rlphash(items);\n    };\n    /**\n     * returns chain ID\n     */\n    Transaction.prototype.getChainId = function () {\n        return this._common.chainId();\n    };\n    /**\n     * returns the sender's address\n     */\n    Transaction.prototype.getSenderAddress = function () {\n        if (this._from) {\n            return this._from;\n        }\n        var pubkey = this.getSenderPublicKey();\n        this._from = ethereumjs_util_1.publicToAddress(pubkey);\n        return this._from;\n    };\n    /**\n     * returns the public key of the sender\n     */\n    Transaction.prototype.getSenderPublicKey = function () {\n        if (!this.verifySignature()) {\n            throw new Error('Invalid Signature');\n        }\n        // If the signature was verified successfully the _senderPubKey field is defined\n        return this._senderPubKey;\n    };\n    /**\n     * Determines if the signature is valid\n     */\n    Transaction.prototype.verifySignature = function () {\n        var msgHash = this.hash(false);\n        // All transaction signatures whose s-value is greater than secp256k1n/2 are considered invalid.\n        if (this._common.gteHardfork('homestead') && new ethereumjs_util_1.BN(this.s).cmp(N_DIV_2) === 1) {\n            return false;\n        }\n        try {\n            var v = ethereumjs_util_1.bufferToInt(this.v);\n            var useChainIdWhileRecoveringPubKey = v >= this.getChainId() * 2 + 35 && this._common.gteHardfork('spuriousDragon');\n            this._senderPubKey = ethereumjs_util_1.ecrecover(msgHash, v, this.r, this.s, useChainIdWhileRecoveringPubKey ? this.getChainId() : undefined);\n        }\n        catch (e) {\n            return false;\n        }\n        return !!this._senderPubKey;\n    };\n    /**\n     * sign a transaction with a given private key\n     * @param privateKey - Must be 32 bytes in length\n     */\n    Transaction.prototype.sign = function (privateKey) {\n        // We clear any previous signature before signing it. Otherwise, _implementsEIP155's can give\n        // different results if this tx was already signed.\n        this.v = new buffer_1.Buffer([]);\n        this.s = new buffer_1.Buffer([]);\n        this.r = new buffer_1.Buffer([]);\n        var msgHash = this.hash(false);\n        var sig = ethereumjs_util_1.ecsign(msgHash, privateKey);\n        if (this._implementsEIP155()) {\n            sig.v += this.getChainId() * 2 + 8;\n        }\n        Object.assign(this, sig);\n    };\n    /**\n     * The amount of gas paid for the data in this tx\n     */\n    Transaction.prototype.getDataFee = function () {\n        var data = this.raw[5];\n        var cost = new ethereumjs_util_1.BN(0);\n        for (var i = 0; i < data.length; i++) {\n            data[i] === 0\n                ? cost.iaddn(this._common.param('gasPrices', 'txDataZero'))\n                : cost.iaddn(this._common.param('gasPrices', 'txDataNonZero'));\n        }\n        return cost;\n    };\n    /**\n     * the minimum amount of gas the tx must have (DataFee + TxFee + Creation Fee)\n     */\n    Transaction.prototype.getBaseFee = function () {\n        var fee = this.getDataFee().iaddn(this._common.param('gasPrices', 'tx'));\n        if (this._common.gteHardfork('homestead') && this.toCreationAddress()) {\n            fee.iaddn(this._common.param('gasPrices', 'txCreation'));\n        }\n        return fee;\n    };\n    /**\n     * the up front amount that an account must have for this transaction to be valid\n     */\n    Transaction.prototype.getUpfrontCost = function () {\n        return new ethereumjs_util_1.BN(this.gasLimit).imul(new ethereumjs_util_1.BN(this.gasPrice)).iadd(new ethereumjs_util_1.BN(this.value));\n    };\n    Transaction.prototype.validate = function (stringError) {\n        if (stringError === void 0) { stringError = false; }\n        var errors = [];\n        if (!this.verifySignature()) {\n            errors.push('Invalid Signature');\n        }\n        if (this.getBaseFee().cmp(new ethereumjs_util_1.BN(this.gasLimit)) > 0) {\n            errors.push([\"gas limit is too low. Need at least \" + this.getBaseFee()]);\n        }\n        if (stringError === false) {\n            return errors.length === 0;\n        }\n        else {\n            return errors.join(' ');\n        }\n    };\n    /**\n     * Returns the rlp encoding of the transaction\n     */\n    Transaction.prototype.serialize = function () {\n        // Note: This never gets executed, defineProperties overwrites it.\n        return ethereumjs_util_1.rlp.encode(this.raw);\n    };\n    /**\n     * Returns the transaction in JSON format\n     * @see {@link https://github.com/ethereumjs/ethereumjs-util/blob/master/docs/index.md#defineproperties|ethereumjs-util}\n     */\n    Transaction.prototype.toJSON = function (labels) {\n        if (labels === void 0) { labels = false; }\n        // Note: This never gets executed, defineProperties overwrites it.\n        return {};\n    };\n    Transaction.prototype._validateV = function (v) {\n        if (v === undefined || v.length === 0) {\n            return;\n        }\n        if (!this._common.gteHardfork('spuriousDragon')) {\n            return;\n        }\n        var vInt = ethereumjs_util_1.bufferToInt(v);\n        if (vInt === 27 || vInt === 28) {\n            return;\n        }\n        var isValidEIP155V = vInt === this.getChainId() * 2 + 35 || vInt === this.getChainId() * 2 + 36;\n        if (!isValidEIP155V) {\n            throw new Error(\"Incompatible EIP155-based V \" + vInt + \" and chain id \" + this.getChainId() + \". See the second parameter of the Transaction constructor to set the chain id.\");\n        }\n    };\n    Transaction.prototype._isSigned = function () {\n        return this.v.length > 0 && this.r.length > 0 && this.s.length > 0;\n    };\n    Transaction.prototype._overrideVSetterWithValidation = function () {\n        var _this = this;\n        var vDescriptor = Object.getOwnPropertyDescriptor(this, 'v');\n        Object.defineProperty(this, 'v', __assign({}, vDescriptor, { set: function (v) {\n                if (v !== undefined) {\n                    _this._validateV(ethereumjs_util_1.toBuffer(v));\n                }\n                vDescriptor.set(v);\n            } }));\n    };\n    Transaction.prototype._implementsEIP155 = function () {\n        var onEIP155BlockOrLater = this._common.gteHardfork('spuriousDragon');\n        if (!this._isSigned()) {\n            // We sign with EIP155 all unsigned transactions after spuriousDragon\n            return onEIP155BlockOrLater;\n        }\n        // EIP155 spec:\n        // If block.number >= 2,675,000 and v = CHAIN_ID * 2 + 35 or v = CHAIN_ID * 2 + 36, then when computing\n        // the hash of a transaction for purposes of signing or recovering, instead of hashing only the first six\n        // elements (i.e. nonce, gasprice, startgas, to, value, data), hash nine elements, with v replaced by\n        // CHAIN_ID, r = 0 and s = 0.\n        var v = ethereumjs_util_1.bufferToInt(this.v);\n        var vAndChainIdMeetEIP155Conditions = v === this.getChainId() * 2 + 35 || v === this.getChainId() * 2 + 36;\n        return vAndChainIdMeetEIP155Conditions && onEIP155BlockOrLater;\n    };\n    return Transaction;\n}());\nexports.default = Transaction;\n//# sourceMappingURL=transaction.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar ethjsUtil = require('ethjs-util');\nvar BN = require(\"bn.js\");\n/**\n * Returns a buffer filled with 0s.\n * @param bytes the number of bytes the buffer should be\n */\nexports.zeros = function (bytes) {\n    return Buffer.allocUnsafe(bytes).fill(0);\n};\n/**\n * Left Pads an `Array` or `Buffer` with leading zeros till it has `length` bytes.\n * Or it truncates the beginning if it exceeds.\n * @param msg the value to pad (Buffer|Array)\n * @param length the number of bytes the output should be\n * @param right whether to start padding form the left or right\n * @return (Buffer|Array)\n */\nexports.setLengthLeft = function (msg, length, right) {\n    if (right === void 0) { right = false; }\n    var buf = exports.zeros(length);\n    msg = exports.toBuffer(msg);\n    if (right) {\n        if (msg.length < length) {\n            msg.copy(buf);\n            return buf;\n        }\n        return msg.slice(0, length);\n    }\n    else {\n        if (msg.length < length) {\n            msg.copy(buf, length - msg.length);\n            return buf;\n        }\n        return msg.slice(-length);\n    }\n};\nexports.setLength = exports.setLengthLeft;\n/**\n * Right Pads an `Array` or `Buffer` with leading zeros till it has `length` bytes.\n * Or it truncates the beginning if it exceeds.\n * @param msg the value to pad (Buffer|Array)\n * @param length the number of bytes the output should be\n * @return (Buffer|Array)\n */\nexports.setLengthRight = function (msg, length) {\n    return exports.setLength(msg, length, true);\n};\n/**\n * Trims leading zeros from a `Buffer` or an `Array`.\n * @param a (Buffer|Array|String)\n * @return (Buffer|Array|String)\n */\nexports.unpad = function (a) {\n    a = ethjsUtil.stripHexPrefix(a);\n    var first = a[0];\n    while (a.length > 0 && first.toString() === '0') {\n        a = a.slice(1);\n        first = a[0];\n    }\n    return a;\n};\nexports.stripZeros = exports.unpad;\n/**\n * Attempts to turn a value into a `Buffer`. As input it supports `Buffer`, `String`, `Number`, null/undefined, `BN` and other objects with a `toArray()` method.\n * @param v the value\n */\nexports.toBuffer = function (v) {\n    if (!Buffer.isBuffer(v)) {\n        if (Array.isArray(v)) {\n            v = Buffer.from(v);\n        }\n        else if (typeof v === 'string') {\n            if (ethjsUtil.isHexString(v)) {\n                v = Buffer.from(ethjsUtil.padToEven(ethjsUtil.stripHexPrefix(v)), 'hex');\n            }\n            else {\n                throw new Error(\"Cannot convert string to buffer. toBuffer only supports 0x-prefixed hex strings and this string was given: \" + v);\n            }\n        }\n        else if (typeof v === 'number') {\n            v = ethjsUtil.intToBuffer(v);\n        }\n        else if (v === null || v === undefined) {\n            v = Buffer.allocUnsafe(0);\n        }\n        else if (BN.isBN(v)) {\n            v = v.toArrayLike(Buffer);\n        }\n        else if (v.toArray) {\n            // converts a BN to a Buffer\n            v = Buffer.from(v.toArray());\n        }\n        else {\n            throw new Error('invalid type');\n        }\n    }\n    return v;\n};\n/**\n * Converts a `Buffer` to a `Number`.\n * @param buf `Buffer` object to convert\n * @throws If the input number exceeds 53 bits.\n */\nexports.bufferToInt = function (buf) {\n    return new BN(exports.toBuffer(buf)).toNumber();\n};\n/**\n * Converts a `Buffer` into a `0x`-prefixed hex `String`.\n * @param buf `Buffer` object to convert\n */\nexports.bufferToHex = function (buf) {\n    buf = exports.toBuffer(buf);\n    return '0x' + buf.toString('hex');\n};\n/**\n * Interprets a `Buffer` as a signed integer and returns a `BN`. Assumes 256-bit numbers.\n * @param num Signed integer value\n */\nexports.fromSigned = function (num) {\n    return new BN(num).fromTwos(256);\n};\n/**\n * Converts a `BN` to an unsigned integer and returns it as a `Buffer`. Assumes 256-bit numbers.\n * @param num\n */\nexports.toUnsigned = function (num) {\n    return Buffer.from(num.toTwos(256).toArray());\n};\n/**\n * Adds \"0x\" to a given `String` if it does not already start with \"0x\".\n */\nexports.addHexPrefix = function (str) {\n    if (typeof str !== 'string') {\n        return str;\n    }\n    return ethjsUtil.isHexPrefixed(str) ? str : '0x' + str;\n};\n/**\n * Converts a `Buffer` or `Array` to JSON.\n * @param ba (Buffer|Array)\n * @return (Array|String|null)\n */\nexports.baToJSON = function (ba) {\n    if (Buffer.isBuffer(ba)) {\n        return \"0x\" + ba.toString('hex');\n    }\n    else if (ba instanceof Array) {\n        var array = [];\n        for (var i = 0; i < ba.length; i++) {\n            array.push(exports.baToJSON(ba[i]));\n        }\n        return array;\n    }\n};\n//# sourceMappingURL=bytes.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar assert = require('assert');\nvar ethjsUtil = require('ethjs-util');\nvar secp256k1 = require('secp256k1');\nvar BN = require(\"bn.js\");\nvar bytes_1 = require(\"./bytes\");\nvar hash_1 = require(\"./hash\");\n/**\n * Returns a zero address.\n */\nexports.zeroAddress = function () {\n    var addressLength = 20;\n    var addr = bytes_1.zeros(addressLength);\n    return bytes_1.bufferToHex(addr);\n};\n/**\n * Checks if the address is a valid. Accepts checksummed addresses too.\n */\nexports.isValidAddress = function (address) {\n    return /^0x[0-9a-fA-F]{40}$/.test(address);\n};\n/**\n * Checks if a given address is a zero address.\n */\nexports.isZeroAddress = function (address) {\n    var zeroAddr = exports.zeroAddress();\n    return zeroAddr === bytes_1.addHexPrefix(address);\n};\n/**\n * Returns a checksummed address.\n *\n * If a eip1191ChainId is provided, the chainId will be included in the checksum calculation. This\n * has the effect of checksummed addresses for one chain having invalid checksums for others.\n * For more details, consult EIP-1191.\n *\n * WARNING: Checksums with and without the chainId will differ. As of 2019-06-26, the most commonly\n * used variation in Ethereum was without the chainId. This may change in the future.\n */\nexports.toChecksumAddress = function (address, eip1191ChainId) {\n    address = ethjsUtil.stripHexPrefix(address).toLowerCase();\n    var prefix = eip1191ChainId !== undefined ? eip1191ChainId.toString() + '0x' : '';\n    var hash = hash_1.keccak(prefix + address).toString('hex');\n    var ret = '0x';\n    for (var i = 0; i < address.length; i++) {\n        if (parseInt(hash[i], 16) >= 8) {\n            ret += address[i].toUpperCase();\n        }\n        else {\n            ret += address[i];\n        }\n    }\n    return ret;\n};\n/**\n * Checks if the address is a valid checksummed address.\n *\n * See toChecksumAddress' documentation for details about the eip1191ChainId parameter.\n */\nexports.isValidChecksumAddress = function (address, eip1191ChainId) {\n    return exports.isValidAddress(address) && exports.toChecksumAddress(address, eip1191ChainId) === address;\n};\n/**\n * Generates an address of a newly created contract.\n * @param from The address which is creating this new address\n * @param nonce The nonce of the from account\n */\nexports.generateAddress = function (from, nonce) {\n    from = bytes_1.toBuffer(from);\n    var nonceBN = new BN(nonce);\n    if (nonceBN.isZero()) {\n        // in RLP we want to encode null in the case of zero nonce\n        // read the RLP documentation for an answer if you dare\n        return hash_1.rlphash([from, null]).slice(-20);\n    }\n    // Only take the lower 160bits of the hash\n    return hash_1.rlphash([from, Buffer.from(nonceBN.toArray())]).slice(-20);\n};\n/**\n * Generates an address for a contract created using CREATE2.\n * @param from The address which is creating this new address\n * @param salt A salt\n * @param initCode The init code of the contract being created\n */\nexports.generateAddress2 = function (from, salt, initCode) {\n    var fromBuf = bytes_1.toBuffer(from);\n    var saltBuf = bytes_1.toBuffer(salt);\n    var initCodeBuf = bytes_1.toBuffer(initCode);\n    assert(fromBuf.length === 20);\n    assert(saltBuf.length === 32);\n    var address = hash_1.keccak256(Buffer.concat([Buffer.from('ff', 'hex'), fromBuf, saltBuf, hash_1.keccak256(initCodeBuf)]));\n    return address.slice(-20);\n};\n/**\n * Returns true if the supplied address belongs to a precompiled account (Byzantium).\n */\nexports.isPrecompiled = function (address) {\n    var a = bytes_1.unpad(address);\n    return a.length === 1 && a[0] >= 1 && a[0] <= 8;\n};\n/**\n * Checks if the private key satisfies the rules of the curve secp256k1.\n */\nexports.isValidPrivate = function (privateKey) {\n    return secp256k1.privateKeyVerify(privateKey);\n};\n/**\n * Checks if the public key satisfies the rules of the curve secp256k1\n * and the requirements of Ethereum.\n * @param publicKey The two points of an uncompressed key, unless sanitize is enabled\n * @param sanitize Accept public keys in other formats\n */\nexports.isValidPublic = function (publicKey, sanitize) {\n    if (sanitize === void 0) { sanitize = false; }\n    if (publicKey.length === 64) {\n        // Convert to SEC1 for secp256k1\n        return secp256k1.publicKeyVerify(Buffer.concat([Buffer.from([4]), publicKey]));\n    }\n    if (!sanitize) {\n        return false;\n    }\n    return secp256k1.publicKeyVerify(publicKey);\n};\n/**\n * Returns the ethereum address of a given public key.\n * Accepts \"Ethereum public keys\" and SEC1 encoded keys.\n * @param pubKey The two points of an uncompressed key, unless sanitize is enabled\n * @param sanitize Accept public keys in other formats\n */\nexports.pubToAddress = function (pubKey, sanitize) {\n    if (sanitize === void 0) { sanitize = false; }\n    pubKey = bytes_1.toBuffer(pubKey);\n    if (sanitize && pubKey.length !== 64) {\n        pubKey = secp256k1.publicKeyConvert(pubKey, false).slice(1);\n    }\n    assert(pubKey.length === 64);\n    // Only take the lower 160bits of the hash\n    return hash_1.keccak(pubKey).slice(-20);\n};\nexports.publicToAddress = exports.pubToAddress;\n/**\n * Returns the ethereum address of a given private key.\n * @param privateKey A private key must be 256 bits wide\n */\nexports.privateToAddress = function (privateKey) {\n    return exports.publicToAddress(exports.privateToPublic(privateKey));\n};\n/**\n * Returns the ethereum public key of a given private key.\n * @param privateKey A private key must be 256 bits wide\n */\nexports.privateToPublic = function (privateKey) {\n    privateKey = bytes_1.toBuffer(privateKey);\n    // skip the type flag and use the X, Y points\n    return secp256k1.publicKeyCreate(privateKey, false).slice(1);\n};\n/**\n * Converts a public key to the Ethereum format.\n */\nexports.importPublic = function (publicKey) {\n    publicKey = bytes_1.toBuffer(publicKey);\n    if (publicKey.length !== 64) {\n        publicKey = secp256k1.publicKeyConvert(publicKey, false).slice(1);\n    }\n    return publicKey;\n};\n//# sourceMappingURL=account.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar BN = require(\"bn.js\");\n/**\n * The max integer that this VM can handle\n */\nexports.MAX_INTEGER = new BN('ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff', 16);\n/**\n * 2^256\n */\nexports.TWO_POW256 = new BN('10000000000000000000000000000000000000000000000000000000000000000', 16);\n/**\n * Keccak-256 hash of null\n */\nexports.KECCAK256_NULL_S = 'c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470';\n/**\n * Keccak-256 hash of null\n */\nexports.KECCAK256_NULL = Buffer.from(exports.KECCAK256_NULL_S, 'hex');\n/**\n * Keccak-256 of an RLP of an empty array\n */\nexports.KECCAK256_RLP_ARRAY_S = '1dcc4de8dec75d7aab85b567b6ccd41ad312451b948a7413f0a142fd40d49347';\n/**\n * Keccak-256 of an RLP of an empty array\n */\nexports.KECCAK256_RLP_ARRAY = Buffer.from(exports.KECCAK256_RLP_ARRAY_S, 'hex');\n/**\n * Keccak-256 hash of the RLP of null\n */\nexports.KECCAK256_RLP_S = '56e81f171bcc55a6ff8345e692c0f86e5b48e01b996cadc001622fb5e363b421';\n/**\n * Keccak-256 hash of the RLP of null\n */\nexports.KECCAK256_RLP = Buffer.from(exports.KECCAK256_RLP_S, 'hex');\n//# sourceMappingURL=constants.js.map"],"sourceRoot":""}