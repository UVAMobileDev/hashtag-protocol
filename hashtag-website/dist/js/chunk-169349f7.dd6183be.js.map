{"version":3,"sources":["webpack:///./node_modules/bnc-onboard/node_modules/keccak/js.js","webpack:///./node_modules/bnc-onboard/node_modules/keccak/node_modules/safe-buffer/index.js","webpack:///./node_modules/bnc-onboard/node_modules/ethereumjs-util/dist/object.js","webpack:///./node_modules/bnc-onboard/node_modules/keccak/lib/api/keccak.js","webpack:///./node_modules/bnc-onboard/node_modules/ethereumjs-util/dist/signature.js","webpack:///./node_modules/bnc-onboard/node_modules/ethereumjs-util/dist/index.js","webpack:///./node_modules/bnc-onboard/node_modules/keccak/lib/api/shake.js","webpack:///./node_modules/bnc-onboard/node_modules/ethereumjs-util/dist/hash.js","webpack:///./node_modules/bnc-onboard/node_modules/keccak/lib/keccak.js","webpack:///./node_modules/bnc-onboard/node_modules/keccak/lib/api/index.js","webpack:///./node_modules/bnc-onboard/node_modules/keccak/lib/keccak-state-unroll.js","webpack:///./node_modules/bnc-onboard/node_modules/ethereumjs-util/dist/bytes.js","webpack:///./node_modules/bnc-onboard/node_modules/ethereumjs-util/dist/account.js","webpack:///./node_modules/bnc-onboard/node_modules/ethereumjs-util/dist/constants.js"],"names":["module","exports","buffer","Buffer","copyProps","src","dst","key","SafeBuffer","arg","encodingOrOffset","length","from","alloc","allocUnsafe","allocUnsafeSlow","prototype","Object","create","TypeError","size","fill","encoding","buf","undefined","SlowBuffer","defineProperty","value","assert","ethjsUtil","rlp","bytes_1","defineProperties","self","fields","data","raw","_fields","toJSON","label","obj_1","forEach","field","toString","baToJSON","serialize","encode","i","getter","setter","v","toBuffer","allowZero","allowLess","stripZeros","name","push","enumerable","configurable","get","set","default","alias","stripHexPrefix","isBuffer","decode","Array","isArray","Error","d","keys_1","keys","indexOf","Transform","inherits","KeccakState","Keccak","rate","capacity","delimitedSuffix","hashBitLength","options","call","this","_rate","_capacity","_delimitedSuffix","_hashBitLength","_options","_state","initialize","_finalized","_transform","chunk","callback","error","update","err","_flush","digest","absorb","absorbLastFewBits","squeeze","_resetState","_clone","clone","copy","secp256k1","BN","hash_1","calculateSigRecovery","chainId","isValidSigRecovery","recovery","ecsign","msgHash","privateKey","sig","sign","ret","r","signature","slice","s","ecrecover","concat","setLength","senderPubKey","recover","publicKeyConvert","toRpcSig","bufferToHex","setLengthLeft","fromRpcSig","isValidSignature","homesteadOrLater","SECP256K1_N_DIV_2","SECP256K1_N","rBN","sBN","isZero","gt","cmp","hashPersonalMessage","message","prefix","keccak","__export","m","p","hasOwnProperty","assign","Shake","_read","dataByteLength","createKeccakHash","createHash","a","bits","isHexString","keccak256","sha256","ripemd160","padded","hash","rlphash","keccakState","state","blockSize","count","squeezing","p1600","output","dest","createKeccak","createShake","algorithm","toLowerCase","P1600_ROUND_CONSTANTS","round","lo0","hi0","lo1","hi1","lo2","hi2","lo3","hi3","lo4","hi4","lo","hi","t1slo0","t1shi0","t1slo5","t1shi5","t1slo10","t1shi10","t1slo15","t1shi15","t1slo20","t1shi20","t1slo1","t1shi1","t1slo6","t1shi6","t1slo11","t1shi11","t1slo16","t1shi16","t1slo21","t1shi21","t1slo2","t1shi2","t1slo7","t1shi7","t1slo12","t1shi12","t1slo17","t1shi17","t1slo22","t1shi22","t1slo3","t1shi3","t1slo8","t1shi8","t1slo13","t1shi13","t1slo18","t1shi18","t1slo23","t1shi23","t1slo4","t1shi4","t1slo9","t1shi9","t1slo14","t1shi14","t1slo19","t1shi19","t1slo24","t1shi24","t2slo0","t2shi0","t2slo16","t2shi16","t2slo7","t2shi7","t2slo23","t2shi23","t2slo14","t2shi14","t2slo10","t2shi10","t2slo1","t2shi1","t2slo17","t2shi17","t2slo8","t2shi8","t2slo24","t2shi24","t2slo20","t2shi20","t2slo11","t2shi11","t2slo2","t2shi2","t2slo18","t2shi18","t2slo9","t2shi9","t2slo5","t2shi5","t2slo21","t2shi21","t2slo12","t2shi12","t2slo3","t2shi3","t2slo19","t2shi19","t2slo15","t2shi15","t2slo6","t2shi6","t2slo22","t2shi22","t2slo13","t2shi13","t2slo4","t2shi4","zeros","bytes","msg","right","setLengthRight","unpad","first","padToEven","intToBuffer","isBN","toArrayLike","toArray","bufferToInt","toNumber","fromSigned","num","fromTwos","toUnsigned","toTwos","addHexPrefix","str","isHexPrefixed","ba","array","zeroAddress","addressLength","addr","isValidAddress","address","test","isZeroAddress","zeroAddr","toChecksumAddress","eip1191ChainId","parseInt","toUpperCase","isValidChecksumAddress","generateAddress","nonce","nonceBN","generateAddress2","salt","initCode","fromBuf","saltBuf","initCodeBuf","isPrecompiled","isValidPrivate","privateKeyVerify","isValidPublic","publicKey","sanitize","publicKeyVerify","pubToAddress","pubKey","publicToAddress","privateToAddress","privateToPublic","publicKeyCreate","importPublic","MAX_INTEGER","TWO_POW256","KECCAK256_NULL_S","KECCAK256_NULL","KECCAK256_RLP_ARRAY_S","KECCAK256_RLP_ARRAY","KECCAK256_RLP_S","KECCAK256_RLP"],"mappings":"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","file":"js/chunk-169349f7.dd6183be.js","sourcesContent":["'use strict'\nmodule.exports = require('./lib/api')(require('./lib/keccak'))\n","/*! safe-buffer. MIT License. Feross Aboukhadijeh <https://feross.org/opensource> */\n/* eslint-disable node/no-deprecated-api */\nvar buffer = require('buffer')\nvar Buffer = buffer.Buffer\n\n// alternative to using Object.keys for old browsers\nfunction copyProps (src, dst) {\n  for (var key in src) {\n    dst[key] = src[key]\n  }\n}\nif (Buffer.from && Buffer.alloc && Buffer.allocUnsafe && Buffer.allocUnsafeSlow) {\n  module.exports = buffer\n} else {\n  // Copy properties from require('buffer')\n  copyProps(buffer, exports)\n  exports.Buffer = SafeBuffer\n}\n\nfunction SafeBuffer (arg, encodingOrOffset, length) {\n  return Buffer(arg, encodingOrOffset, length)\n}\n\nSafeBuffer.prototype = Object.create(Buffer.prototype)\n\n// Copy static methods from Buffer\ncopyProps(Buffer, SafeBuffer)\n\nSafeBuffer.from = function (arg, encodingOrOffset, length) {\n  if (typeof arg === 'number') {\n    throw new TypeError('Argument must not be a number')\n  }\n  return Buffer(arg, encodingOrOffset, length)\n}\n\nSafeBuffer.alloc = function (size, fill, encoding) {\n  if (typeof size !== 'number') {\n    throw new TypeError('Argument must be a number')\n  }\n  var buf = Buffer(size)\n  if (fill !== undefined) {\n    if (typeof encoding === 'string') {\n      buf.fill(fill, encoding)\n    } else {\n      buf.fill(fill)\n    }\n  } else {\n    buf.fill(0)\n  }\n  return buf\n}\n\nSafeBuffer.allocUnsafe = function (size) {\n  if (typeof size !== 'number') {\n    throw new TypeError('Argument must be a number')\n  }\n  return Buffer(size)\n}\n\nSafeBuffer.allocUnsafeSlow = function (size) {\n  if (typeof size !== 'number') {\n    throw new TypeError('Argument must be a number')\n  }\n  return buffer.SlowBuffer(size)\n}\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar assert = require('assert');\nvar ethjsUtil = require('ethjs-util');\nvar rlp = require(\"rlp\");\nvar bytes_1 = require(\"./bytes\");\n/**\n * Defines properties on a `Object`. It make the assumption that underlying data is binary.\n * @param self the `Object` to define properties on\n * @param fields an array fields to define. Fields can contain:\n * * `name` - the name of the properties\n * * `length` - the number of bytes the field can have\n * * `allowLess` - if the field can be less than the length\n * * `allowEmpty`\n * @param data data to be validated against the definitions\n * @deprecated\n */\nexports.defineProperties = function (self, fields, data) {\n    self.raw = [];\n    self._fields = [];\n    // attach the `toJSON`\n    self.toJSON = function (label) {\n        if (label === void 0) { label = false; }\n        if (label) {\n            var obj_1 = {};\n            self._fields.forEach(function (field) {\n                obj_1[field] = \"0x\" + self[field].toString('hex');\n            });\n            return obj_1;\n        }\n        return bytes_1.baToJSON(self.raw);\n    };\n    self.serialize = function serialize() {\n        return rlp.encode(self.raw);\n    };\n    fields.forEach(function (field, i) {\n        self._fields.push(field.name);\n        function getter() {\n            return self.raw[i];\n        }\n        function setter(v) {\n            v = bytes_1.toBuffer(v);\n            if (v.toString('hex') === '00' && !field.allowZero) {\n                v = Buffer.allocUnsafe(0);\n            }\n            if (field.allowLess && field.length) {\n                v = bytes_1.stripZeros(v);\n                assert(field.length >= v.length, \"The field \" + field.name + \" must not have more \" + field.length + \" bytes\");\n            }\n            else if (!(field.allowZero && v.length === 0) && field.length) {\n                assert(field.length === v.length, \"The field \" + field.name + \" must have byte length of \" + field.length);\n            }\n            self.raw[i] = v;\n        }\n        Object.defineProperty(self, field.name, {\n            enumerable: true,\n            configurable: true,\n            get: getter,\n            set: setter,\n        });\n        if (field.default) {\n            self[field.name] = field.default;\n        }\n        // attach alias\n        if (field.alias) {\n            Object.defineProperty(self, field.alias, {\n                enumerable: false,\n                configurable: true,\n                set: setter,\n                get: getter,\n            });\n        }\n    });\n    // if the constuctor is passed data\n    if (data) {\n        if (typeof data === 'string') {\n            data = Buffer.from(ethjsUtil.stripHexPrefix(data), 'hex');\n        }\n        if (Buffer.isBuffer(data)) {\n            data = rlp.decode(data);\n        }\n        if (Array.isArray(data)) {\n            if (data.length > self._fields.length) {\n                throw new Error('wrong number of fields in data');\n            }\n            // make sure all the items are buffers\n            data.forEach(function (d, i) {\n                self[self._fields[i]] = bytes_1.toBuffer(d);\n            });\n        }\n        else if (typeof data === 'object') {\n            var keys_1 = Object.keys(data);\n            fields.forEach(function (field) {\n                if (keys_1.indexOf(field.name) !== -1)\n                    self[field.name] = data[field.name];\n                if (keys_1.indexOf(field.alias) !== -1)\n                    self[field.alias] = data[field.alias];\n            });\n        }\n        else {\n            throw new Error('invalid data');\n        }\n    }\n};\n//# sourceMappingURL=object.js.map","'use strict'\nconst Buffer = require('safe-buffer').Buffer\nconst Transform = require('stream').Transform\nconst inherits = require('inherits')\n\nmodule.exports = function (KeccakState) {\n  function Keccak (rate, capacity, delimitedSuffix, hashBitLength, options) {\n    Transform.call(this, options)\n\n    this._rate = rate\n    this._capacity = capacity\n    this._delimitedSuffix = delimitedSuffix\n    this._hashBitLength = hashBitLength\n    this._options = options\n\n    this._state = new KeccakState()\n    this._state.initialize(rate, capacity)\n    this._finalized = false\n  }\n\n  inherits(Keccak, Transform)\n\n  Keccak.prototype._transform = function (chunk, encoding, callback) {\n    let error = null\n    try {\n      this.update(chunk, encoding)\n    } catch (err) {\n      error = err\n    }\n\n    callback(error)\n  }\n\n  Keccak.prototype._flush = function (callback) {\n    let error = null\n    try {\n      this.push(this.digest())\n    } catch (err) {\n      error = err\n    }\n\n    callback(error)\n  }\n\n  Keccak.prototype.update = function (data, encoding) {\n    if (!Buffer.isBuffer(data) && typeof data !== 'string') throw new TypeError('Data must be a string or a buffer')\n    if (this._finalized) throw new Error('Digest already called')\n    if (!Buffer.isBuffer(data)) data = Buffer.from(data, encoding)\n\n    this._state.absorb(data)\n\n    return this\n  }\n\n  Keccak.prototype.digest = function (encoding) {\n    if (this._finalized) throw new Error('Digest already called')\n    this._finalized = true\n\n    if (this._delimitedSuffix) this._state.absorbLastFewBits(this._delimitedSuffix)\n    let digest = this._state.squeeze(this._hashBitLength / 8)\n    if (encoding !== undefined) digest = digest.toString(encoding)\n\n    this._resetState()\n\n    return digest\n  }\n\n  // remove result from memory\n  Keccak.prototype._resetState = function () {\n    this._state.initialize(this._rate, this._capacity)\n    return this\n  }\n\n  // because sometimes we need hash right now and little later\n  Keccak.prototype._clone = function () {\n    const clone = new Keccak(this._rate, this._capacity, this._delimitedSuffix, this._hashBitLength, this._options)\n    this._state.copy(clone._state)\n    clone._finalized = this._finalized\n\n    return clone\n  }\n\n  return Keccak\n}\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar secp256k1 = require('secp256k1');\nvar BN = require(\"bn.js\");\nvar bytes_1 = require(\"./bytes\");\nvar hash_1 = require(\"./hash\");\n/**\n * Returns the ECDSA signature of a message hash.\n */\nexports.ecsign = function (msgHash, privateKey, chainId) {\n    var sig = secp256k1.sign(msgHash, privateKey);\n    var recovery = sig.recovery;\n    var ret = {\n        r: sig.signature.slice(0, 32),\n        s: sig.signature.slice(32, 64),\n        v: chainId ? recovery + (chainId * 2 + 35) : recovery + 27,\n    };\n    return ret;\n};\n/**\n * ECDSA public key recovery from signature.\n * @returns Recovered public key\n */\nexports.ecrecover = function (msgHash, v, r, s, chainId) {\n    var signature = Buffer.concat([bytes_1.setLength(r, 32), bytes_1.setLength(s, 32)], 64);\n    var recovery = calculateSigRecovery(v, chainId);\n    if (!isValidSigRecovery(recovery)) {\n        throw new Error('Invalid signature v value');\n    }\n    var senderPubKey = secp256k1.recover(msgHash, signature, recovery);\n    return secp256k1.publicKeyConvert(senderPubKey, false).slice(1);\n};\n/**\n * Convert signature parameters into the format of `eth_sign` RPC method.\n * @returns Signature\n */\nexports.toRpcSig = function (v, r, s, chainId) {\n    var recovery = calculateSigRecovery(v, chainId);\n    if (!isValidSigRecovery(recovery)) {\n        throw new Error('Invalid signature v value');\n    }\n    // geth (and the RPC eth_sign method) uses the 65 byte format used by Bitcoin\n    return bytes_1.bufferToHex(Buffer.concat([bytes_1.setLengthLeft(r, 32), bytes_1.setLengthLeft(s, 32), bytes_1.toBuffer(v)]));\n};\n/**\n * Convert signature format of the `eth_sign` RPC method to signature parameters\n * NOTE: all because of a bug in geth: https://github.com/ethereum/go-ethereum/issues/2053\n */\nexports.fromRpcSig = function (sig) {\n    var buf = bytes_1.toBuffer(sig);\n    // NOTE: with potential introduction of chainId this might need to be updated\n    if (buf.length !== 65) {\n        throw new Error('Invalid signature length');\n    }\n    var v = buf[64];\n    // support both versions of `eth_sign` responses\n    if (v < 27) {\n        v += 27;\n    }\n    return {\n        v: v,\n        r: buf.slice(0, 32),\n        s: buf.slice(32, 64),\n    };\n};\n/**\n * Validate a ECDSA signature.\n * @param homesteadOrLater Indicates whether this is being used on either the homestead hardfork or a later one\n */\nexports.isValidSignature = function (v, r, s, homesteadOrLater, chainId) {\n    if (homesteadOrLater === void 0) { homesteadOrLater = true; }\n    var SECP256K1_N_DIV_2 = new BN('7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a0', 16);\n    var SECP256K1_N = new BN('fffffffffffffffffffffffffffffffebaaedce6af48a03bbfd25e8cd0364141', 16);\n    if (r.length !== 32 || s.length !== 32) {\n        return false;\n    }\n    if (!isValidSigRecovery(calculateSigRecovery(v, chainId))) {\n        return false;\n    }\n    var rBN = new BN(r);\n    var sBN = new BN(s);\n    if (rBN.isZero() || rBN.gt(SECP256K1_N) || sBN.isZero() || sBN.gt(SECP256K1_N)) {\n        return false;\n    }\n    if (homesteadOrLater && sBN.cmp(SECP256K1_N_DIV_2) === 1) {\n        return false;\n    }\n    return true;\n};\n/**\n * Returns the keccak-256 hash of `message`, prefixed with the header used by the `eth_sign` RPC call.\n * The output of this function can be fed into `ecsign` to produce the same signature as the `eth_sign`\n * call for a given `message`, or fed to `ecrecover` along with a signature to recover the public key\n * used to produce the signature.\n */\nexports.hashPersonalMessage = function (message) {\n    var prefix = Buffer.from(\"\\u0019Ethereum Signed Message:\\n\" + message.length.toString(), 'utf-8');\n    return hash_1.keccak(Buffer.concat([prefix, message]));\n};\nfunction calculateSigRecovery(v, chainId) {\n    return chainId ? v - (2 * chainId + 35) : v - 27;\n}\nfunction isValidSigRecovery(recovery) {\n    return recovery === 0 || recovery === 1;\n}\n//# sourceMappingURL=signature.js.map","\"use strict\";\nfunction __export(m) {\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\n}\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar secp256k1 = require('secp256k1');\nexports.secp256k1 = secp256k1;\nvar ethjsUtil = require('ethjs-util');\nvar BN = require(\"bn.js\");\nexports.BN = BN;\nvar rlp = require(\"rlp\");\nexports.rlp = rlp;\nObject.assign(exports, ethjsUtil);\n/**\n * Constants\n */\n__export(require(\"./constants\"));\n/**\n * Public-key cryptography (secp256k1) and addresses\n */\n__export(require(\"./account\"));\n/**\n * Hash functions\n */\n__export(require(\"./hash\"));\n/**\n * ECDSA signature\n */\n__export(require(\"./signature\"));\n/**\n * Utilities for manipulating Buffers, byte arrays, etc.\n */\n__export(require(\"./bytes\"));\n/**\n * Function for definining properties on an object\n */\n__export(require(\"./object\"));\n//# sourceMappingURL=index.js.map","'use strict'\nconst Buffer = require('safe-buffer').Buffer\nconst Transform = require('stream').Transform\nconst inherits = require('inherits')\n\nmodule.exports = function (KeccakState) {\n  function Shake (rate, capacity, delimitedSuffix, options) {\n    Transform.call(this, options)\n\n    this._rate = rate\n    this._capacity = capacity\n    this._delimitedSuffix = delimitedSuffix\n    this._options = options\n\n    this._state = new KeccakState()\n    this._state.initialize(rate, capacity)\n    this._finalized = false\n  }\n\n  inherits(Shake, Transform)\n\n  Shake.prototype._transform = function (chunk, encoding, callback) {\n    let error = null\n    try {\n      this.update(chunk, encoding)\n    } catch (err) {\n      error = err\n    }\n\n    callback(error)\n  }\n\n  Shake.prototype._flush = function () {}\n\n  Shake.prototype._read = function (size) {\n    this.push(this.squeeze(size))\n  }\n\n  Shake.prototype.update = function (data, encoding) {\n    if (!Buffer.isBuffer(data) && typeof data !== 'string') throw new TypeError('Data must be a string or a buffer')\n    if (this._finalized) throw new Error('Squeeze already called')\n    if (!Buffer.isBuffer(data)) data = Buffer.from(data, encoding)\n\n    this._state.absorb(data)\n\n    return this\n  }\n\n  Shake.prototype.squeeze = function (dataByteLength, encoding) {\n    if (!this._finalized) {\n      this._finalized = true\n      this._state.absorbLastFewBits(this._delimitedSuffix)\n    }\n\n    let data = this._state.squeeze(dataByteLength)\n    if (encoding !== undefined) data = data.toString(encoding)\n\n    return data\n  }\n\n  Shake.prototype._resetState = function () {\n    this._state.initialize(this._rate, this._capacity)\n    return this\n  }\n\n  Shake.prototype._clone = function () {\n    const clone = new Shake(this._rate, this._capacity, this._delimitedSuffix, this._options)\n    this._state.copy(clone._state)\n    clone._finalized = this._finalized\n\n    return clone\n  }\n\n  return Shake\n}\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar createKeccakHash = require('keccak');\nvar createHash = require('create-hash');\nvar ethjsUtil = require('ethjs-util');\nvar rlp = require(\"rlp\");\nvar bytes_1 = require(\"./bytes\");\n/**\n * Creates Keccak hash of the input\n * @param a The input data (Buffer|Array|String|Number) If the string is a 0x-prefixed hex value\n * it's interpreted as hexadecimal, otherwise as utf8.\n * @param bits The Keccak width\n */\nexports.keccak = function (a, bits) {\n    if (bits === void 0) { bits = 256; }\n    if (typeof a === 'string' && !ethjsUtil.isHexString(a)) {\n        a = Buffer.from(a, 'utf8');\n    }\n    else {\n        a = bytes_1.toBuffer(a);\n    }\n    if (!bits)\n        bits = 256;\n    return createKeccakHash(\"keccak\" + bits)\n        .update(a)\n        .digest();\n};\n/**\n * Creates Keccak-256 hash of the input, alias for keccak(a, 256).\n * @param a The input data (Buffer|Array|String|Number)\n */\nexports.keccak256 = function (a) {\n    return exports.keccak(a);\n};\n/**\n * Creates SHA256 hash of the input.\n * @param a The input data (Buffer|Array|String|Number)\n */\nexports.sha256 = function (a) {\n    a = bytes_1.toBuffer(a);\n    return createHash('sha256')\n        .update(a)\n        .digest();\n};\n/**\n * Creates RIPEMD160 hash of the input.\n * @param a The input data (Buffer|Array|String|Number)\n * @param padded Whether it should be padded to 256 bits or not\n */\nexports.ripemd160 = function (a, padded) {\n    a = bytes_1.toBuffer(a);\n    var hash = createHash('rmd160')\n        .update(a)\n        .digest();\n    if (padded === true) {\n        return bytes_1.setLength(hash, 32);\n    }\n    else {\n        return hash;\n    }\n};\n/**\n * Creates SHA-3 hash of the RLP encoded version of the input.\n * @param a The input data\n */\nexports.rlphash = function (a) {\n    return exports.keccak(rlp.encode(a));\n};\n//# sourceMappingURL=hash.js.map","'use strict'\nconst Buffer = require('safe-buffer').Buffer\nconst keccakState = require('./keccak-state-unroll')\n\nfunction Keccak () {\n  // much faster than `new Array(50)`\n  this.state = [\n    0, 0, 0, 0, 0,\n    0, 0, 0, 0, 0,\n    0, 0, 0, 0, 0,\n    0, 0, 0, 0, 0,\n    0, 0, 0, 0, 0\n  ]\n\n  this.blockSize = null\n  this.count = 0\n  this.squeezing = false\n}\n\nKeccak.prototype.initialize = function (rate, capacity) {\n  for (let i = 0; i < 50; ++i) this.state[i] = 0\n  this.blockSize = rate / 8\n  this.count = 0\n  this.squeezing = false\n}\n\nKeccak.prototype.absorb = function (data) {\n  for (let i = 0; i < data.length; ++i) {\n    this.state[~~(this.count / 4)] ^= data[i] << (8 * (this.count % 4))\n    this.count += 1\n    if (this.count === this.blockSize) {\n      keccakState.p1600(this.state)\n      this.count = 0\n    }\n  }\n}\n\nKeccak.prototype.absorbLastFewBits = function (bits) {\n  this.state[~~(this.count / 4)] ^= bits << (8 * (this.count % 4))\n  if ((bits & 0x80) !== 0 && this.count === (this.blockSize - 1)) keccakState.p1600(this.state)\n  this.state[~~((this.blockSize - 1) / 4)] ^= 0x80 << (8 * ((this.blockSize - 1) % 4))\n  keccakState.p1600(this.state)\n  this.count = 0\n  this.squeezing = true\n}\n\nKeccak.prototype.squeeze = function (length) {\n  if (!this.squeezing) this.absorbLastFewBits(0x01)\n\n  const output = Buffer.alloc(length)\n  for (var i = 0; i < length; ++i) {\n    output[i] = (this.state[~~(this.count / 4)] >>> (8 * (this.count % 4))) & 0xff\n    this.count += 1\n    if (this.count === this.blockSize) {\n      keccakState.p1600(this.state)\n      this.count = 0\n    }\n  }\n\n  return output\n}\n\nKeccak.prototype.copy = function (dest) {\n  for (let i = 0; i < 50; ++i) dest.state[i] = this.state[i]\n  dest.blockSize = this.blockSize\n  dest.count = this.count\n  dest.squeezing = this.squeezing\n}\n\nmodule.exports = Keccak\n","'use strict'\nconst createKeccak = require('./keccak')\nconst createShake = require('./shake')\n\nmodule.exports = function (KeccakState) {\n  const Keccak = createKeccak(KeccakState)\n  const Shake = createShake(KeccakState)\n\n  return function (algorithm, options) {\n    const hash = typeof algorithm === 'string' ? algorithm.toLowerCase() : algorithm\n    switch (hash) {\n      case 'keccak224': return new Keccak(1152, 448, null, 224, options)\n      case 'keccak256': return new Keccak(1088, 512, null, 256, options)\n      case 'keccak384': return new Keccak(832, 768, null, 384, options)\n      case 'keccak512': return new Keccak(576, 1024, null, 512, options)\n\n      case 'sha3-224': return new Keccak(1152, 448, 0x06, 224, options)\n      case 'sha3-256': return new Keccak(1088, 512, 0x06, 256, options)\n      case 'sha3-384': return new Keccak(832, 768, 0x06, 384, options)\n      case 'sha3-512': return new Keccak(576, 1024, 0x06, 512, options)\n\n      case 'shake128': return new Shake(1344, 256, 0x1f, options)\n      case 'shake256': return new Shake(1088, 512, 0x1f, options)\n\n      default: throw new Error('Invald algorithm: ' + algorithm)\n    }\n  }\n}\n","'use strict'\nconst P1600_ROUND_CONSTANTS = [1, 0, 32898, 0, 32906, 2147483648, 2147516416, 2147483648, 32907, 0, 2147483649, 0, 2147516545, 2147483648, 32777, 2147483648, 138, 0, 136, 0, 2147516425, 0, 2147483658, 0, 2147516555, 0, 139, 2147483648, 32905, 2147483648, 32771, 2147483648, 32770, 2147483648, 128, 2147483648, 32778, 0, 2147483658, 2147483648, 2147516545, 2147483648, 32896, 2147483648, 2147483649, 0, 2147516424, 2147483648]\n\nexports.p1600 = function (s) {\n  for (let round = 0; round < 24; ++round) {\n    // theta\n    const lo0 = s[0] ^ s[10] ^ s[20] ^ s[30] ^ s[40]\n    const hi0 = s[1] ^ s[11] ^ s[21] ^ s[31] ^ s[41]\n    const lo1 = s[2] ^ s[12] ^ s[22] ^ s[32] ^ s[42]\n    const hi1 = s[3] ^ s[13] ^ s[23] ^ s[33] ^ s[43]\n    const lo2 = s[4] ^ s[14] ^ s[24] ^ s[34] ^ s[44]\n    const hi2 = s[5] ^ s[15] ^ s[25] ^ s[35] ^ s[45]\n    const lo3 = s[6] ^ s[16] ^ s[26] ^ s[36] ^ s[46]\n    const hi3 = s[7] ^ s[17] ^ s[27] ^ s[37] ^ s[47]\n    const lo4 = s[8] ^ s[18] ^ s[28] ^ s[38] ^ s[48]\n    const hi4 = s[9] ^ s[19] ^ s[29] ^ s[39] ^ s[49]\n\n    let lo = lo4 ^ (lo1 << 1 | hi1 >>> 31)\n    let hi = hi4 ^ (hi1 << 1 | lo1 >>> 31)\n    const t1slo0 = s[0] ^ lo\n    const t1shi0 = s[1] ^ hi\n    const t1slo5 = s[10] ^ lo\n    const t1shi5 = s[11] ^ hi\n    const t1slo10 = s[20] ^ lo\n    const t1shi10 = s[21] ^ hi\n    const t1slo15 = s[30] ^ lo\n    const t1shi15 = s[31] ^ hi\n    const t1slo20 = s[40] ^ lo\n    const t1shi20 = s[41] ^ hi\n    lo = lo0 ^ (lo2 << 1 | hi2 >>> 31)\n    hi = hi0 ^ (hi2 << 1 | lo2 >>> 31)\n    const t1slo1 = s[2] ^ lo\n    const t1shi1 = s[3] ^ hi\n    const t1slo6 = s[12] ^ lo\n    const t1shi6 = s[13] ^ hi\n    const t1slo11 = s[22] ^ lo\n    const t1shi11 = s[23] ^ hi\n    const t1slo16 = s[32] ^ lo\n    const t1shi16 = s[33] ^ hi\n    const t1slo21 = s[42] ^ lo\n    const t1shi21 = s[43] ^ hi\n    lo = lo1 ^ (lo3 << 1 | hi3 >>> 31)\n    hi = hi1 ^ (hi3 << 1 | lo3 >>> 31)\n    const t1slo2 = s[4] ^ lo\n    const t1shi2 = s[5] ^ hi\n    const t1slo7 = s[14] ^ lo\n    const t1shi7 = s[15] ^ hi\n    const t1slo12 = s[24] ^ lo\n    const t1shi12 = s[25] ^ hi\n    const t1slo17 = s[34] ^ lo\n    const t1shi17 = s[35] ^ hi\n    const t1slo22 = s[44] ^ lo\n    const t1shi22 = s[45] ^ hi\n    lo = lo2 ^ (lo4 << 1 | hi4 >>> 31)\n    hi = hi2 ^ (hi4 << 1 | lo4 >>> 31)\n    const t1slo3 = s[6] ^ lo\n    const t1shi3 = s[7] ^ hi\n    const t1slo8 = s[16] ^ lo\n    const t1shi8 = s[17] ^ hi\n    const t1slo13 = s[26] ^ lo\n    const t1shi13 = s[27] ^ hi\n    const t1slo18 = s[36] ^ lo\n    const t1shi18 = s[37] ^ hi\n    const t1slo23 = s[46] ^ lo\n    const t1shi23 = s[47] ^ hi\n    lo = lo3 ^ (lo0 << 1 | hi0 >>> 31)\n    hi = hi3 ^ (hi0 << 1 | lo0 >>> 31)\n    const t1slo4 = s[8] ^ lo\n    const t1shi4 = s[9] ^ hi\n    const t1slo9 = s[18] ^ lo\n    const t1shi9 = s[19] ^ hi\n    const t1slo14 = s[28] ^ lo\n    const t1shi14 = s[29] ^ hi\n    const t1slo19 = s[38] ^ lo\n    const t1shi19 = s[39] ^ hi\n    const t1slo24 = s[48] ^ lo\n    const t1shi24 = s[49] ^ hi\n\n    // rho & pi\n    const t2slo0 = t1slo0\n    const t2shi0 = t1shi0\n    const t2slo16 = (t1shi5 << 4 | t1slo5 >>> 28)\n    const t2shi16 = (t1slo5 << 4 | t1shi5 >>> 28)\n    const t2slo7 = (t1slo10 << 3 | t1shi10 >>> 29)\n    const t2shi7 = (t1shi10 << 3 | t1slo10 >>> 29)\n    const t2slo23 = (t1shi15 << 9 | t1slo15 >>> 23)\n    const t2shi23 = (t1slo15 << 9 | t1shi15 >>> 23)\n    const t2slo14 = (t1slo20 << 18 | t1shi20 >>> 14)\n    const t2shi14 = (t1shi20 << 18 | t1slo20 >>> 14)\n    const t2slo10 = (t1slo1 << 1 | t1shi1 >>> 31)\n    const t2shi10 = (t1shi1 << 1 | t1slo1 >>> 31)\n    const t2slo1 = (t1shi6 << 12 | t1slo6 >>> 20)\n    const t2shi1 = (t1slo6 << 12 | t1shi6 >>> 20)\n    const t2slo17 = (t1slo11 << 10 | t1shi11 >>> 22)\n    const t2shi17 = (t1shi11 << 10 | t1slo11 >>> 22)\n    const t2slo8 = (t1shi16 << 13 | t1slo16 >>> 19)\n    const t2shi8 = (t1slo16 << 13 | t1shi16 >>> 19)\n    const t2slo24 = (t1slo21 << 2 | t1shi21 >>> 30)\n    const t2shi24 = (t1shi21 << 2 | t1slo21 >>> 30)\n    const t2slo20 = (t1shi2 << 30 | t1slo2 >>> 2)\n    const t2shi20 = (t1slo2 << 30 | t1shi2 >>> 2)\n    const t2slo11 = (t1slo7 << 6 | t1shi7 >>> 26)\n    const t2shi11 = (t1shi7 << 6 | t1slo7 >>> 26)\n    const t2slo2 = (t1shi12 << 11 | t1slo12 >>> 21)\n    const t2shi2 = (t1slo12 << 11 | t1shi12 >>> 21)\n    const t2slo18 = (t1slo17 << 15 | t1shi17 >>> 17)\n    const t2shi18 = (t1shi17 << 15 | t1slo17 >>> 17)\n    const t2slo9 = (t1shi22 << 29 | t1slo22 >>> 3)\n    const t2shi9 = (t1slo22 << 29 | t1shi22 >>> 3)\n    const t2slo5 = (t1slo3 << 28 | t1shi3 >>> 4)\n    const t2shi5 = (t1shi3 << 28 | t1slo3 >>> 4)\n    const t2slo21 = (t1shi8 << 23 | t1slo8 >>> 9)\n    const t2shi21 = (t1slo8 << 23 | t1shi8 >>> 9)\n    const t2slo12 = (t1slo13 << 25 | t1shi13 >>> 7)\n    const t2shi12 = (t1shi13 << 25 | t1slo13 >>> 7)\n    const t2slo3 = (t1slo18 << 21 | t1shi18 >>> 11)\n    const t2shi3 = (t1shi18 << 21 | t1slo18 >>> 11)\n    const t2slo19 = (t1shi23 << 24 | t1slo23 >>> 8)\n    const t2shi19 = (t1slo23 << 24 | t1shi23 >>> 8)\n    const t2slo15 = (t1slo4 << 27 | t1shi4 >>> 5)\n    const t2shi15 = (t1shi4 << 27 | t1slo4 >>> 5)\n    const t2slo6 = (t1slo9 << 20 | t1shi9 >>> 12)\n    const t2shi6 = (t1shi9 << 20 | t1slo9 >>> 12)\n    const t2slo22 = (t1shi14 << 7 | t1slo14 >>> 25)\n    const t2shi22 = (t1slo14 << 7 | t1shi14 >>> 25)\n    const t2slo13 = (t1slo19 << 8 | t1shi19 >>> 24)\n    const t2shi13 = (t1shi19 << 8 | t1slo19 >>> 24)\n    const t2slo4 = (t1slo24 << 14 | t1shi24 >>> 18)\n    const t2shi4 = (t1shi24 << 14 | t1slo24 >>> 18)\n\n    // chi\n    s[0] = t2slo0 ^ (~t2slo1 & t2slo2)\n    s[1] = t2shi0 ^ (~t2shi1 & t2shi2)\n    s[10] = t2slo5 ^ (~t2slo6 & t2slo7)\n    s[11] = t2shi5 ^ (~t2shi6 & t2shi7)\n    s[20] = t2slo10 ^ (~t2slo11 & t2slo12)\n    s[21] = t2shi10 ^ (~t2shi11 & t2shi12)\n    s[30] = t2slo15 ^ (~t2slo16 & t2slo17)\n    s[31] = t2shi15 ^ (~t2shi16 & t2shi17)\n    s[40] = t2slo20 ^ (~t2slo21 & t2slo22)\n    s[41] = t2shi20 ^ (~t2shi21 & t2shi22)\n    s[2] = t2slo1 ^ (~t2slo2 & t2slo3)\n    s[3] = t2shi1 ^ (~t2shi2 & t2shi3)\n    s[12] = t2slo6 ^ (~t2slo7 & t2slo8)\n    s[13] = t2shi6 ^ (~t2shi7 & t2shi8)\n    s[22] = t2slo11 ^ (~t2slo12 & t2slo13)\n    s[23] = t2shi11 ^ (~t2shi12 & t2shi13)\n    s[32] = t2slo16 ^ (~t2slo17 & t2slo18)\n    s[33] = t2shi16 ^ (~t2shi17 & t2shi18)\n    s[42] = t2slo21 ^ (~t2slo22 & t2slo23)\n    s[43] = t2shi21 ^ (~t2shi22 & t2shi23)\n    s[4] = t2slo2 ^ (~t2slo3 & t2slo4)\n    s[5] = t2shi2 ^ (~t2shi3 & t2shi4)\n    s[14] = t2slo7 ^ (~t2slo8 & t2slo9)\n    s[15] = t2shi7 ^ (~t2shi8 & t2shi9)\n    s[24] = t2slo12 ^ (~t2slo13 & t2slo14)\n    s[25] = t2shi12 ^ (~t2shi13 & t2shi14)\n    s[34] = t2slo17 ^ (~t2slo18 & t2slo19)\n    s[35] = t2shi17 ^ (~t2shi18 & t2shi19)\n    s[44] = t2slo22 ^ (~t2slo23 & t2slo24)\n    s[45] = t2shi22 ^ (~t2shi23 & t2shi24)\n    s[6] = t2slo3 ^ (~t2slo4 & t2slo0)\n    s[7] = t2shi3 ^ (~t2shi4 & t2shi0)\n    s[16] = t2slo8 ^ (~t2slo9 & t2slo5)\n    s[17] = t2shi8 ^ (~t2shi9 & t2shi5)\n    s[26] = t2slo13 ^ (~t2slo14 & t2slo10)\n    s[27] = t2shi13 ^ (~t2shi14 & t2shi10)\n    s[36] = t2slo18 ^ (~t2slo19 & t2slo15)\n    s[37] = t2shi18 ^ (~t2shi19 & t2shi15)\n    s[46] = t2slo23 ^ (~t2slo24 & t2slo20)\n    s[47] = t2shi23 ^ (~t2shi24 & t2shi20)\n    s[8] = t2slo4 ^ (~t2slo0 & t2slo1)\n    s[9] = t2shi4 ^ (~t2shi0 & t2shi1)\n    s[18] = t2slo9 ^ (~t2slo5 & t2slo6)\n    s[19] = t2shi9 ^ (~t2shi5 & t2shi6)\n    s[28] = t2slo14 ^ (~t2slo10 & t2slo11)\n    s[29] = t2shi14 ^ (~t2shi10 & t2shi11)\n    s[38] = t2slo19 ^ (~t2slo15 & t2slo16)\n    s[39] = t2shi19 ^ (~t2shi15 & t2shi16)\n    s[48] = t2slo24 ^ (~t2slo20 & t2slo21)\n    s[49] = t2shi24 ^ (~t2shi20 & t2shi21)\n\n    // iota\n    s[0] ^= P1600_ROUND_CONSTANTS[round * 2]\n    s[1] ^= P1600_ROUND_CONSTANTS[round * 2 + 1]\n  }\n}\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar ethjsUtil = require('ethjs-util');\nvar BN = require(\"bn.js\");\n/**\n * Returns a buffer filled with 0s.\n * @param bytes the number of bytes the buffer should be\n */\nexports.zeros = function (bytes) {\n    return Buffer.allocUnsafe(bytes).fill(0);\n};\n/**\n * Left Pads an `Array` or `Buffer` with leading zeros till it has `length` bytes.\n * Or it truncates the beginning if it exceeds.\n * @param msg the value to pad (Buffer|Array)\n * @param length the number of bytes the output should be\n * @param right whether to start padding form the left or right\n * @return (Buffer|Array)\n */\nexports.setLengthLeft = function (msg, length, right) {\n    if (right === void 0) { right = false; }\n    var buf = exports.zeros(length);\n    msg = exports.toBuffer(msg);\n    if (right) {\n        if (msg.length < length) {\n            msg.copy(buf);\n            return buf;\n        }\n        return msg.slice(0, length);\n    }\n    else {\n        if (msg.length < length) {\n            msg.copy(buf, length - msg.length);\n            return buf;\n        }\n        return msg.slice(-length);\n    }\n};\nexports.setLength = exports.setLengthLeft;\n/**\n * Right Pads an `Array` or `Buffer` with leading zeros till it has `length` bytes.\n * Or it truncates the beginning if it exceeds.\n * @param msg the value to pad (Buffer|Array)\n * @param length the number of bytes the output should be\n * @return (Buffer|Array)\n */\nexports.setLengthRight = function (msg, length) {\n    return exports.setLength(msg, length, true);\n};\n/**\n * Trims leading zeros from a `Buffer` or an `Array`.\n * @param a (Buffer|Array|String)\n * @return (Buffer|Array|String)\n */\nexports.unpad = function (a) {\n    a = ethjsUtil.stripHexPrefix(a);\n    var first = a[0];\n    while (a.length > 0 && first.toString() === '0') {\n        a = a.slice(1);\n        first = a[0];\n    }\n    return a;\n};\nexports.stripZeros = exports.unpad;\n/**\n * Attempts to turn a value into a `Buffer`. As input it supports `Buffer`, `String`, `Number`, null/undefined, `BN` and other objects with a `toArray()` method.\n * @param v the value\n */\nexports.toBuffer = function (v) {\n    if (!Buffer.isBuffer(v)) {\n        if (Array.isArray(v)) {\n            v = Buffer.from(v);\n        }\n        else if (typeof v === 'string') {\n            if (ethjsUtil.isHexString(v)) {\n                v = Buffer.from(ethjsUtil.padToEven(ethjsUtil.stripHexPrefix(v)), 'hex');\n            }\n            else {\n                throw new Error(\"Cannot convert string to buffer. toBuffer only supports 0x-prefixed hex strings and this string was given: \" + v);\n            }\n        }\n        else if (typeof v === 'number') {\n            v = ethjsUtil.intToBuffer(v);\n        }\n        else if (v === null || v === undefined) {\n            v = Buffer.allocUnsafe(0);\n        }\n        else if (BN.isBN(v)) {\n            v = v.toArrayLike(Buffer);\n        }\n        else if (v.toArray) {\n            // converts a BN to a Buffer\n            v = Buffer.from(v.toArray());\n        }\n        else {\n            throw new Error('invalid type');\n        }\n    }\n    return v;\n};\n/**\n * Converts a `Buffer` to a `Number`.\n * @param buf `Buffer` object to convert\n * @throws If the input number exceeds 53 bits.\n */\nexports.bufferToInt = function (buf) {\n    return new BN(exports.toBuffer(buf)).toNumber();\n};\n/**\n * Converts a `Buffer` into a `0x`-prefixed hex `String`.\n * @param buf `Buffer` object to convert\n */\nexports.bufferToHex = function (buf) {\n    buf = exports.toBuffer(buf);\n    return '0x' + buf.toString('hex');\n};\n/**\n * Interprets a `Buffer` as a signed integer and returns a `BN`. Assumes 256-bit numbers.\n * @param num Signed integer value\n */\nexports.fromSigned = function (num) {\n    return new BN(num).fromTwos(256);\n};\n/**\n * Converts a `BN` to an unsigned integer and returns it as a `Buffer`. Assumes 256-bit numbers.\n * @param num\n */\nexports.toUnsigned = function (num) {\n    return Buffer.from(num.toTwos(256).toArray());\n};\n/**\n * Adds \"0x\" to a given `String` if it does not already start with \"0x\".\n */\nexports.addHexPrefix = function (str) {\n    if (typeof str !== 'string') {\n        return str;\n    }\n    return ethjsUtil.isHexPrefixed(str) ? str : '0x' + str;\n};\n/**\n * Converts a `Buffer` or `Array` to JSON.\n * @param ba (Buffer|Array)\n * @return (Array|String|null)\n */\nexports.baToJSON = function (ba) {\n    if (Buffer.isBuffer(ba)) {\n        return \"0x\" + ba.toString('hex');\n    }\n    else if (ba instanceof Array) {\n        var array = [];\n        for (var i = 0; i < ba.length; i++) {\n            array.push(exports.baToJSON(ba[i]));\n        }\n        return array;\n    }\n};\n//# sourceMappingURL=bytes.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar assert = require('assert');\nvar ethjsUtil = require('ethjs-util');\nvar secp256k1 = require('secp256k1');\nvar BN = require(\"bn.js\");\nvar bytes_1 = require(\"./bytes\");\nvar hash_1 = require(\"./hash\");\n/**\n * Returns a zero address.\n */\nexports.zeroAddress = function () {\n    var addressLength = 20;\n    var addr = bytes_1.zeros(addressLength);\n    return bytes_1.bufferToHex(addr);\n};\n/**\n * Checks if the address is a valid. Accepts checksummed addresses too.\n */\nexports.isValidAddress = function (address) {\n    return /^0x[0-9a-fA-F]{40}$/.test(address);\n};\n/**\n * Checks if a given address is a zero address.\n */\nexports.isZeroAddress = function (address) {\n    var zeroAddr = exports.zeroAddress();\n    return zeroAddr === bytes_1.addHexPrefix(address);\n};\n/**\n * Returns a checksummed address.\n *\n * If a eip1191ChainId is provided, the chainId will be included in the checksum calculation. This\n * has the effect of checksummed addresses for one chain having invalid checksums for others.\n * For more details, consult EIP-1191.\n *\n * WARNING: Checksums with and without the chainId will differ. As of 2019-06-26, the most commonly\n * used variation in Ethereum was without the chainId. This may change in the future.\n */\nexports.toChecksumAddress = function (address, eip1191ChainId) {\n    address = ethjsUtil.stripHexPrefix(address).toLowerCase();\n    var prefix = eip1191ChainId !== undefined ? eip1191ChainId.toString() + '0x' : '';\n    var hash = hash_1.keccak(prefix + address).toString('hex');\n    var ret = '0x';\n    for (var i = 0; i < address.length; i++) {\n        if (parseInt(hash[i], 16) >= 8) {\n            ret += address[i].toUpperCase();\n        }\n        else {\n            ret += address[i];\n        }\n    }\n    return ret;\n};\n/**\n * Checks if the address is a valid checksummed address.\n *\n * See toChecksumAddress' documentation for details about the eip1191ChainId parameter.\n */\nexports.isValidChecksumAddress = function (address, eip1191ChainId) {\n    return exports.isValidAddress(address) && exports.toChecksumAddress(address, eip1191ChainId) === address;\n};\n/**\n * Generates an address of a newly created contract.\n * @param from The address which is creating this new address\n * @param nonce The nonce of the from account\n */\nexports.generateAddress = function (from, nonce) {\n    from = bytes_1.toBuffer(from);\n    var nonceBN = new BN(nonce);\n    if (nonceBN.isZero()) {\n        // in RLP we want to encode null in the case of zero nonce\n        // read the RLP documentation for an answer if you dare\n        return hash_1.rlphash([from, null]).slice(-20);\n    }\n    // Only take the lower 160bits of the hash\n    return hash_1.rlphash([from, Buffer.from(nonceBN.toArray())]).slice(-20);\n};\n/**\n * Generates an address for a contract created using CREATE2.\n * @param from The address which is creating this new address\n * @param salt A salt\n * @param initCode The init code of the contract being created\n */\nexports.generateAddress2 = function (from, salt, initCode) {\n    var fromBuf = bytes_1.toBuffer(from);\n    var saltBuf = bytes_1.toBuffer(salt);\n    var initCodeBuf = bytes_1.toBuffer(initCode);\n    assert(fromBuf.length === 20);\n    assert(saltBuf.length === 32);\n    var address = hash_1.keccak256(Buffer.concat([Buffer.from('ff', 'hex'), fromBuf, saltBuf, hash_1.keccak256(initCodeBuf)]));\n    return address.slice(-20);\n};\n/**\n * Returns true if the supplied address belongs to a precompiled account (Byzantium).\n */\nexports.isPrecompiled = function (address) {\n    var a = bytes_1.unpad(address);\n    return a.length === 1 && a[0] >= 1 && a[0] <= 8;\n};\n/**\n * Checks if the private key satisfies the rules of the curve secp256k1.\n */\nexports.isValidPrivate = function (privateKey) {\n    return secp256k1.privateKeyVerify(privateKey);\n};\n/**\n * Checks if the public key satisfies the rules of the curve secp256k1\n * and the requirements of Ethereum.\n * @param publicKey The two points of an uncompressed key, unless sanitize is enabled\n * @param sanitize Accept public keys in other formats\n */\nexports.isValidPublic = function (publicKey, sanitize) {\n    if (sanitize === void 0) { sanitize = false; }\n    if (publicKey.length === 64) {\n        // Convert to SEC1 for secp256k1\n        return secp256k1.publicKeyVerify(Buffer.concat([Buffer.from([4]), publicKey]));\n    }\n    if (!sanitize) {\n        return false;\n    }\n    return secp256k1.publicKeyVerify(publicKey);\n};\n/**\n * Returns the ethereum address of a given public key.\n * Accepts \"Ethereum public keys\" and SEC1 encoded keys.\n * @param pubKey The two points of an uncompressed key, unless sanitize is enabled\n * @param sanitize Accept public keys in other formats\n */\nexports.pubToAddress = function (pubKey, sanitize) {\n    if (sanitize === void 0) { sanitize = false; }\n    pubKey = bytes_1.toBuffer(pubKey);\n    if (sanitize && pubKey.length !== 64) {\n        pubKey = secp256k1.publicKeyConvert(pubKey, false).slice(1);\n    }\n    assert(pubKey.length === 64);\n    // Only take the lower 160bits of the hash\n    return hash_1.keccak(pubKey).slice(-20);\n};\nexports.publicToAddress = exports.pubToAddress;\n/**\n * Returns the ethereum address of a given private key.\n * @param privateKey A private key must be 256 bits wide\n */\nexports.privateToAddress = function (privateKey) {\n    return exports.publicToAddress(exports.privateToPublic(privateKey));\n};\n/**\n * Returns the ethereum public key of a given private key.\n * @param privateKey A private key must be 256 bits wide\n */\nexports.privateToPublic = function (privateKey) {\n    privateKey = bytes_1.toBuffer(privateKey);\n    // skip the type flag and use the X, Y points\n    return secp256k1.publicKeyCreate(privateKey, false).slice(1);\n};\n/**\n * Converts a public key to the Ethereum format.\n */\nexports.importPublic = function (publicKey) {\n    publicKey = bytes_1.toBuffer(publicKey);\n    if (publicKey.length !== 64) {\n        publicKey = secp256k1.publicKeyConvert(publicKey, false).slice(1);\n    }\n    return publicKey;\n};\n//# sourceMappingURL=account.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar BN = require(\"bn.js\");\n/**\n * The max integer that this VM can handle\n */\nexports.MAX_INTEGER = new BN('ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff', 16);\n/**\n * 2^256\n */\nexports.TWO_POW256 = new BN('10000000000000000000000000000000000000000000000000000000000000000', 16);\n/**\n * Keccak-256 hash of null\n */\nexports.KECCAK256_NULL_S = 'c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470';\n/**\n * Keccak-256 hash of null\n */\nexports.KECCAK256_NULL = Buffer.from(exports.KECCAK256_NULL_S, 'hex');\n/**\n * Keccak-256 of an RLP of an empty array\n */\nexports.KECCAK256_RLP_ARRAY_S = '1dcc4de8dec75d7aab85b567b6ccd41ad312451b948a7413f0a142fd40d49347';\n/**\n * Keccak-256 of an RLP of an empty array\n */\nexports.KECCAK256_RLP_ARRAY = Buffer.from(exports.KECCAK256_RLP_ARRAY_S, 'hex');\n/**\n * Keccak-256 hash of the RLP of null\n */\nexports.KECCAK256_RLP_S = '56e81f171bcc55a6ff8345e692c0f86e5b48e01b996cadc001622fb5e363b421';\n/**\n * Keccak-256 hash of the RLP of null\n */\nexports.KECCAK256_RLP = Buffer.from(exports.KECCAK256_RLP_S, 'hex');\n//# sourceMappingURL=constants.js.map"],"sourceRoot":""}