// Environment variable parsing. Do not edit this file directly.
// See .env.example
const appConfig = {
  hashtagSubgraph: parse(
    process.env.VUE_APP_HASHTAG_SUBGRAPH_URL,
    process.env.VUE_APP_HASHTAG_SUBGRAPH_URL_DEV,
    "https://api.thegraph.com/subgraphs/name/hashtag-protocol/hashtag-rinkeby"
  ),
  nftSearchSubgraph: parse(
    process.env.VUE_APP_TOP_NFTS_SUBGRAPH_URL,
    process.env.VUE_APP_TOP_NFTS_SUBGRAPH_URL_DEV,
    "https://api.thegraph.com/subgraphs/name/blockrockettech/nft-tokens"
  ),
  blocknativeApiKey: parse(
    process.env.VUE_APP_BLOCKNATIVE_API_KEY,
    process.env.VUE_APP_BLOCKNATIVE_API_KEY_DEV,
    "371f97ec-05be-429d-b0a6-sample"
  ),
  onboardNetworkID: parse(
    process.env.VUE_APP_ONBOARD_NETWORK_ID,
    process.env.VUE_APP_ONBOARD_NETWORK_ID_DEV,
    4
  ),
  publisherWalletAddress: parse(
    process.env.VUE_APP_PUBLISHER_ADDRESS,
    null,
    "0xF6423a8769292BBeef9335C5A26254C759E3BFBe"
  ),
  localstorageWalletKey: parse(
    process.env.VUE_APP_ONBOARD_LOCALSTORAGE_WALLET_KEY,
    null,
    "SelectedWallet"
  ),
  discordServer: parse(
    process.env.VUE_APP_DISCORD_SERVER,
    null,
    "http://localhost:8081"
  ),

  install(Vue) {
    Vue.prototype.$appConfig = this;
  },
};

function parse(production, development, fallback = null) {
  if (typeof production === "undefined") {
    return fallback;
  }

  // If we are in development mode, and we have a development version of the
  // environment variable, set the config value to development version.
  if (process.env.NODE_ENV === "development" && development != null) {
    production = development;
  }
  switch (typeof fallback) {
    case "boolean":
      return !!JSON.parse(production);
    case "number":
      return JSON.parse(production);
    default:
      return production;
  }
}

export default appConfig;
