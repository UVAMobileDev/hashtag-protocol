{
  "contractName": "ERC721BurnableMock",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "name",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "symbol",
          "type": "string"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "approved",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "Approval",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "operator",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "bool",
          "name": "approved",
          "type": "bool"
        }
      ],
      "name": "ApprovalForAll",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [],
      "name": "baseURI",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "burn",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "getApproved",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "operator",
          "type": "address"
        }
      ],
      "name": "isApprovedForAll",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [],
      "name": "name",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "ownerOf",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "safeTransferFrom",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "_data",
          "type": "bytes"
        }
      ],
      "name": "safeTransferFrom",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "operator",
          "type": "address"
        },
        {
          "internalType": "bool",
          "name": "approved",
          "type": "bool"
        }
      ],
      "name": "setApprovalForAll",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes4",
          "name": "interfaceId",
          "type": "bytes4"
        }
      ],
      "name": "supportsInterface",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [],
      "name": "symbol",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "index",
          "type": "uint256"
        }
      ],
      "name": "tokenByIndex",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "index",
          "type": "uint256"
        }
      ],
      "name": "tokenOfOwnerByIndex",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [],
      "name": "tokenPointer",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "tokenURI",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [],
      "name": "totalSupply",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "transferFrom",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "mint",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.6.4+commit.1dca32f3\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"symbol\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"baseURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"mint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"_data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"tokenByIndex\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"tokenOfOwnerByIndex\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"tokenPointer\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"methods\":{\"approve(address,uint256)\":{\"details\":\"Approves another address to transfer the given token ID The zero address indicates there is no approved address. There can only be one approved address per token at a given time. Can only be called by the token owner or an approved operator.\",\"params\":{\"to\":\"address to be approved for the given token ID\",\"tokenId\":\"uint256 ID of the token to be approved\"}},\"balanceOf(address)\":{\"details\":\"Gets the balance of the specified address.\",\"params\":{\"owner\":\"address to query the balance of\"},\"returns\":{\"_0\":\"uint256 representing the amount owned by the passed address\"}},\"baseURI()\":{\"details\":\"Returns the base URI set via {_setBaseURI}. This will be automatically added as a preffix in {tokenURI} to each token's URI, when they are non-empty.\"},\"burn(uint256)\":{\"details\":\"Burns a specific ERC721 token.\",\"params\":{\"tokenId\":\"uint256 id of the ERC721 token to be burned.\"}},\"getApproved(uint256)\":{\"details\":\"Gets the approved address for a token ID, or zero if no address set Reverts if the token ID does not exist.\",\"params\":{\"tokenId\":\"uint256 ID of the token to query the approval of\"},\"returns\":{\"_0\":\"address currently approved for the given token ID\"}},\"isApprovedForAll(address,address)\":{\"details\":\"Tells whether an operator is approved by a given owner.\",\"params\":{\"operator\":\"operator address which you want to query the approval of\",\"owner\":\"owner address which you want to query the approval of\"},\"returns\":{\"_0\":\"bool whether the given operator is approved by the given owner\"}},\"name()\":{\"details\":\"Gets the token name.\",\"returns\":{\"_0\":\"string representing the token name\"}},\"ownerOf(uint256)\":{\"details\":\"Gets the owner of the specified token ID.\",\"params\":{\"tokenId\":\"uint256 ID of the token to query the owner of\"},\"returns\":{\"_0\":\"address currently marked as the owner of the given token ID\"}},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"Safely transfers the ownership of a given token ID to another address If the target address is a contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer, and return the magic value `bytes4(keccak256(\\\"onERC721Received(address,address,uint256,bytes)\\\"))`; otherwise, the transfer is reverted. Requires the msg.sender to be the owner, approved, or operator\",\"params\":{\"from\":\"current owner of the token\",\"to\":\"address to receive the ownership of the given token ID\",\"tokenId\":\"uint256 ID of the token to be transferred\"}},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"Safely transfers the ownership of a given token ID to another address If the target address is a contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer, and return the magic value `bytes4(keccak256(\\\"onERC721Received(address,address,uint256,bytes)\\\"))`; otherwise, the transfer is reverted. Requires the _msgSender() to be the owner, approved, or operator\",\"params\":{\"_data\":\"bytes data to send along with a safe transfer check\",\"from\":\"current owner of the token\",\"to\":\"address to receive the ownership of the given token ID\",\"tokenId\":\"uint256 ID of the token to be transferred\"}},\"setApprovalForAll(address,bool)\":{\"details\":\"Sets or unsets the approval of a given operator An operator is allowed to transfer all tokens of the sender on their behalf.\",\"params\":{\"approved\":\"representing the status of the approval to be set\",\"operator\":\"operator address to set the approval\"}},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.     * Time complexity O(1), guaranteed to always use less than 30 000 gas.\"},\"symbol()\":{\"details\":\"Gets the token symbol.\",\"returns\":{\"_0\":\"string representing the token symbol\"}},\"tokenByIndex(uint256)\":{\"details\":\"Gets the token ID at a given index of all the tokens in this contract Reverts if the index is greater or equal to the total number of tokens.\",\"params\":{\"index\":\"uint256 representing the index to be accessed of the tokens list\"},\"returns\":{\"_0\":\"uint256 token ID at the given index of the tokens list\"}},\"tokenOfOwnerByIndex(address,uint256)\":{\"details\":\"Gets the token ID at a given index of the tokens list of the requested owner.\",\"params\":{\"index\":\"uint256 representing the index to be accessed of the requested tokens list\",\"owner\":\"address owning the tokens list to be accessed\"},\"returns\":{\"_0\":\"uint256 token ID at the given index of the tokens list owned by the requested address\"}},\"tokenURI(uint256)\":{\"details\":\"Returns the URI for a given token ID. May return an empty string.     * If the token's URI is non-empty and a base URI was set (via {_setBaseURI}), it will be added to the token ID's URI as a prefix.     * Reverts if the token ID does not exist.\"},\"totalSupply()\":{\"details\":\"Gets the total amount of tokens stored by the contract.\",\"returns\":{\"_0\":\"uint256 representing the total amount of tokens\"}},\"transferFrom(address,address,uint256)\":{\"details\":\"Transfers the ownership of a given token ID to another address. Usage of this method is discouraged, use {safeTransferFrom} whenever possible. Requires the msg.sender to be the owner, approved, or operator.\",\"params\":{\"from\":\"current owner of the token\",\"to\":\"address to receive the ownership of the given token ID\",\"tokenId\":\"uint256 ID of the token to be transferred\"}}}},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"/Users/Natalie/Projects/hashtag-contracts/contracts/mock/ERC721BurnableMock.sol\":\"ERC721BurnableMock\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"/Users/Natalie/Projects/hashtag-contracts/contracts/mock/ERC721BurnableMock.sol\":{\"keccak256\":\"0x5709eaf177077cbe1f3b31ebd113ae81bade934d6858cbe18e643bd9bc585112\",\"urls\":[\"bzz-raw://d992f65935cc116f3b0f0c3bc79975b5b0e4f6566c194e1209021c1f39532456\",\"dweb:/ipfs/QmdMrjX4AN19SiAxgtRj553FrLgUrbhypc5yeYzvHDFgyM\"]},\"@openzeppelin/contracts/GSN/Context.sol\":{\"keccak256\":\"0x0de74dfa6b37943c1b834cbd8fb7a8d052e5ff80c7adb33692102dd6cd2985e9\",\"urls\":[\"bzz-raw://9d2d827fcf4a838f5821732c0acd6a40d21c2a5a2cfe2563feec91465f47bb60\",\"dweb:/ipfs/Qmex3wMKf5Sghbfvr288RUg1kP2uAyTMf11w83WbMbpQQc\"]},\"@openzeppelin/contracts/introspection/ERC165.sol\":{\"keccak256\":\"0xdcbcec72a08dc49e64965d2587b74d8b88cee6bdeecd6337016b7da774478c36\",\"urls\":[\"bzz-raw://b560b4b9736acd02b7cde1925ce1374a4bc87de0d04ba944b0a7f4056b75383f\",\"dweb:/ipfs/QmWewRjMTXUgAHTRMWZ3DHRdYdUkKWjFT7C6kNjLh4T2wL\"]},\"@openzeppelin/contracts/introspection/IERC165.sol\":{\"keccak256\":\"0x9175561c374ec1fc33045e5dfdde2057e63e00debf432875f9e1e3395d99c149\",\"urls\":[\"bzz-raw://b0167043c1938b56904deaa481a73041aa4a9e054c60db0b0dfbebfe7869c06a\",\"dweb:/ipfs/QmUoYjhymBr6WUpExKgRvKxXD5fcdpQEe1o9ResKZu6CC5\"]},\"@openzeppelin/contracts/math/SafeMath.sol\":{\"keccak256\":\"0x04d34b3cd5677bea25f8dfceb6dec0eaa071d4d4b789a43f13fe0c415ba4c296\",\"urls\":[\"bzz-raw://e7e8b526a6839e5ba14f0d23a830387fec47f7043ce01d42c9f285b709a9d080\",\"dweb:/ipfs/QmXmhhFmX5gcAvVzNiDPAGA35iHMPNaYtQkACswRHBVTNw\"]},\"@openzeppelin/contracts/token/ERC721/ERC721.sol\":{\"keccak256\":\"0xb40602104a74d4d8a682fad2cfa274d417821c55c71460a5248d6a8686be6bac\",\"urls\":[\"bzz-raw://7c3c7170a531f8c9ec76f4f69a9e875e92eec38dd52218434950d03c3f2657e7\",\"dweb:/ipfs/QmXpnZ2pCXFznTdfuoNH1fszjcRNn8Dyo2Q9stGEzbKVqL\"]},\"@openzeppelin/contracts/token/ERC721/ERC721Burnable.sol\":{\"keccak256\":\"0x10e76162c546c1cc8e92988c775b3df891e98908d9693b8e53e25bfca38f341f\",\"urls\":[\"bzz-raw://95d5785f6cae5a4e9ea36eee3ad570fae1bacf6dc6b6b0f369504f58c0bf32b4\",\"dweb:/ipfs/QmTdFwxFeHhKa7bQ2hGPE2LM8e5YdJfxezoXLWGBvAHVwr\"]},\"@openzeppelin/contracts/token/ERC721/ERC721Enumerable.sol\":{\"keccak256\":\"0xc547c79e93885c12382ce5418c778cf35530fe2dec58ec7589b88f80fd403441\",\"urls\":[\"bzz-raw://ca00c24d18261a841d86908e05b28488682ffc275cc8e705cd43ecc5066a95d1\",\"dweb:/ipfs/QmetjXHEufQ86honw7zFAp1F5pxr33gxkhtpZRy6H9445u\"]},\"@openzeppelin/contracts/token/ERC721/ERC721Full.sol\":{\"keccak256\":\"0x53b5f24782d9b652d7a6c474f59775b728aeae6182c8226e3127a1b1ebc0094e\",\"urls\":[\"bzz-raw://f4131d6e2be088c1d6f534d72a650b12257a6bcbcff94c2c9438cbb872c1caff\",\"dweb:/ipfs/QmTcc8eNuneJ1ZhpwAfYREjN4DjGyuMyh5Wzh826BCzd9T\"]},\"@openzeppelin/contracts/token/ERC721/ERC721Metadata.sol\":{\"keccak256\":\"0x2defd44fdf8a96177fcdf5d931491c961350a1f214fbe0635dacda19a14244ae\",\"urls\":[\"bzz-raw://831c0ec8e07c10e11203b208bb4801177e7fb6ac709ffc6087b1334ee4fca7c4\",\"dweb:/ipfs/QmPrS7sznPR1riiDWYNUvz1Hqqe3cKfhSQKUDzdnoNgZff\"]},\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0x34726f200d88943561936daf5297552636b58b57ecd3eca6494d678d93d03252\",\"urls\":[\"bzz-raw://dee47bb5e1ef4b3b8ffd3edd9d1d774249c546d4ae890c46605dd9eda73ff7eb\",\"dweb:/ipfs/QmRKJyJDbjbaf8LLnw1jcpZ47VbU2c9gYT2xZSp19m55aM\"]},\"@openzeppelin/contracts/token/ERC721/IERC721Enumerable.sol\":{\"keccak256\":\"0xf81dbd00ad4a1e4795df72759e33872c2599ea6c060be5898ed5d6fcd8ee9a11\",\"urls\":[\"bzz-raw://44dfcc25314c5ed29bc069c4746f87d98bb30a8dbc1a9bdeb797c2a530b9b9c5\",\"dweb:/ipfs/QmbRc5bKDobjE6zamLUy6Sh5HKd6XtNAsfBJzgZuQB3jpv\"]},\"@openzeppelin/contracts/token/ERC721/IERC721Metadata.sol\":{\"keccak256\":\"0xa17f4147965ceccd9f2017b14fcf8ef142346ec69c7e0424fd5c99f5ffeed8fa\",\"urls\":[\"bzz-raw://25315aea456015e8a2bc2b5badde793d1ae16d67d09df50ecb90a2af13674b92\",\"dweb:/ipfs/QmTujwcp5f1LioDNdRMfsXs2MsCWu2UeijhEg4VnDbzZmk\"]},\"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\":{\"keccak256\":\"0x0c25ff00a747f1df6cb5e5c103adb98334df7e9561b0d46079454131c139bff9\",\"urls\":[\"bzz-raw://9417ce94829309329fa0f0dc50089696bc55f9f675c4b2ffcb31f960fe706250\",\"dweb:/ipfs/QmdckiAmnW2uhXK2V2enu7bEbqiMR6hzMD1ytGH43pKLhE\"]},\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0x8e5e5ba56ec398e1f5dd1b3c92b604f5d7509adedd67cb64ec99b6032603aaf1\",\"urls\":[\"bzz-raw://dedc4142af588d22fce563a0c94b11d2ef72e8960488175d1e285dfead8866eb\",\"dweb:/ipfs/Qmbaka9k33fbw1iirt4aYZtJvmFUjq23feuwreTEG7djqU\"]},\"@openzeppelin/contracts/utils/Counters.sol\":{\"keccak256\":\"0x4f3a00edb976e97943fe0a620ea2948955a75eff2a9231c202d50d1e062d8da5\",\"urls\":[\"bzz-raw://4d83aa87b7c75f666d57a0e5b779a19c00b453b14ee4ed88cfda6d056fdcf14c\",\"dweb:/ipfs/QmXpWwQVFo66hsrAZmHxoxNzwEwBDgNWvaUYqY4TJV38vk\"]}},\"version\":1}",
  "bytecode": "0x60806040526000600d553480156200001657600080fd5b5060405162001f4138038062001f41833981810160405260408110156200003c57600080fd5b81019080805160405193929190846401000000008211156200005d57600080fd5b9083019060208201858111156200007357600080fd5b82516401000000008111828201881017156200008e57600080fd5b82525081516020918201929091019080838360005b83811015620000bd578181015183820152602001620000a3565b50505050905090810190601f168015620000eb5780820380516001836020036101000a031916815260200191505b50604052602001805160405193929190846401000000008211156200010f57600080fd5b9083019060208201858111156200012557600080fd5b82516401000000008111828201881017156200014057600080fd5b82525081516020918201929091019080838360005b838110156200016f57818101518382015260200162000155565b50505050905090810190601f1680156200019d5780820380516001836020036101000a031916815260200191505b50604052508391508290508181620001c56301ffc9a760e01b6001600160e01b036200024e16565b620001e06380ac58cd60e01b6001600160e01b036200024e16565b620001fb63780e9d6360e01b6001600160e01b036200024e16565b815162000210906009906020850190620002d3565b5080516200022690600a906020840190620002d3565b5062000242635b5e139f60e01b6001600160e01b036200024e16565b50505050505062000378565b6001600160e01b03198082161415620002ae576040805162461bcd60e51b815260206004820152601c60248201527f4552433136353a20696e76616c696420696e7465726661636520696400000000604482015290519081900360640190fd5b6001600160e01b0319166000908152602081905260409020805460ff19166001179055565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f106200031657805160ff191683800117855562000346565b8280016001018555821562000346579182015b828111156200034657825182559160200191906001019062000329565b506200035492915062000358565b5090565b6200037591905b808211156200035457600081556001016200035f565b90565b611bb980620003886000396000f3fe608060405234801561001057600080fd5b506004361061012c5760003560e01c806342966c68116100ad57806395d89b411161007157806395d89b4114610397578063a22cb4651461039f578063b88d4fde146103cd578063c87b56dd14610493578063e985e9c5146104b05761012c565b806342966c68146103125780634f6ccce71461032f5780636352211e1461034c5780636c0360eb1461036957806370a08231146103715761012c565b80631249c58b116100f45780631249c58b1461026a57806318160ddd1461027257806323b872dd1461027a5780632f745c59146102b057806342842e0e146102dc5761012c565b806301ffc9a714610131578063028316511461016c57806306fdde0314610186578063081812fc14610203578063095ea7b31461023c575b600080fd5b6101586004803603602081101561014757600080fd5b50356001600160e01b0319166104de565b604080519115158252519081900360200190f35b610174610501565b60408051918252519081900360200190f35b61018e610507565b6040805160208082528351818301528351919283929083019185019080838360005b838110156101c85781810151838201526020016101b0565b50505050905090810190601f1680156101f55780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b6102206004803603602081101561021957600080fd5b503561059e565b604080516001600160a01b039092168252519081900360200190f35b6102686004803603604081101561025257600080fd5b506001600160a01b038135169060200135610600565b005b6102686106db565b6101746106f5565b6102686004803603606081101561029057600080fd5b506001600160a01b038135811691602081013590911690604001356106fb565b610174600480360360408110156102c657600080fd5b506001600160a01b038135169060200135610752565b610268600480360360608110156102f257600080fd5b506001600160a01b038135811691602081013590911690604001356107d1565b6102686004803603602081101561032857600080fd5b50356107ec565b6101746004803603602081101561034557600080fd5b503561083e565b6102206004803603602081101561036257600080fd5b50356108a4565b61018e6108fe565b6101746004803603602081101561038757600080fd5b50356001600160a01b031661095f565b61018e6109c7565b610268600480360360408110156103b557600080fd5b506001600160a01b0381351690602001351515610a28565b610268600480360360808110156103e357600080fd5b6001600160a01b0382358116926020810135909116916040820135919081019060808101606082013564010000000081111561041e57600080fd5b82018360208201111561043057600080fd5b8035906020019184600183028401116401000000008311171561045257600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600092019190915250929550610b2d945050505050565b61018e600480360360208110156104a957600080fd5b5035610b8b565b610158600480360360408110156104c657600080fd5b506001600160a01b0381358116916020013516610d57565b6001600160e01b0319811660009081526020819052604090205460ff165b919050565b600d5481565b60098054604080516020601f60026000196101006001881615020190951694909404938401819004810282018101909252828152606093909290918301828280156105935780601f1061056857610100808354040283529160200191610593565b820191906000526020600020905b81548152906001019060200180831161057657829003601f168201915b505050505090505b90565b60006105a982610d85565b6105e45760405162461bcd60e51b815260040180806020018281038252602c815260200180611a52602c913960400191505060405180910390fd5b506000908152600260205260409020546001600160a01b031690565b600061060b826108a4565b9050806001600160a01b0316836001600160a01b0316141561065e5760405162461bcd60e51b8152600401808060200182810382526021815260200180611ad66021913960400191505060405180910390fd5b806001600160a01b0316610670610da2565b6001600160a01b0316148061069157506106918161068c610da2565b610d57565b6106cc5760405162461bcd60e51b81526004018080602001828103825260388152602001806119c76038913960400191505060405180910390fd5b6106d68383610da6565b505050565b600d54600101600d819055506106f333600d54610e14565b565b60075490565b61070c610706610da2565b82610f51565b6107475760405162461bcd60e51b8152600401808060200182810382526031815260200180611af76031913960400191505060405180910390fd5b6106d6838383610ff5565b600061075d8361095f565b821061079a5760405162461bcd60e51b815260040180806020018281038252602b81526020018061191a602b913960400191505060405180910390fd5b6001600160a01b03831660009081526005602052604090208054839081106107be57fe5b9060005260206000200154905092915050565b6106d683838360405180602001604052806000815250610b2d565b6107f7610706610da2565b6108325760405162461bcd60e51b8152600401808060200182810382526030815260200180611b546030913960400191505060405180910390fd5b61083b81611146565b50565b60006108486106f5565b82106108855760405162461bcd60e51b815260040180806020018281038252602c815260200180611b28602c913960400191505060405180910390fd5b6007828154811061089257fe5b90600052602060002001549050919050565b6000818152600160205260408120546001600160a01b0316806108f85760405162461bcd60e51b8152600401808060200182810382526029815260200180611a296029913960400191505060405180910390fd5b92915050565b600c8054604080516020601f60026000196101006001881615020190951694909404938401819004810282018101909252828152606093909290918301828280156105935780601f1061056857610100808354040283529160200191610593565b60006001600160a01b0382166109a65760405162461bcd60e51b815260040180806020018281038252602a8152602001806119ff602a913960400191505060405180910390fd5b6001600160a01b03821660009081526003602052604090206108f8906111e0565b600a8054604080516020601f60026000196101006001881615020190951694909404938401819004810282018101909252828152606093909290918301828280156105935780601f1061056857610100808354040283529160200191610593565b610a30610da2565b6001600160a01b0316826001600160a01b03161415610a96576040805162461bcd60e51b815260206004820152601960248201527f4552433732313a20617070726f766520746f2063616c6c657200000000000000604482015290519081900360640190fd5b8060046000610aa3610da2565b6001600160a01b03908116825260208083019390935260409182016000908120918716808252919093529120805460ff191692151592909217909155610ae7610da2565b60408051841515815290516001600160a01b0392909216917f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c319181900360200190a35050565b610b3e610b38610da2565b83610f51565b610b795760405162461bcd60e51b8152600401808060200182810382526031815260200180611af76031913960400191505060405180910390fd5b610b85848484846111e4565b50505050565b6060610b9682610d85565b610bd15760405162461bcd60e51b815260040180806020018281038252602f815260200180611aa7602f913960400191505060405180910390fd5b6000828152600b602090815260409182902080548351601f6002600019610100600186161502019093169290920491820184900484028101840190945280845260609392830182828015610c665780601f10610c3b57610100808354040283529160200191610c66565b820191906000526020600020905b815481529060010190602001808311610c4957829003601f168201915b50505050509050805160001415610c8d5750506040805160208101909152600081526104fc565b600c816040516020018083805460018160011615610100020316600290048015610cee5780601f10610ccc576101008083540402835291820191610cee565b820191906000526020600020905b815481529060010190602001808311610cda575b5050825160208401908083835b60208310610d1a5780518252601f199092019160209182019101610cfb565b6001836020036101000a038019825116818451168082178552505050505050905001925050506040516020818303038152906040529150506104fc565b6001600160a01b03918216600090815260046020908152604080832093909416825291909152205460ff1690565b6000908152600160205260409020546001600160a01b0316151590565b3390565b600081815260026020526040902080546001600160a01b0319166001600160a01b0384169081179091558190610ddb826108a4565b6001600160a01b03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45050565b6001600160a01b038216610e6f576040805162461bcd60e51b815260206004820181905260248201527f4552433732313a206d696e7420746f20746865207a65726f2061646472657373604482015290519081900360640190fd5b610e7881610d85565b15610eca576040805162461bcd60e51b815260206004820152601c60248201527f4552433732313a20746f6b656e20616c7265616479206d696e74656400000000604482015290519081900360640190fd5b610ed660008383611236565b600081815260016020908152604080832080546001600160a01b0319166001600160a01b038716908117909155835260039091529020610f1590611241565b60405181906001600160a01b038416906000907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef908290a45050565b6000610f5c82610d85565b610f975760405162461bcd60e51b815260040180806020018281038252602c81526020018061199b602c913960400191505060405180910390fd5b6000610fa2836108a4565b9050806001600160a01b0316846001600160a01b03161480610fdd5750836001600160a01b0316610fd28461059e565b6001600160a01b0316145b80610fed5750610fed8185610d57565b949350505050565b826001600160a01b0316611008826108a4565b6001600160a01b03161461104d5760405162461bcd60e51b8152600401808060200182810382526029815260200180611a7e6029913960400191505060405180910390fd5b6001600160a01b0382166110925760405162461bcd60e51b81526004018080602001828103825260248152602001806119776024913960400191505060405180910390fd5b61109d838383611236565b6110a8600082610da6565b6001600160a01b03831660009081526003602052604090206110c99061124a565b6001600160a01b03821660009081526003602052604090206110ea90611241565b60008181526001602052604080822080546001600160a01b0319166001600160a01b0386811691821790925591518493918716917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef91a4505050565b6000611151826108a4565b905061115f81600084611236565b61116a600083610da6565b6001600160a01b038116600090815260036020526040902061118b9061124a565b60008281526001602052604080822080546001600160a01b0319169055518391906001600160a01b038416907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef908390a45050565b5490565b6111ef848484610ff5565b6111fb84848484611261565b610b855760405162461bcd60e51b81526004018080602001828103825260328152602001806119456032913960400191505060405180910390fd5b6106d683838361149c565b80546001019055565b805461125d90600163ffffffff6114a716565b9055565b6000611275846001600160a01b03166114f0565b61128157506001610fed565b600060606001600160a01b038616630a85bd0160e11b61129f610da2565b89888860405160240180856001600160a01b03166001600160a01b03168152602001846001600160a01b03166001600160a01b0316815260200183815260200180602001828103825283818151815260200191508051906020019080838360005b83811015611318578181015183820152602001611300565b50505050905090810190601f1680156113455780820380516001836020036101000a031916815260200191505b5060408051601f198184030181529181526020820180516001600160e01b03166001600160e01b0319909a16999099178952518151919890975087965094509250829150849050835b602083106113ad5780518252601f19909201916020918201910161138e565b6001836020036101000a0380198251168184511680821785525050505050509050019150506000604051808303816000865af19150503d806000811461140f576040519150601f19603f3d011682016040523d82523d6000602084013e611414565b606091505b5091509150816114655780511561142e5780518082602001fd5b60405162461bcd60e51b81526004018080602001828103825260328152602001806119456032913960400191505060405180910390fd5b600081806020019051602081101561147c57600080fd5b50516001600160e01b031916630a85bd0160e11b149350610fed92505050565b6106d6838383611529565b60006114e983836040518060400160405280601e81526020017f536166654d6174683a207375627472616374696f6e206f766572666c6f770000815250611580565b9392505050565b6000813f7fc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470818114801590610fed575050151592915050565b611534838383611617565b6001600160a01b0382166106d6576000818152600b602052604090205460026000196101006001841615020190911604156106d6576000818152600b602052604081206106d6916118c0565b6000818484111561160f5760405162461bcd60e51b81526004018080602001828103825283818151815260200191508051906020019080838360005b838110156115d45781810151838201526020016115bc565b50505050905090810190601f1680156116015780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b505050900390565b6116228383836106d6565b6001600160a01b0383166116485761163a8282611688565b611643816116c6565b6106d6565b6001600160a01b03821661167857611660838261170a565b6000818152600660205260408120556116438161180c565b611682838261170a565b6106d682825b6001600160a01b0390911660009081526005602081815260408084208054868652600684529185208290559282526001810183559183529091200155565b600780546000838152600860205260408120829055600182018355919091527fa66cc928b5edb82af9bd49922954155ab7b0942694bea4ce44661d9a8736c6880155565b6001600160a01b03821660009081526005602052604081205461173490600163ffffffff6114a716565b6000838152600660205260409020549091508082146117cf576001600160a01b038416600090815260056020526040812080548490811061177157fe5b906000526020600020015490508060056000876001600160a01b03166001600160a01b0316815260200190815260200160002083815481106117af57fe5b600091825260208083209091019290925591825260069052604090208190555b6001600160a01b03841660009081526005602052604090208054806117f057fe5b6001900381819060005260206000200160009055905550505050565b60075460009061182390600163ffffffff6114a716565b6000838152600860205260408120546007805493945090928490811061184557fe5b90600052602060002001549050806007838154811061186057fe5b6000918252602080832090910192909255828152600890915260409020829055600780548061188b57fe5b600190038181906000526020600020016000905590556000600860008681526020019081526020016000208190555050505050565b50805460018160011615610100020316600290046000825580601f106118e6575061083b565b600091825260209182902061083b9261059b92601f01048101905b808211156119155760008155600101611901565b509056fe455243373231456e756d657261626c653a206f776e657220696e646578206f7574206f6620626f756e64734552433732313a207472616e7366657220746f206e6f6e20455243373231526563656976657220696d706c656d656e7465724552433732313a207472616e7366657220746f20746865207a65726f20616464726573734552433732313a206f70657261746f7220717565727920666f72206e6f6e6578697374656e7420746f6b656e4552433732313a20617070726f76652063616c6c6572206973206e6f74206f776e6572206e6f7220617070726f76656420666f7220616c6c4552433732313a2062616c616e636520717565727920666f7220746865207a65726f20616464726573734552433732313a206f776e657220717565727920666f72206e6f6e6578697374656e7420746f6b656e4552433732313a20617070726f76656420717565727920666f72206e6f6e6578697374656e7420746f6b656e4552433732313a207472616e73666572206f6620746f6b656e2074686174206973206e6f74206f776e4552433732314d657461646174613a2055524920717565727920666f72206e6f6e6578697374656e7420746f6b656e4552433732313a20617070726f76616c20746f2063757272656e74206f776e65724552433732313a207472616e736665722063616c6c6572206973206e6f74206f776e6572206e6f7220617070726f766564455243373231456e756d657261626c653a20676c6f62616c20696e646578206f7574206f6620626f756e64734552433732314275726e61626c653a2063616c6c6572206973206e6f74206f776e6572206e6f7220617070726f766564a2646970667358221220abd1b65ec31878762dd91fc66ec34dd029e23f065bee663d09b6fa03865efcbf64736f6c63430006040033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b506004361061012c5760003560e01c806342966c68116100ad57806395d89b411161007157806395d89b4114610397578063a22cb4651461039f578063b88d4fde146103cd578063c87b56dd14610493578063e985e9c5146104b05761012c565b806342966c68146103125780634f6ccce71461032f5780636352211e1461034c5780636c0360eb1461036957806370a08231146103715761012c565b80631249c58b116100f45780631249c58b1461026a57806318160ddd1461027257806323b872dd1461027a5780632f745c59146102b057806342842e0e146102dc5761012c565b806301ffc9a714610131578063028316511461016c57806306fdde0314610186578063081812fc14610203578063095ea7b31461023c575b600080fd5b6101586004803603602081101561014757600080fd5b50356001600160e01b0319166104de565b604080519115158252519081900360200190f35b610174610501565b60408051918252519081900360200190f35b61018e610507565b6040805160208082528351818301528351919283929083019185019080838360005b838110156101c85781810151838201526020016101b0565b50505050905090810190601f1680156101f55780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b6102206004803603602081101561021957600080fd5b503561059e565b604080516001600160a01b039092168252519081900360200190f35b6102686004803603604081101561025257600080fd5b506001600160a01b038135169060200135610600565b005b6102686106db565b6101746106f5565b6102686004803603606081101561029057600080fd5b506001600160a01b038135811691602081013590911690604001356106fb565b610174600480360360408110156102c657600080fd5b506001600160a01b038135169060200135610752565b610268600480360360608110156102f257600080fd5b506001600160a01b038135811691602081013590911690604001356107d1565b6102686004803603602081101561032857600080fd5b50356107ec565b6101746004803603602081101561034557600080fd5b503561083e565b6102206004803603602081101561036257600080fd5b50356108a4565b61018e6108fe565b6101746004803603602081101561038757600080fd5b50356001600160a01b031661095f565b61018e6109c7565b610268600480360360408110156103b557600080fd5b506001600160a01b0381351690602001351515610a28565b610268600480360360808110156103e357600080fd5b6001600160a01b0382358116926020810135909116916040820135919081019060808101606082013564010000000081111561041e57600080fd5b82018360208201111561043057600080fd5b8035906020019184600183028401116401000000008311171561045257600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600092019190915250929550610b2d945050505050565b61018e600480360360208110156104a957600080fd5b5035610b8b565b610158600480360360408110156104c657600080fd5b506001600160a01b0381358116916020013516610d57565b6001600160e01b0319811660009081526020819052604090205460ff165b919050565b600d5481565b60098054604080516020601f60026000196101006001881615020190951694909404938401819004810282018101909252828152606093909290918301828280156105935780601f1061056857610100808354040283529160200191610593565b820191906000526020600020905b81548152906001019060200180831161057657829003601f168201915b505050505090505b90565b60006105a982610d85565b6105e45760405162461bcd60e51b815260040180806020018281038252602c815260200180611a52602c913960400191505060405180910390fd5b506000908152600260205260409020546001600160a01b031690565b600061060b826108a4565b9050806001600160a01b0316836001600160a01b0316141561065e5760405162461bcd60e51b8152600401808060200182810382526021815260200180611ad66021913960400191505060405180910390fd5b806001600160a01b0316610670610da2565b6001600160a01b0316148061069157506106918161068c610da2565b610d57565b6106cc5760405162461bcd60e51b81526004018080602001828103825260388152602001806119c76038913960400191505060405180910390fd5b6106d68383610da6565b505050565b600d54600101600d819055506106f333600d54610e14565b565b60075490565b61070c610706610da2565b82610f51565b6107475760405162461bcd60e51b8152600401808060200182810382526031815260200180611af76031913960400191505060405180910390fd5b6106d6838383610ff5565b600061075d8361095f565b821061079a5760405162461bcd60e51b815260040180806020018281038252602b81526020018061191a602b913960400191505060405180910390fd5b6001600160a01b03831660009081526005602052604090208054839081106107be57fe5b9060005260206000200154905092915050565b6106d683838360405180602001604052806000815250610b2d565b6107f7610706610da2565b6108325760405162461bcd60e51b8152600401808060200182810382526030815260200180611b546030913960400191505060405180910390fd5b61083b81611146565b50565b60006108486106f5565b82106108855760405162461bcd60e51b815260040180806020018281038252602c815260200180611b28602c913960400191505060405180910390fd5b6007828154811061089257fe5b90600052602060002001549050919050565b6000818152600160205260408120546001600160a01b0316806108f85760405162461bcd60e51b8152600401808060200182810382526029815260200180611a296029913960400191505060405180910390fd5b92915050565b600c8054604080516020601f60026000196101006001881615020190951694909404938401819004810282018101909252828152606093909290918301828280156105935780601f1061056857610100808354040283529160200191610593565b60006001600160a01b0382166109a65760405162461bcd60e51b815260040180806020018281038252602a8152602001806119ff602a913960400191505060405180910390fd5b6001600160a01b03821660009081526003602052604090206108f8906111e0565b600a8054604080516020601f60026000196101006001881615020190951694909404938401819004810282018101909252828152606093909290918301828280156105935780601f1061056857610100808354040283529160200191610593565b610a30610da2565b6001600160a01b0316826001600160a01b03161415610a96576040805162461bcd60e51b815260206004820152601960248201527f4552433732313a20617070726f766520746f2063616c6c657200000000000000604482015290519081900360640190fd5b8060046000610aa3610da2565b6001600160a01b03908116825260208083019390935260409182016000908120918716808252919093529120805460ff191692151592909217909155610ae7610da2565b60408051841515815290516001600160a01b0392909216917f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c319181900360200190a35050565b610b3e610b38610da2565b83610f51565b610b795760405162461bcd60e51b8152600401808060200182810382526031815260200180611af76031913960400191505060405180910390fd5b610b85848484846111e4565b50505050565b6060610b9682610d85565b610bd15760405162461bcd60e51b815260040180806020018281038252602f815260200180611aa7602f913960400191505060405180910390fd5b6000828152600b602090815260409182902080548351601f6002600019610100600186161502019093169290920491820184900484028101840190945280845260609392830182828015610c665780601f10610c3b57610100808354040283529160200191610c66565b820191906000526020600020905b815481529060010190602001808311610c4957829003601f168201915b50505050509050805160001415610c8d5750506040805160208101909152600081526104fc565b600c816040516020018083805460018160011615610100020316600290048015610cee5780601f10610ccc576101008083540402835291820191610cee565b820191906000526020600020905b815481529060010190602001808311610cda575b5050825160208401908083835b60208310610d1a5780518252601f199092019160209182019101610cfb565b6001836020036101000a038019825116818451168082178552505050505050905001925050506040516020818303038152906040529150506104fc565b6001600160a01b03918216600090815260046020908152604080832093909416825291909152205460ff1690565b6000908152600160205260409020546001600160a01b0316151590565b3390565b600081815260026020526040902080546001600160a01b0319166001600160a01b0384169081179091558190610ddb826108a4565b6001600160a01b03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45050565b6001600160a01b038216610e6f576040805162461bcd60e51b815260206004820181905260248201527f4552433732313a206d696e7420746f20746865207a65726f2061646472657373604482015290519081900360640190fd5b610e7881610d85565b15610eca576040805162461bcd60e51b815260206004820152601c60248201527f4552433732313a20746f6b656e20616c7265616479206d696e74656400000000604482015290519081900360640190fd5b610ed660008383611236565b600081815260016020908152604080832080546001600160a01b0319166001600160a01b038716908117909155835260039091529020610f1590611241565b60405181906001600160a01b038416906000907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef908290a45050565b6000610f5c82610d85565b610f975760405162461bcd60e51b815260040180806020018281038252602c81526020018061199b602c913960400191505060405180910390fd5b6000610fa2836108a4565b9050806001600160a01b0316846001600160a01b03161480610fdd5750836001600160a01b0316610fd28461059e565b6001600160a01b0316145b80610fed5750610fed8185610d57565b949350505050565b826001600160a01b0316611008826108a4565b6001600160a01b03161461104d5760405162461bcd60e51b8152600401808060200182810382526029815260200180611a7e6029913960400191505060405180910390fd5b6001600160a01b0382166110925760405162461bcd60e51b81526004018080602001828103825260248152602001806119776024913960400191505060405180910390fd5b61109d838383611236565b6110a8600082610da6565b6001600160a01b03831660009081526003602052604090206110c99061124a565b6001600160a01b03821660009081526003602052604090206110ea90611241565b60008181526001602052604080822080546001600160a01b0319166001600160a01b0386811691821790925591518493918716917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef91a4505050565b6000611151826108a4565b905061115f81600084611236565b61116a600083610da6565b6001600160a01b038116600090815260036020526040902061118b9061124a565b60008281526001602052604080822080546001600160a01b0319169055518391906001600160a01b038416907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef908390a45050565b5490565b6111ef848484610ff5565b6111fb84848484611261565b610b855760405162461bcd60e51b81526004018080602001828103825260328152602001806119456032913960400191505060405180910390fd5b6106d683838361149c565b80546001019055565b805461125d90600163ffffffff6114a716565b9055565b6000611275846001600160a01b03166114f0565b61128157506001610fed565b600060606001600160a01b038616630a85bd0160e11b61129f610da2565b89888860405160240180856001600160a01b03166001600160a01b03168152602001846001600160a01b03166001600160a01b0316815260200183815260200180602001828103825283818151815260200191508051906020019080838360005b83811015611318578181015183820152602001611300565b50505050905090810190601f1680156113455780820380516001836020036101000a031916815260200191505b5060408051601f198184030181529181526020820180516001600160e01b03166001600160e01b0319909a16999099178952518151919890975087965094509250829150849050835b602083106113ad5780518252601f19909201916020918201910161138e565b6001836020036101000a0380198251168184511680821785525050505050509050019150506000604051808303816000865af19150503d806000811461140f576040519150601f19603f3d011682016040523d82523d6000602084013e611414565b606091505b5091509150816114655780511561142e5780518082602001fd5b60405162461bcd60e51b81526004018080602001828103825260328152602001806119456032913960400191505060405180910390fd5b600081806020019051602081101561147c57600080fd5b50516001600160e01b031916630a85bd0160e11b149350610fed92505050565b6106d6838383611529565b60006114e983836040518060400160405280601e81526020017f536166654d6174683a207375627472616374696f6e206f766572666c6f770000815250611580565b9392505050565b6000813f7fc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470818114801590610fed575050151592915050565b611534838383611617565b6001600160a01b0382166106d6576000818152600b602052604090205460026000196101006001841615020190911604156106d6576000818152600b602052604081206106d6916118c0565b6000818484111561160f5760405162461bcd60e51b81526004018080602001828103825283818151815260200191508051906020019080838360005b838110156115d45781810151838201526020016115bc565b50505050905090810190601f1680156116015780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b505050900390565b6116228383836106d6565b6001600160a01b0383166116485761163a8282611688565b611643816116c6565b6106d6565b6001600160a01b03821661167857611660838261170a565b6000818152600660205260408120556116438161180c565b611682838261170a565b6106d682825b6001600160a01b0390911660009081526005602081815260408084208054868652600684529185208290559282526001810183559183529091200155565b600780546000838152600860205260408120829055600182018355919091527fa66cc928b5edb82af9bd49922954155ab7b0942694bea4ce44661d9a8736c6880155565b6001600160a01b03821660009081526005602052604081205461173490600163ffffffff6114a716565b6000838152600660205260409020549091508082146117cf576001600160a01b038416600090815260056020526040812080548490811061177157fe5b906000526020600020015490508060056000876001600160a01b03166001600160a01b0316815260200190815260200160002083815481106117af57fe5b600091825260208083209091019290925591825260069052604090208190555b6001600160a01b03841660009081526005602052604090208054806117f057fe5b6001900381819060005260206000200160009055905550505050565b60075460009061182390600163ffffffff6114a716565b6000838152600860205260408120546007805493945090928490811061184557fe5b90600052602060002001549050806007838154811061186057fe5b6000918252602080832090910192909255828152600890915260409020829055600780548061188b57fe5b600190038181906000526020600020016000905590556000600860008681526020019081526020016000208190555050505050565b50805460018160011615610100020316600290046000825580601f106118e6575061083b565b600091825260209182902061083b9261059b92601f01048101905b808211156119155760008155600101611901565b509056fe455243373231456e756d657261626c653a206f776e657220696e646578206f7574206f6620626f756e64734552433732313a207472616e7366657220746f206e6f6e20455243373231526563656976657220696d706c656d656e7465724552433732313a207472616e7366657220746f20746865207a65726f20616464726573734552433732313a206f70657261746f7220717565727920666f72206e6f6e6578697374656e7420746f6b656e4552433732313a20617070726f76652063616c6c6572206973206e6f74206f776e6572206e6f7220617070726f76656420666f7220616c6c4552433732313a2062616c616e636520717565727920666f7220746865207a65726f20616464726573734552433732313a206f776e657220717565727920666f72206e6f6e6578697374656e7420746f6b656e4552433732313a20617070726f76656420717565727920666f72206e6f6e6578697374656e7420746f6b656e4552433732313a207472616e73666572206f6620746f6b656e2074686174206973206e6f74206f776e4552433732314d657461646174613a2055524920717565727920666f72206e6f6e6578697374656e7420746f6b656e4552433732313a20617070726f76616c20746f2063757272656e74206f776e65724552433732313a207472616e736665722063616c6c6572206973206e6f74206f776e6572206e6f7220617070726f766564455243373231456e756d657261626c653a20676c6f62616c20696e646578206f7574206f6620626f756e64734552433732314275726e61626c653a2063616c6c6572206973206e6f74206f776e6572206e6f7220617070726f766564a2646970667358221220abd1b65ec31878762dd91fc66ec34dd029e23f065bee663d09b6fa03865efcbf64736f6c63430006040033",
  "sourceMap": "220:499:4:-:0;;;314:1;284:31;;322:90;5:9:-1;2:2;;;27:1;24;17:12;2:2;322:90:4;;;;;;;;;;;;;;;15:2:-1;10:3;7:11;4:2;;;31:1;28;21:12;4:2;322:90:4;;;;;;;;;;;;;19:11:-1;14:3;11:20;8:2;;;44:1;41;34:12;8:2;62:21;;;;123:4;114:14;;138:31;;;135:2;;;182:1;179;172:12;135:2;213:10;;261:11;244:29;;285:43;;;282:58;-1:-1;233:115;230:2;;;361:1;358;351:12;230:2;372:25;;-1:-1;322:90:4;;420:4:-1;411:14;;;;322:90:4;;;;;411:14:-1;322:90:4;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;;12:14;322:90:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;19:11:-1;14:3;11:20;8:2;;;44:1;41;34:12;8:2;62:21;;;;123:4;114:14;;138:31;;;135:2;;;182:1;179;172:12;135:2;213:10;;261:11;244:29;;285:43;;;282:58;-1:-1;233:115;230:2;;;361:1;358;351:12;230:2;372:25;;-1:-1;322:90:4;;420:4:-1;411:14;;;;322:90:4;;;;;411:14:-1;322:90:4;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;;12:14;322:90:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;322:90:4;;-1:-1:-1;395:4:4;;-1:-1:-1;401:6:4;;-1:-1:-1;395:4:4;401:6;718:40:9;-1:-1:-1;;;;;;;;718:18:9;:40;:::i;:::-;2261::12;-1:-1:-1;;;;;;;;2261:18:12;:40;:::i;:::-;1357:51:14;-1:-1:-1;;;;;;;;1357:18:14;:51;:::i;:::-;912:12:16;;;;:5;;:12;;;;;:::i;:::-;-1:-1:-1;934:16:16;;;;:7;;:16;;;;;:::i;:::-;-1:-1:-1;1038:49:16;-1:-1:-1;;;;;;;;1038:18:16;:49;:::i;:::-;840:254;;425:94:15;;322:90:4;;220:499;;1451:198:9;-1:-1:-1;;;;;;1534:25:9;;;;;1526:66;;;;;-1:-1:-1;;;1526:66:9;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;1602:33:9;:20;:33;;;;;;;;;;:40;;-1:-1:-1;;1602:40:9;1638:4;1602:40;;;1451:198::o;220:499:4:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;220:499:4;;;-1:-1:-1;220:499:4;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;",
  "deployedSourceMap": "220:499:4:-:0;;;;5:9:-1;2:2;;;27:1;24;17:12;2:2;220:499:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;12:1:-1;9;2:12;915:142:9;;;;;;15:2:-1;10:3;7:11;4:2;;;31:1;28;21:12;4:2;-1:-1;915:142:9;-1:-1:-1;;;;;;915:142:9;;:::i;:::-;;;;;;;;;;;;;;;;;;284:31:4;;;:::i;:::-;;;;;;;;;;;;;;;;1199:92:16;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:100:-1;33:3;30:1;27:10;8:100;;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;;12:14;1199:92:16;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4266:209:12;;;;;;15:2:-1;10:3;7:11;4:2;;;31:1;28;21:12;4:2;-1:-1;4266:209:12;;:::i;:::-;;;;-1:-1:-1;;;;;4266:209:12;;;;;;;;;;;;;;3600:381;;;;;;15:2:-1;10:3;7:11;4:2;;;31:1;28;21:12;4:2;-1:-1;;;;;;3600:381:12;;;;;;;;:::i;:::-;;605:112:4;;;:::i;2180:103:14:-;;;:::i;5977:304:12:-;;;;;;15:2:-1;10:3;7:11;4:2;;;31:1;28;21:12;4:2;-1:-1;;;;;;5977:304:12;;;;;;;;;;;;;;;;;:::i;1789:238:14:-;;;;;;15:2:-1;10:3;7:11;4:2;;;31:1;28;21:12;4:2;-1:-1;;;;;;1789:238:14;;;;;;;;:::i;6930:149:12:-;;;;;;15:2:-1;10:3;7:11;4:2;;;31:1;28;21:12;4:2;-1:-1;;;;;;6930:149:12;;;;;;;;;;;;;;;;;:::i;362:241:13:-;;;;;;15:2:-1;10:3;7:11;4:2;;;31:1;28;21:12;4:2;-1:-1;362:241:13;;:::i;2621:205:14:-;;;;;;15:2:-1;10:3;7:11;4:2;;;31:1;28;21:12;4:2;-1:-1;2621:205:14;;:::i;2947:232:12:-;;;;;;15:2:-1;10:3;7:11;4:2;;;31:1;28;21:12;4:2;-1:-1;2947:232:12;;:::i;3352:89:16:-;;;:::i;2512:216:12:-;;;;;;15:2:-1;10:3;7:11;4:2;;;31:1;28;21:12;4:2;-1:-1;2512:216:12;-1:-1:-1;;;;;2512:216:12;;:::i;1400:96:16:-;;;:::i;4774:290:12:-;;;;;;15:2:-1;10:3;7:11;4:2;;;31:1;28;21:12;4:2;-1:-1;;;;;;4774:290:12;;;;;;;;;;:::i;7802:286::-;;;;;;15:3:-1;10;7:12;4:2;;;32:1;29;22:12;4:2;-1:-1;;;;;7802:286:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;27:11:-1;11:28;;8:2;;;52:1;49;42:12;8:2;7802:286:12;;41:9:-1;34:4;18:14;14:25;11:40;8:2;;;64:1;61;54:12;8:2;7802:286:12;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;39:11;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;7802:286:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;81:16;;74:27;;;;-1:-1;7802:286:12;;-1:-1:-1;7802:286:12;;-1:-1:-1;;;;;7802:286:12:i;1799:554:16:-;;;;;;15:2:-1;10:3;7:11;4:2;;;31:1;28;21:12;4:2;-1:-1;1799:554:16;;:::i;5386:154:12:-;;;;;;15:2:-1;10:3;7:11;4:2;;;31:1;28;21:12;4:2;-1:-1;;;;;;5386:154:12;;;;;;;;;;:::i;915:142:9:-;-1:-1:-1;;;;;;1017:33:9;;994:4;1017:33;;;;;;;;;;;;;915:142;;;;:::o;284:31:4:-;;;;:::o;1199:92:16:-;1279:5;1272:12;;;;;;;;-1:-1:-1;;1272:12:16;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1247:13;;1272:12;;1279:5;;1272:12;;1279:5;1272:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1199:92;;:::o;4266:209:12:-;4334:7;4361:16;4369:7;4361;:16::i;:::-;4353:73;;;;-1:-1:-1;;;4353:73:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;4444:24:12;;;;:15;:24;;;;;;-1:-1:-1;;;;;4444:24:12;;4266:209::o;3600:381::-;3680:13;3696:16;3704:7;3696;:16::i;:::-;3680:32;;3736:5;-1:-1:-1;;;;;3730:11:12;:2;-1:-1:-1;;;;;3730:11:12;;;3722:57;;;;-1:-1:-1;;;3722:57:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3814:5;-1:-1:-1;;;;;3798:21:12;:12;:10;:12::i;:::-;-1:-1:-1;;;;;3798:21:12;;:62;;;;3823:37;3840:5;3847:12;:10;:12::i;:::-;3823:16;:37::i;:::-;3790:152;;;;-1:-1:-1;;;3790:152:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3953:21;3962:2;3966:7;3953:8;:21::i;:::-;3600:381;;;:::o;605:112:4:-;653:12;;668:1;653:16;638:12;:31;;;;679;685:10;697:12;;679:5;:31::i;:::-;605:112::o;2180:103:14:-;2259:10;:17;2180:103;:::o;5977:304:12:-;6136:41;6155:12;:10;:12::i;:::-;6169:7;6136:18;:41::i;:::-;6128:103;;;;-1:-1:-1;;;6128:103:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6242:32;6256:4;6262:2;6266:7;6242:13;:32::i;1789:238:14:-;1878:7;1913:16;1923:5;1913:9;:16::i;:::-;1905:5;:24;1897:80;;;;-1:-1:-1;;;1897:80:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;1994:19:14;;;;;;:12;:19;;;;;:26;;2014:5;;1994:26;;;;;;;;;;;;;;1987:33;;1789:238;;;;:::o;6930:149:12:-;7033:39;7050:4;7056:2;7060:7;7033:39;;;;;;;;;;;;:16;:39::i;362:241:13:-;478:41;497:12;:10;:12::i;478:41::-;470:102;;;;-1:-1:-1;;;470:102:13;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;582:14;588:7;582:5;:14::i;:::-;362:241;:::o;2621:205:14:-;2688:7;2723:13;:11;:13::i;:::-;2715:5;:21;2707:78;;;;-1:-1:-1;;;2707:78:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2802:10;2813:5;2802:17;;;;;;;;;;;;;;;;2795:24;;2621:205;;;:::o;2947:232:12:-;3011:7;3046:20;;;:11;:20;;;;;;-1:-1:-1;;;;;3046:20:12;3084:19;3076:73;;;;-1:-1:-1;;;3076:73:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3167:5;2947:232;-1:-1:-1;;2947:232:12:o;3352:89:16:-;3426:8;3419:15;;;;;;;;-1:-1:-1;;3419:15:16;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3394:13;;3419:15;;3426:8;;3419:15;;3426:8;3419:15;;;;;;;;;;;;;;;;;;;;;;;;2512:216:12;2576:7;-1:-1:-1;;;;;2603:19:12;;2595:74;;;;-1:-1:-1;;;2595:74:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;2687:24:12;;;;;;:17;:24;;;;;:34;;:32;:34::i;1400:96:16:-;1482:7;1475:14;;;;;;;;-1:-1:-1;;1475:14:16;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1450:13;;1475:14;;1482:7;;1475:14;;1482:7;1475:14;;;;;;;;;;;;;;;;;;;;;;;;4774:290:12;4888:12;:10;:12::i;:::-;-1:-1:-1;;;;;4876:24:12;:8;-1:-1:-1;;;;;4876:24:12;;;4868:62;;;;;-1:-1:-1;;;4868:62:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;4986:8;4941:18;:32;4960:12;:10;:12::i;:::-;-1:-1:-1;;;;;4941:32:12;;;;;;;;;;;;;;;;;-1:-1:-1;4941:32:12;;;:42;;;;;;;;;;;;:53;;-1:-1:-1;;4941:53:12;;;;;;;;;;;5024:12;:10;:12::i;:::-;5009:48;;;;;;;;;;-1:-1:-1;;;;;5009:48:12;;;;;;;;;;;;;;4774:290;;:::o;7802:286::-;7933:41;7952:12;:10;:12::i;:::-;7966:7;7933:18;:41::i;:::-;7925:103;;;;-1:-1:-1;;;7925:103:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8038:43;8056:4;8062:2;8066:7;8075:5;8038:17;:43::i;:::-;7802:286;;;;:::o;1799:554:16:-;1866:13;1899:16;1907:7;1899;:16::i;:::-;1891:76;;;;-1:-1:-1;;;1891:76:16;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2004:19;;;;:10;:19;;;;;;;;;1978:45;;;;;;-1:-1:-1;;1978:45:16;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:23;;:45;;;2004:19;1978:45;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2137:9;2131:23;2158:1;2131:28;2127:220;;;-1:-1:-1;;2175:9:16;;;;;;;;;-1:-1:-1;2175:9:16;;;;2127:220;2315:8;2325:9;2298:37;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;2298:37:16;;;;;;;;;36:153:-1;66:2;61:3;58:11;36:153;;176:10;;164:23;;-1:-1;;139:12;;;;98:2;89:12;;;;114;36:153;;;274:1;267:3;263:2;259:12;254:3;250:22;246:30;315:4;311:9;305:3;299:10;295:26;356:4;350:3;344:10;340:21;389:7;380;377:20;372:3;365:33;3:399;;;2298:37:16;;;;;;;;;;;;49:4:-1;39:7;30;26:21;22:32;13:7;6:49;2298:37:16;;;2284:52;;;;;5386:154:12;-1:-1:-1;;;;;5498:25:12;;;5475:4;5498:25;;;:18;:25;;;;;;;;:35;;;;;;;;;;;;;;;5386:154::o;9265:152::-;9322:4;9354:20;;;:11;:20;;;;;;-1:-1:-1;;;;;9354:20:12;9391:19;;;9265:152::o;735:104:7:-;822:10;735:104;:::o;15299:155:12:-;15364:24;;;;:15;:24;;;;;:29;;-1:-1:-1;;;;;;15364:29:12;-1:-1:-1;;;;;15364:29:12;;;;;;;;:24;;15417:16;15364:24;15417:7;:16::i;:::-;-1:-1:-1;;;;;15408:39:12;;;;;;;;;;;15299:155;;:::o;11837:391::-;-1:-1:-1;;;;;11916:16:12;;11908:61;;;;;-1:-1:-1;;;11908:61:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;11988:16;11996:7;11988;:16::i;:::-;11987:17;11979:58;;;;;-1:-1:-1;;;11979:58:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;12048:45;12077:1;12081:2;12085:7;12048:20;:45::i;:::-;12104:20;;;;:11;:20;;;;;;;;:25;;-1:-1:-1;;;;;;12104:25:12;-1:-1:-1;;;;;12104:25:12;;;;;;;;12139:21;;:17;:21;;;;;:33;;:31;:33::i;:::-;12188;;12213:7;;-1:-1:-1;;;;;12188:33:12;;;12205:1;;12188:33;;12205:1;;12188:33;11837:391;;:::o;9778:329::-;9863:4;9887:16;9895:7;9887;:16::i;:::-;9879:73;;;;-1:-1:-1;;;9879:73:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;9962:13;9978:16;9986:7;9978;:16::i;:::-;9962:32;;10023:5;-1:-1:-1;;;;;10012:16:12;:7;-1:-1:-1;;;;;10012:16:12;;:51;;;;10056:7;-1:-1:-1;;;;;10032:31:12;:20;10044:7;10032:11;:20::i;:::-;-1:-1:-1;;;;;10032:31:12;;10012:51;:87;;;;10067:32;10084:5;10091:7;10067:16;:32::i;:::-;10004:96;9778:329;-1:-1:-1;;;;9778:329:12:o;13152:538::-;13273:4;-1:-1:-1;;;;;13253:24:12;:16;13261:7;13253;:16::i;:::-;-1:-1:-1;;;;;13253:24:12;;13245:78;;;;-1:-1:-1;;;13245:78:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;13341:16:12;;13333:65;;;;-1:-1:-1;;;13333:65:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;13409:39;13430:4;13436:2;13440:7;13409:20;:39::i;:::-;13486:29;13503:1;13507:7;13486:8;:29::i;:::-;-1:-1:-1;;;;;13526:23:12;;;;;;:17;:23;;;;;:35;;:33;:35::i;:::-;-1:-1:-1;;;;;13571:21:12;;;;;;:17;:21;;;;;:33;;:31;:33::i;:::-;13615:20;;;;:11;:20;;;;;;:25;;-1:-1:-1;;;;;;13615:25:12;-1:-1:-1;;;;;13615:25:12;;;;;;;;;13656:27;;13615:20;;13656:27;;;;;;;13152:538;;;:::o;12409:366::-;12468:13;12484:16;12492:7;12484;:16::i;:::-;12468:32;;12511:48;12532:5;12547:1;12551:7;12511:20;:48::i;:::-;12597:29;12614:1;12618:7;12597:8;:29::i;:::-;-1:-1:-1;;;;;12637:24:12;;;;;;:17;:24;;;;;:36;;:34;:36::i;:::-;12714:1;12683:20;;;:11;:20;;;;;;:33;;-1:-1:-1;;;;;;12683:33:12;;;12732:36;12695:7;;12714:1;-1:-1:-1;;;;;12732:36:12;;;;;12714:1;;12732:36;12409:366;;:::o;1065:112:22:-;1156:14;;1065:112::o;8793:277:12:-;8910:32;8924:4;8930:2;8934:7;8910:13;:32::i;:::-;8960:48;8983:4;8989:2;8993:7;9002:5;8960:22;:48::i;:::-;8952:111;;;;-1:-1:-1;;;8952:111:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;418:181:4;547:45;574:4;580:2;584:7;547:26;:45::i;1183:178:22:-;1335:19;;1353:1;1335:19;;;1183:178::o;1367:108::-;1447:14;;:21;;1466:1;1447:21;:18;:21;:::i;:::-;1430:38;;1367:108::o;14243:1050:12:-;14363:4;14388:15;:2;-1:-1:-1;;;;;14388:13:12;;:15::i;:::-;14383:58;;-1:-1:-1;14426:4:12;14419:11;;14383:58;14510:12;14524:23;-1:-1:-1;;;;;14551:7:12;;-1:-1:-1;;;14654:12:12;:10;:12::i;:::-;14680:4;14698:7;14719:5;14559:175;;;;;;-1:-1:-1;;;;;14559:175:12;-1:-1:-1;;;;;14559:175:12;;;;;;-1:-1:-1;;;;;14559:175:12;-1:-1:-1;;;;;14559:175:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;;12:14;14559:175:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;14559:175:12;;;-1:-1:-1;;26:21;;;22:32;6:49;;14559:175:12;;;49:4:-1;25:18;;61:17;;-1:-1;;;;;182:15;-1:-1;;;;;;14559:175:12;;;179:29:-1;;;;160:49;;14551:184:12;;;14559:175;;14551:184;;-1:-1:-1;14551:184:12;;-1:-1:-1;25:18;-1:-1;14551:184:12;-1:-1:-1;14551:184:12;;-1:-1:-1;14551:184:12;;-1:-1:-1;25:18;36:153;66:2;61:3;58:11;36:153;;176:10;;164:23;;-1:-1;;139:12;;;;98:2;89:12;;;;114;36:153;;;274:1;267:3;263:2;259:12;254:3;250:22;246:30;315:4;311:9;305:3;299:10;295:26;356:4;350:3;344:10;340:21;389:7;380;377:20;372:3;365:33;3:399;;;14551:184:12;;;;;;;;;;;;;;;;;;;;;;;;12:1:-1;19;14:27;;;;67:4;61:11;56:16;;134:4;130:9;123:4;105:16;101:27;97:43;94:1;90:51;84:4;77:65;157:16;154:1;147:27;211:16;208:1;201:4;198:1;194:12;179:49;5:228;;14:27;32:4;27:9;;5:228;;14509:226:12;;;;14750:7;14745:542;;14777:17;;:21;14773:376;;14942:10;14936:17;15002:15;14989:10;14985:2;14981:19;14974:44;14891:145;15074:60;;-1:-1:-1;;;15074:60:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;14745:542;15179:13;15206:10;15195:32;;;;;15:2:-1;10:3;7:11;4:2;;;31:1;28;21:12;4:2;-1:-1;15195:32:12;-1:-1:-1;;;;;;15249:26:12;-1:-1:-1;;;15249:26:12;;-1:-1:-1;15241:35:12;;-1:-1:-1;;;15241:35:12;525:223:15;696:45;723:4;729:2;733:7;696:26;:45::i;1274:134:11:-;1332:7;1358:43;1362:1;1365;1358:43;;;;;;;;;;;;;;;;;:3;:43::i;:::-;1351:50;1274:134;-1:-1:-1;;;1274:134:11:o;685:610:21:-;745:4;1206:20;;1051:66;1245:23;;;;;;:42;;-1:-1:-1;;1272:15:21;;;1237:51;-1:-1:-1;;685:610:21:o;3448:382:16:-;3557:45;3584:4;3590:2;3594:7;3557:26;:45::i;:::-;-1:-1:-1;;;;;3617:16:16;;3613:211;;3721:19;;;;:10;:19;;;;;3715:33;;-1:-1:-1;;3715:33:16;;;;;;;;;;;:38;3711:103;;3780:19;;;;:10;:19;;;;;3773:26;;;:::i;1692:187:11:-;1778:7;1813:12;1805:6;;;;1797:29;;;;-1:-1:-1;;;1797:29:11;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;;12:14;1797:29:11;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;1848:5:11;;;1692:187::o;2832:819:14:-;2941:45;2968:4;2974:2;2978:7;2941:26;:45::i;:::-;-1:-1:-1;;;;;3001:18:14;;2997:648;;3063:40;3091:2;3095:7;3063:27;:40::i;:::-;3117;3149:7;3117:31;:40::i;:::-;2997:648;;;-1:-1:-1;;;;;3178:16:14;;3174:471;;3238:47;3271:4;3277:7;3238:32;:47::i;:::-;3441:1;3412:26;;;:17;:26;;;;;:30;3457:45;3430:7;3457:36;:45::i;3174:471::-;3533:47;3566:4;3572:7;3533:32;:47::i;:::-;3594:40;3622:2;3626:7;4274:183;-1:-1:-1;;;;;4387:16:14;;;;;;;:12;:16;;;;;;;;:23;;4358:26;;;:17;:26;;;;;:52;;;4420:16;;;39:1:-1;23:18;;45:23;;4420:30:14;;;;;;;;4274:183::o;4652:161::-;4755:10;:17;;4728:24;;;;:15;:24;;;;;:44;;;39:1:-1;23:18;;45:23;;4782:24:14;;;;;;;4652:161::o;5430:1115::-;-1:-1:-1;;;;;5717:18:14;;5692:22;5717:18;;;:12;:18;;;;;:25;:32;;5747:1;5717:32;:29;:32;:::i;:::-;5759:18;5780:26;;;:17;:26;;;;;;5692:57;;-1:-1:-1;5910:28:14;;;5906:323;;-1:-1:-1;;;;;5976:18:14;;5954:19;5976:18;;;:12;:18;;;;;:34;;5995:14;;5976:34;;;;;;;;;;;;;;5954:56;;6058:11;6025:12;:18;6038:4;-1:-1:-1;;;;;6025:18:14;-1:-1:-1;;;;;6025:18:14;;;;;;;;;;;;6044:10;6025:30;;;;;;;;;;;;;;;;;;;:44;;;;6141:30;;;:17;:30;;;;;:43;;;5906:323;-1:-1:-1;;;;;6305:18:14;;;;;;:12;:18;;;;;:24;;;;;;;;;;;;;;;;;;;;;;;;5430:1115;;;;:::o;6833:1051::-;7107:10;:17;7082:22;;7107:24;;7129:1;7107:24;:21;:24;:::i;:::-;7141:18;7162:24;;;:15;:24;;;;;;7530:10;:26;;7082:49;;-1:-1:-1;7162:24:14;;7082:49;;7530:26;;;;;;;;;;;;;;7508:48;;7592:11;7567:10;7578;7567:22;;;;;;;;;;;;;;;;;;;:36;;;;7671:28;;;:15;:28;;;;;;:41;;;7822:10;:16;;;;;;;;;;;;;;;;;;;;;;;;7876:1;7849:15;:24;7865:7;7849:24;;;;;;;;;;;:28;;;;6833:1051;;;;:::o;220:499:4:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;",
  "source": "pragma solidity ^0.6.0;\n\nimport \"@openzeppelin/contracts/token/ERC721/ERC721Full.sol\";\nimport \"@openzeppelin/contracts/token/ERC721/ERC721Burnable.sol\";\n\n/*\n    Mock contract used in the testing of tagging NFT assets\n*/\ncontract ERC721BurnableMock is ERC721Full, ERC721Burnable {\n    uint256 public tokenPointer = 0;\n\n    constructor (string memory name, string memory symbol) public ERC721Full(name, symbol) { }\n\n    function _beforeTokenTransfer(address from, address to, uint256 tokenId) internal virtual override(ERC721, ERC721Full) {\n        super._beforeTokenTransfer(from, to, tokenId);\n    }\n\n    function mint() public {\n        tokenPointer = tokenPointer + 1;\n        _mint(msg.sender, tokenPointer);\n    }\n}",
  "sourcePath": "/Users/Natalie/Projects/hashtag-contracts/contracts/mock/ERC721BurnableMock.sol",
  "ast": {
    "absolutePath": "/Users/Natalie/Projects/hashtag-contracts/contracts/mock/ERC721BurnableMock.sol",
    "exportedSymbols": {
      "ERC721BurnableMock": [
        930
      ]
    },
    "id": 931,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 871,
        "literals": [
          "solidity",
          "^",
          "0.6",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:4"
      },
      {
        "absolutePath": "@openzeppelin/contracts/token/ERC721/ERC721Full.sol",
        "file": "@openzeppelin/contracts/token/ERC721/ERC721Full.sol",
        "id": 872,
        "nodeType": "ImportDirective",
        "scope": 931,
        "sourceUnit": 3441,
        "src": "25:61:4",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@openzeppelin/contracts/token/ERC721/ERC721Burnable.sol",
        "file": "@openzeppelin/contracts/token/ERC721/ERC721Burnable.sol",
        "id": 873,
        "nodeType": "ImportDirective",
        "scope": 931,
        "sourceUnit": 3057,
        "src": "87:65:4",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 874,
              "name": "ERC721Full",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 3440,
              "src": "251:10:4",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ERC721Full_$3440",
                "typeString": "contract ERC721Full"
              }
            },
            "id": 875,
            "nodeType": "InheritanceSpecifier",
            "src": "251:10:4"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 876,
              "name": "ERC721Burnable",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 3056,
              "src": "263:14:4",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ERC721Burnable_$3056",
                "typeString": "contract ERC721Burnable"
              }
            },
            "id": 877,
            "nodeType": "InheritanceSpecifier",
            "src": "263:14:4"
          }
        ],
        "contractDependencies": [
          1787,
          2092,
          2104,
          3026,
          3056,
          3397,
          3440,
          3638,
          3746,
          3774,
          3798
        ],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 930,
        "linearizedBaseContracts": [
          930,
          3056,
          3440,
          3638,
          3798,
          3397,
          3774,
          3026,
          3746,
          2092,
          2104,
          1787
        ],
        "name": "ERC721BurnableMock",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "functionSelector": "02831651",
            "id": 880,
            "name": "tokenPointer",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 930,
            "src": "284:31:4",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 878,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "284:7:4",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "argumentTypes": null,
              "hexValue": "30",
              "id": 879,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "314:1:4",
              "subdenomination": null,
              "typeDescriptions": {
                "typeIdentifier": "t_rational_0_by_1",
                "typeString": "int_const 0"
              },
              "value": "0"
            },
            "visibility": "public"
          },
          {
            "body": {
              "id": 891,
              "nodeType": "Block",
              "src": "409:3:4",
              "statements": []
            },
            "documentation": null,
            "id": 892,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "id": 887,
                    "name": "name",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 882,
                    "src": "395:4:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  },
                  {
                    "argumentTypes": null,
                    "id": 888,
                    "name": "symbol",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 884,
                    "src": "401:6:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  }
                ],
                "id": 889,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 886,
                  "name": "ERC721Full",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 3440,
                  "src": "384:10:4",
                  "typeDescriptions": {
                    "typeIdentifier": "t_type$_t_contract$_ERC721Full_$3440_$",
                    "typeString": "type(contract ERC721Full)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "384:24:4"
              }
            ],
            "name": "",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 885,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 882,
                  "name": "name",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 892,
                  "src": "335:18:4",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 881,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "335:6:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 884,
                  "name": "symbol",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 892,
                  "src": "355:20:4",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 883,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "355:6:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "334:42:4"
            },
            "returnParameters": {
              "id": 890,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "409:0:4"
            },
            "scope": 930,
            "src": "322:90:4",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              3025,
              3439
            ],
            "body": {
              "id": 912,
              "nodeType": "Block",
              "src": "537:62:4",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 907,
                        "name": "from",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 894,
                        "src": "574:4:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 908,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 896,
                        "src": "580:2:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 909,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 898,
                        "src": "584:7:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 904,
                        "name": "super",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -25,
                        "src": "547:5:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_super$_ERC721BurnableMock_$930",
                          "typeString": "contract super ERC721BurnableMock"
                        }
                      },
                      "id": 906,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "_beforeTokenTransfer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 3439,
                      "src": "547:26:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 910,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "547:45:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 911,
                  "nodeType": "ExpressionStatement",
                  "src": "547:45:4"
                }
              ]
            },
            "documentation": null,
            "id": 913,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_beforeTokenTransfer",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 902,
              "nodeType": "OverrideSpecifier",
              "overrides": [
                {
                  "contractScope": null,
                  "id": 900,
                  "name": "ERC721",
                  "nodeType": "UserDefinedTypeName",
                  "referencedDeclaration": 3026,
                  "src": "517:6:4",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_ERC721_$3026",
                    "typeString": "contract ERC721"
                  }
                },
                {
                  "contractScope": null,
                  "id": 901,
                  "name": "ERC721Full",
                  "nodeType": "UserDefinedTypeName",
                  "referencedDeclaration": 3440,
                  "src": "525:10:4",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_ERC721Full_$3440",
                    "typeString": "contract ERC721Full"
                  }
                }
              ],
              "src": "508:28:4"
            },
            "parameters": {
              "id": 899,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 894,
                  "name": "from",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 913,
                  "src": "448:12:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 893,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "448:7:4",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 896,
                  "name": "to",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 913,
                  "src": "462:10:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 895,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "462:7:4",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 898,
                  "name": "tokenId",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 913,
                  "src": "474:15:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 897,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "474:7:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "447:43:4"
            },
            "returnParameters": {
              "id": 903,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "537:0:4"
            },
            "scope": 930,
            "src": "418:181:4",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 928,
              "nodeType": "Block",
              "src": "628:89:4",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 920,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 916,
                      "name": "tokenPointer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 880,
                      "src": "638:12:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 919,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "argumentTypes": null,
                        "id": 917,
                        "name": "tokenPointer",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 880,
                        "src": "653:12:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "+",
                      "rightExpression": {
                        "argumentTypes": null,
                        "hexValue": "31",
                        "id": 918,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "668:1:4",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        "value": "1"
                      },
                      "src": "653:16:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "638:31:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 921,
                  "nodeType": "ExpressionStatement",
                  "src": "638:31:4"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 923,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "685:3:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 924,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "685:10:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 925,
                        "name": "tokenPointer",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 880,
                        "src": "697:12:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 922,
                      "name": "_mint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2794,
                      "src": "679:5:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 926,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "679:31:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 927,
                  "nodeType": "ExpressionStatement",
                  "src": "679:31:4"
                }
              ]
            },
            "documentation": null,
            "functionSelector": "1249c58b",
            "id": 929,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "mint",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 914,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "618:2:4"
            },
            "returnParameters": {
              "id": 915,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "628:0:4"
            },
            "scope": 930,
            "src": "605:112:4",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 931,
        "src": "220:499:4"
      }
    ],
    "src": "0:719:4"
  },
  "legacyAST": {
    "absolutePath": "/Users/Natalie/Projects/hashtag-contracts/contracts/mock/ERC721BurnableMock.sol",
    "exportedSymbols": {
      "ERC721BurnableMock": [
        930
      ]
    },
    "id": 931,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 871,
        "literals": [
          "solidity",
          "^",
          "0.6",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:4"
      },
      {
        "absolutePath": "@openzeppelin/contracts/token/ERC721/ERC721Full.sol",
        "file": "@openzeppelin/contracts/token/ERC721/ERC721Full.sol",
        "id": 872,
        "nodeType": "ImportDirective",
        "scope": 931,
        "sourceUnit": 3441,
        "src": "25:61:4",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@openzeppelin/contracts/token/ERC721/ERC721Burnable.sol",
        "file": "@openzeppelin/contracts/token/ERC721/ERC721Burnable.sol",
        "id": 873,
        "nodeType": "ImportDirective",
        "scope": 931,
        "sourceUnit": 3057,
        "src": "87:65:4",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 874,
              "name": "ERC721Full",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 3440,
              "src": "251:10:4",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ERC721Full_$3440",
                "typeString": "contract ERC721Full"
              }
            },
            "id": 875,
            "nodeType": "InheritanceSpecifier",
            "src": "251:10:4"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 876,
              "name": "ERC721Burnable",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 3056,
              "src": "263:14:4",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ERC721Burnable_$3056",
                "typeString": "contract ERC721Burnable"
              }
            },
            "id": 877,
            "nodeType": "InheritanceSpecifier",
            "src": "263:14:4"
          }
        ],
        "contractDependencies": [
          1787,
          2092,
          2104,
          3026,
          3056,
          3397,
          3440,
          3638,
          3746,
          3774,
          3798
        ],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 930,
        "linearizedBaseContracts": [
          930,
          3056,
          3440,
          3638,
          3798,
          3397,
          3774,
          3026,
          3746,
          2092,
          2104,
          1787
        ],
        "name": "ERC721BurnableMock",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "functionSelector": "02831651",
            "id": 880,
            "name": "tokenPointer",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 930,
            "src": "284:31:4",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 878,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "284:7:4",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "argumentTypes": null,
              "hexValue": "30",
              "id": 879,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "314:1:4",
              "subdenomination": null,
              "typeDescriptions": {
                "typeIdentifier": "t_rational_0_by_1",
                "typeString": "int_const 0"
              },
              "value": "0"
            },
            "visibility": "public"
          },
          {
            "body": {
              "id": 891,
              "nodeType": "Block",
              "src": "409:3:4",
              "statements": []
            },
            "documentation": null,
            "id": 892,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "id": 887,
                    "name": "name",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 882,
                    "src": "395:4:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  },
                  {
                    "argumentTypes": null,
                    "id": 888,
                    "name": "symbol",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 884,
                    "src": "401:6:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  }
                ],
                "id": 889,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 886,
                  "name": "ERC721Full",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 3440,
                  "src": "384:10:4",
                  "typeDescriptions": {
                    "typeIdentifier": "t_type$_t_contract$_ERC721Full_$3440_$",
                    "typeString": "type(contract ERC721Full)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "384:24:4"
              }
            ],
            "name": "",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 885,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 882,
                  "name": "name",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 892,
                  "src": "335:18:4",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 881,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "335:6:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 884,
                  "name": "symbol",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 892,
                  "src": "355:20:4",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 883,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "355:6:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "334:42:4"
            },
            "returnParameters": {
              "id": 890,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "409:0:4"
            },
            "scope": 930,
            "src": "322:90:4",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              3025,
              3439
            ],
            "body": {
              "id": 912,
              "nodeType": "Block",
              "src": "537:62:4",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 907,
                        "name": "from",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 894,
                        "src": "574:4:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 908,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 896,
                        "src": "580:2:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 909,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 898,
                        "src": "584:7:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 904,
                        "name": "super",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -25,
                        "src": "547:5:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_super$_ERC721BurnableMock_$930",
                          "typeString": "contract super ERC721BurnableMock"
                        }
                      },
                      "id": 906,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "_beforeTokenTransfer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 3439,
                      "src": "547:26:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 910,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "547:45:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 911,
                  "nodeType": "ExpressionStatement",
                  "src": "547:45:4"
                }
              ]
            },
            "documentation": null,
            "id": 913,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_beforeTokenTransfer",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 902,
              "nodeType": "OverrideSpecifier",
              "overrides": [
                {
                  "contractScope": null,
                  "id": 900,
                  "name": "ERC721",
                  "nodeType": "UserDefinedTypeName",
                  "referencedDeclaration": 3026,
                  "src": "517:6:4",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_ERC721_$3026",
                    "typeString": "contract ERC721"
                  }
                },
                {
                  "contractScope": null,
                  "id": 901,
                  "name": "ERC721Full",
                  "nodeType": "UserDefinedTypeName",
                  "referencedDeclaration": 3440,
                  "src": "525:10:4",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_ERC721Full_$3440",
                    "typeString": "contract ERC721Full"
                  }
                }
              ],
              "src": "508:28:4"
            },
            "parameters": {
              "id": 899,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 894,
                  "name": "from",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 913,
                  "src": "448:12:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 893,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "448:7:4",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 896,
                  "name": "to",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 913,
                  "src": "462:10:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 895,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "462:7:4",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 898,
                  "name": "tokenId",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 913,
                  "src": "474:15:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 897,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "474:7:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "447:43:4"
            },
            "returnParameters": {
              "id": 903,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "537:0:4"
            },
            "scope": 930,
            "src": "418:181:4",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 928,
              "nodeType": "Block",
              "src": "628:89:4",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 920,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 916,
                      "name": "tokenPointer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 880,
                      "src": "638:12:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 919,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "argumentTypes": null,
                        "id": 917,
                        "name": "tokenPointer",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 880,
                        "src": "653:12:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "+",
                      "rightExpression": {
                        "argumentTypes": null,
                        "hexValue": "31",
                        "id": 918,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "668:1:4",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        "value": "1"
                      },
                      "src": "653:16:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "638:31:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 921,
                  "nodeType": "ExpressionStatement",
                  "src": "638:31:4"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 923,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "685:3:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 924,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "685:10:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 925,
                        "name": "tokenPointer",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 880,
                        "src": "697:12:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 922,
                      "name": "_mint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2794,
                      "src": "679:5:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 926,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "679:31:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 927,
                  "nodeType": "ExpressionStatement",
                  "src": "679:31:4"
                }
              ]
            },
            "documentation": null,
            "functionSelector": "1249c58b",
            "id": 929,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "mint",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 914,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "618:2:4"
            },
            "returnParameters": {
              "id": 915,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "628:0:4"
            },
            "scope": 930,
            "src": "605:112:4",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 931,
        "src": "220:499:4"
      }
    ],
    "src": "0:719:4"
  },
  "compiler": {
    "name": "solc",
    "version": "0.6.4+commit.1dca32f3.Emscripten.clang"
  },
  "networks": {
    "4": {
      "events": {
        "0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "owner",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "approved",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            }
          ],
          "name": "Approval",
          "type": "event"
        },
        "0x17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "owner",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "operator",
              "type": "address"
            },
            {
              "indexed": false,
              "internalType": "bool",
              "name": "approved",
              "type": "bool"
            }
          ],
          "name": "ApprovalForAll",
          "type": "event"
        },
        "0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "from",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            }
          ],
          "name": "Transfer",
          "type": "event"
        }
      },
      "links": {},
      "address": "0x0f544e04f9cf5c729D5983F3Be7374871e7EEc85",
      "transactionHash": "0x148cd789a1ce3b71cc6ea81089e7536db13903022c724c38379d8a9117c7a9b7"
    },
    "5777": {
      "events": {
        "0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "owner",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "approved",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            }
          ],
          "name": "Approval",
          "type": "event"
        },
        "0x17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "owner",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "operator",
              "type": "address"
            },
            {
              "indexed": false,
              "internalType": "bool",
              "name": "approved",
              "type": "bool"
            }
          ],
          "name": "ApprovalForAll",
          "type": "event"
        },
        "0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "from",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            }
          ],
          "name": "Transfer",
          "type": "event"
        }
      },
      "links": {},
      "address": "0xDdAC0CE12e2057F50EbCB70A19fC0500aFfa20e1",
      "transactionHash": "0xe97f8d725827736fb412b671981a61821efd8283aaf5fa84edc1b7dba5244a6b"
    }
  },
  "schemaVersion": "3.0.23",
  "updatedAt": "2020-04-08T12:48:24.474Z",
  "networkType": "ethereum",
  "devdoc": {
    "methods": {
      "approve(address,uint256)": {
        "details": "Approves another address to transfer the given token ID The zero address indicates there is no approved address. There can only be one approved address per token at a given time. Can only be called by the token owner or an approved operator.",
        "params": {
          "to": "address to be approved for the given token ID",
          "tokenId": "uint256 ID of the token to be approved"
        }
      },
      "balanceOf(address)": {
        "details": "Gets the balance of the specified address.",
        "params": {
          "owner": "address to query the balance of"
        },
        "returns": {
          "_0": "uint256 representing the amount owned by the passed address"
        }
      },
      "baseURI()": {
        "details": "Returns the base URI set via {_setBaseURI}. This will be automatically added as a preffix in {tokenURI} to each token's URI, when they are non-empty."
      },
      "burn(uint256)": {
        "details": "Burns a specific ERC721 token.",
        "params": {
          "tokenId": "uint256 id of the ERC721 token to be burned."
        }
      },
      "getApproved(uint256)": {
        "details": "Gets the approved address for a token ID, or zero if no address set Reverts if the token ID does not exist.",
        "params": {
          "tokenId": "uint256 ID of the token to query the approval of"
        },
        "returns": {
          "_0": "address currently approved for the given token ID"
        }
      },
      "isApprovedForAll(address,address)": {
        "details": "Tells whether an operator is approved by a given owner.",
        "params": {
          "operator": "operator address which you want to query the approval of",
          "owner": "owner address which you want to query the approval of"
        },
        "returns": {
          "_0": "bool whether the given operator is approved by the given owner"
        }
      },
      "name()": {
        "details": "Gets the token name.",
        "returns": {
          "_0": "string representing the token name"
        }
      },
      "ownerOf(uint256)": {
        "details": "Gets the owner of the specified token ID.",
        "params": {
          "tokenId": "uint256 ID of the token to query the owner of"
        },
        "returns": {
          "_0": "address currently marked as the owner of the given token ID"
        }
      },
      "safeTransferFrom(address,address,uint256)": {
        "details": "Safely transfers the ownership of a given token ID to another address If the target address is a contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer, and return the magic value `bytes4(keccak256(\"onERC721Received(address,address,uint256,bytes)\"))`; otherwise, the transfer is reverted. Requires the msg.sender to be the owner, approved, or operator",
        "params": {
          "from": "current owner of the token",
          "to": "address to receive the ownership of the given token ID",
          "tokenId": "uint256 ID of the token to be transferred"
        }
      },
      "safeTransferFrom(address,address,uint256,bytes)": {
        "details": "Safely transfers the ownership of a given token ID to another address If the target address is a contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer, and return the magic value `bytes4(keccak256(\"onERC721Received(address,address,uint256,bytes)\"))`; otherwise, the transfer is reverted. Requires the _msgSender() to be the owner, approved, or operator",
        "params": {
          "_data": "bytes data to send along with a safe transfer check",
          "from": "current owner of the token",
          "to": "address to receive the ownership of the given token ID",
          "tokenId": "uint256 ID of the token to be transferred"
        }
      },
      "setApprovalForAll(address,bool)": {
        "details": "Sets or unsets the approval of a given operator An operator is allowed to transfer all tokens of the sender on their behalf.",
        "params": {
          "approved": "representing the status of the approval to be set",
          "operator": "operator address to set the approval"
        }
      },
      "supportsInterface(bytes4)": {
        "details": "See {IERC165-supportsInterface}.     * Time complexity O(1), guaranteed to always use less than 30 000 gas."
      },
      "symbol()": {
        "details": "Gets the token symbol.",
        "returns": {
          "_0": "string representing the token symbol"
        }
      },
      "tokenByIndex(uint256)": {
        "details": "Gets the token ID at a given index of all the tokens in this contract Reverts if the index is greater or equal to the total number of tokens.",
        "params": {
          "index": "uint256 representing the index to be accessed of the tokens list"
        },
        "returns": {
          "_0": "uint256 token ID at the given index of the tokens list"
        }
      },
      "tokenOfOwnerByIndex(address,uint256)": {
        "details": "Gets the token ID at a given index of the tokens list of the requested owner.",
        "params": {
          "index": "uint256 representing the index to be accessed of the requested tokens list",
          "owner": "address owning the tokens list to be accessed"
        },
        "returns": {
          "_0": "uint256 token ID at the given index of the tokens list owned by the requested address"
        }
      },
      "tokenURI(uint256)": {
        "details": "Returns the URI for a given token ID. May return an empty string.     * If the token's URI is non-empty and a base URI was set (via {_setBaseURI}), it will be added to the token ID's URI as a prefix.     * Reverts if the token ID does not exist."
      },
      "totalSupply()": {
        "details": "Gets the total amount of tokens stored by the contract.",
        "returns": {
          "_0": "uint256 representing the total amount of tokens"
        }
      },
      "transferFrom(address,address,uint256)": {
        "details": "Transfers the ownership of a given token ID to another address. Usage of this method is discouraged, use {safeTransferFrom} whenever possible. Requires the msg.sender to be the owner, approved, or operator.",
        "params": {
          "from": "current owner of the token",
          "to": "address to receive the ownership of the given token ID",
          "tokenId": "uint256 ID of the token to be transferred"
        }
      }
    }
  },
  "userdoc": {
    "methods": {}
  }
}